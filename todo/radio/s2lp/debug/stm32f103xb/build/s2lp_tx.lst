ARM GAS  /tmp/ccLZDiom.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"s2lp_tx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "S2LP_Driver/s2lp_tx.c"
  18              		.section	.text.S2LP_TX_SetStaticPowerLevel,"ax",%progbits
  19              		.align	1
  20              		.global	S2LP_TX_SetStaticPowerLevel
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	S2LP_TX_SetStaticPowerLevel:
  26              	.LFB67:
   1:S2LP_Driver/s2lp_tx.c **** /*
   2:S2LP_Driver/s2lp_tx.c ****  * s2lp_tx.c
   3:S2LP_Driver/s2lp_tx.c ****  *
   4:S2LP_Driver/s2lp_tx.c ****  *  Created on: 6 wrz 2021
   5:S2LP_Driver/s2lp_tx.c ****  *      Author: steelph0enix
   6:S2LP_Driver/s2lp_tx.c ****  */
   7:S2LP_Driver/s2lp_tx.c **** 
   8:S2LP_Driver/s2lp_tx.c **** #include "bit_helpers.h"
   9:S2LP_Driver/s2lp_tx.c **** #include "s2lp_tx.h"
  10:S2LP_Driver/s2lp_tx.c **** 
  11:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetStaticPowerLevel(S2LP_Handle* handle, uint8_t power_level) {
  27              		.loc 1 11 76
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  40 0008 0B46     		mov	r3, r1
  41 000a FB70     		strb	r3, [r7, #3]
  12:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER8, power_level);
  42              		.loc 1 12 5
  43 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  44 000e 1A46     		mov	r2, r3
  45 0010 5A21     		movs	r1, #90
  46 0012 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccLZDiom.s 			page 2


  47 0014 FFF7FEFF 		bl	S2LP_WriteRegister
  13:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER7, power_level);
  48              		.loc 1 13 5
  49 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  50 001a 1A46     		mov	r2, r3
  51 001c 5B21     		movs	r1, #91
  52 001e 7868     		ldr	r0, [r7, #4]
  53 0020 FFF7FEFF 		bl	S2LP_WriteRegister
  14:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER6, power_level);
  54              		.loc 1 14 5
  55 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  56 0026 1A46     		mov	r2, r3
  57 0028 5C21     		movs	r1, #92
  58 002a 7868     		ldr	r0, [r7, #4]
  59 002c FFF7FEFF 		bl	S2LP_WriteRegister
  15:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER5, power_level);
  60              		.loc 1 15 5
  61 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  62 0032 1A46     		mov	r2, r3
  63 0034 5D21     		movs	r1, #93
  64 0036 7868     		ldr	r0, [r7, #4]
  65 0038 FFF7FEFF 		bl	S2LP_WriteRegister
  16:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER4, power_level);
  66              		.loc 1 16 5
  67 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  68 003e 1A46     		mov	r2, r3
  69 0040 5E21     		movs	r1, #94
  70 0042 7868     		ldr	r0, [r7, #4]
  71 0044 FFF7FEFF 		bl	S2LP_WriteRegister
  17:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER3, power_level);
  72              		.loc 1 17 5
  73 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  74 004a 1A46     		mov	r2, r3
  75 004c 5F21     		movs	r1, #95
  76 004e 7868     		ldr	r0, [r7, #4]
  77 0050 FFF7FEFF 		bl	S2LP_WriteRegister
  18:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER2, power_level);
  78              		.loc 1 18 5
  79 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  80 0056 1A46     		mov	r2, r3
  81 0058 6021     		movs	r1, #96
  82 005a 7868     		ldr	r0, [r7, #4]
  83 005c FFF7FEFF 		bl	S2LP_WriteRegister
  19:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER1, power_level);
  84              		.loc 1 19 5
  85 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  86 0062 1A46     		mov	r2, r3
  87 0064 6121     		movs	r1, #97
  88 0066 7868     		ldr	r0, [r7, #4]
  89 0068 FFF7FEFF 		bl	S2LP_WriteRegister
  20:S2LP_Driver/s2lp_tx.c ****     S2LP_TX_SetPowerRampStepMax(handle, 7);
  90              		.loc 1 20 5
  91 006c 0721     		movs	r1, #7
  92 006e 7868     		ldr	r0, [r7, #4]
  93 0070 FFF7FEFF 		bl	S2LP_TX_SetPowerRampStepMax
  21:S2LP_Driver/s2lp_tx.c ****     S2LP_TX_SetRampingState(handle, false);
  94              		.loc 1 21 5
ARM GAS  /tmp/ccLZDiom.s 			page 3


  95 0074 0021     		movs	r1, #0
  96 0076 7868     		ldr	r0, [r7, #4]
  97 0078 FFF7FEFF 		bl	S2LP_TX_SetRampingState
  22:S2LP_Driver/s2lp_tx.c **** }
  98              		.loc 1 22 1
  99 007c 00BF     		nop
 100 007e 0837     		adds	r7, r7, #8
 101              		.cfi_def_cfa_offset 8
 102 0080 BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0082 80BD     		pop	{r7, pc}
 106              		.cfi_endproc
 107              	.LFE67:
 109              		.section	.text.S2LP_TX_SetPowerRampSteps,"ax",%progbits
 110              		.align	1
 111              		.global	S2LP_TX_SetPowerRampSteps
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 116              	S2LP_TX_SetPowerRampSteps:
 117              	.LFB68:
  23:S2LP_Driver/s2lp_tx.c **** 
  24:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetPowerRampSteps(S2LP_Handle* handle, uint8_t steps[8]) {
 118              		.loc 1 24 71
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 8
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 82B0     		sub	sp, sp, #8
 127              		.cfi_def_cfa_offset 16
 128 0004 00AF     		add	r7, sp, #0
 129              		.cfi_def_cfa_register 7
 130 0006 7860     		str	r0, [r7, #4]
 131 0008 3960     		str	r1, [r7]
  25:S2LP_Driver/s2lp_tx.c ****     S2LP_BatchWriteRegisters(handle, S2LP_REG_PA_POWER8, steps, 8);
 132              		.loc 1 25 5
 133 000a 0823     		movs	r3, #8
 134 000c 3A68     		ldr	r2, [r7]
 135 000e 5A21     		movs	r1, #90
 136 0010 7868     		ldr	r0, [r7, #4]
 137 0012 FFF7FEFF 		bl	S2LP_BatchWriteRegisters
  26:S2LP_Driver/s2lp_tx.c **** }
 138              		.loc 1 26 1
 139 0016 00BF     		nop
 140 0018 0837     		adds	r7, r7, #8
 141              		.cfi_def_cfa_offset 8
 142 001a BD46     		mov	sp, r7
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 001c 80BD     		pop	{r7, pc}
 146              		.cfi_endproc
 147              	.LFE68:
 149              		.section	.text.S2LP_TX_SetPowerRampStepLength,"ax",%progbits
ARM GAS  /tmp/ccLZDiom.s 			page 4


 150              		.align	1
 151              		.global	S2LP_TX_SetPowerRampStepLength
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 156              	S2LP_TX_SetPowerRampStepLength:
 157              	.LFB69:
  27:S2LP_Driver/s2lp_tx.c **** 
  28:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetPowerRampStepLength(S2LP_Handle* handle, uint8_t length) {
 158              		.loc 1 28 74
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 16
 161              		@ frame_needed = 1, uses_anonymous_args = 0
 162 0000 80B5     		push	{r7, lr}
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 7, -8
 165              		.cfi_offset 14, -4
 166 0002 84B0     		sub	sp, sp, #16
 167              		.cfi_def_cfa_offset 24
 168 0004 00AF     		add	r7, sp, #0
 169              		.cfi_def_cfa_register 7
 170 0006 7860     		str	r0, [r7, #4]
 171 0008 0B46     		mov	r3, r1
 172 000a FB70     		strb	r3, [r7, #3]
  29:S2LP_Driver/s2lp_tx.c ****     if (length > 0b11) {
 173              		.loc 1 29 8
 174 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 175 000e 032B     		cmp	r3, #3
 176 0010 1BD8     		bhi	.L6
  30:S2LP_Driver/s2lp_tx.c ****         return;
  31:S2LP_Driver/s2lp_tx.c ****     }
  32:S2LP_Driver/s2lp_tx.c **** 
  33:S2LP_Driver/s2lp_tx.c ****     uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PA_POWER0);
 177              		.loc 1 33 23
 178 0012 6221     		movs	r1, #98
 179 0014 7868     		ldr	r0, [r7, #4]
 180 0016 FFF7FEFF 		bl	S2LP_ReadRegister
 181 001a 0346     		mov	r3, r0
 182 001c FB73     		strb	r3, [r7, #15]
  34:S2LP_Driver/s2lp_tx.c ****     CLEARBITS(reg_val, 0b11, 3);
 183              		.loc 1 34 5
 184 001e FB7B     		ldrb	r3, [r7, #15]
 185 0020 23F01803 		bic	r3, r3, #24
 186 0024 FB73     		strb	r3, [r7, #15]
  35:S2LP_Driver/s2lp_tx.c ****     SETBITS(reg_val, length, 0b11, 3);
 187              		.loc 1 35 5
 188 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 189 0028 DB00     		lsls	r3, r3, #3
 190 002a 5BB2     		sxtb	r3, r3
 191 002c 03F01803 		and	r3, r3, #24
 192 0030 5AB2     		sxtb	r2, r3
 193 0032 97F90F30 		ldrsb	r3, [r7, #15]
 194 0036 1343     		orrs	r3, r3, r2
 195 0038 5BB2     		sxtb	r3, r3
 196 003a FB73     		strb	r3, [r7, #15]
  36:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER0, reg_val);
 197              		.loc 1 36 5
ARM GAS  /tmp/ccLZDiom.s 			page 5


 198 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 199 003e 1A46     		mov	r2, r3
 200 0040 6221     		movs	r1, #98
 201 0042 7868     		ldr	r0, [r7, #4]
 202 0044 FFF7FEFF 		bl	S2LP_WriteRegister
 203 0048 00E0     		b	.L3
 204              	.L6:
  30:S2LP_Driver/s2lp_tx.c ****     }
 205              		.loc 1 30 9
 206 004a 00BF     		nop
 207              	.L3:
  37:S2LP_Driver/s2lp_tx.c **** }
 208              		.loc 1 37 1
 209 004c 1037     		adds	r7, r7, #16
 210              		.cfi_def_cfa_offset 8
 211 004e BD46     		mov	sp, r7
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 0050 80BD     		pop	{r7, pc}
 215              		.cfi_endproc
 216              	.LFE69:
 218              		.section	.text.S2LP_TX_SetPowerRampStepMax,"ax",%progbits
 219              		.align	1
 220              		.global	S2LP_TX_SetPowerRampStepMax
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	S2LP_TX_SetPowerRampStepMax:
 226              	.LFB70:
  38:S2LP_Driver/s2lp_tx.c **** 
  39:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetPowerRampStepMax(S2LP_Handle* handle, uint8_t max_step) {
 227              		.loc 1 39 73
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 16
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              		.cfi_def_cfa_offset 24
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 239 0006 7860     		str	r0, [r7, #4]
 240 0008 0B46     		mov	r3, r1
 241 000a FB70     		strb	r3, [r7, #3]
  40:S2LP_Driver/s2lp_tx.c ****     if (max_step > 0b111) {
 242              		.loc 1 40 8
 243 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 244 000e 072B     		cmp	r3, #7
 245 0010 1AD8     		bhi	.L10
  41:S2LP_Driver/s2lp_tx.c ****         return;
  42:S2LP_Driver/s2lp_tx.c ****     }
  43:S2LP_Driver/s2lp_tx.c **** 
  44:S2LP_Driver/s2lp_tx.c ****     uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PA_POWER0);
 246              		.loc 1 44 23
 247 0012 6221     		movs	r1, #98
ARM GAS  /tmp/ccLZDiom.s 			page 6


 248 0014 7868     		ldr	r0, [r7, #4]
 249 0016 FFF7FEFF 		bl	S2LP_ReadRegister
 250 001a 0346     		mov	r3, r0
 251 001c FB73     		strb	r3, [r7, #15]
  45:S2LP_Driver/s2lp_tx.c ****     CLEARBITS(reg_val, 0b111, 0);
 252              		.loc 1 45 5
 253 001e FB7B     		ldrb	r3, [r7, #15]
 254 0020 23F00703 		bic	r3, r3, #7
 255 0024 FB73     		strb	r3, [r7, #15]
  46:S2LP_Driver/s2lp_tx.c ****     SETBITS(reg_val, max_step, 0b111, 0);
 256              		.loc 1 46 5
 257 0026 97F90330 		ldrsb	r3, [r7, #3]
 258 002a 03F00703 		and	r3, r3, #7
 259 002e 5AB2     		sxtb	r2, r3
 260 0030 97F90F30 		ldrsb	r3, [r7, #15]
 261 0034 1343     		orrs	r3, r3, r2
 262 0036 5BB2     		sxtb	r3, r3
 263 0038 FB73     		strb	r3, [r7, #15]
  47:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER0, reg_val);
 264              		.loc 1 47 5
 265 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 266 003c 1A46     		mov	r2, r3
 267 003e 6221     		movs	r1, #98
 268 0040 7868     		ldr	r0, [r7, #4]
 269 0042 FFF7FEFF 		bl	S2LP_WriteRegister
 270 0046 00E0     		b	.L7
 271              	.L10:
  41:S2LP_Driver/s2lp_tx.c ****     }
 272              		.loc 1 41 9
 273 0048 00BF     		nop
 274              	.L7:
  48:S2LP_Driver/s2lp_tx.c **** }
 275              		.loc 1 48 1
 276 004a 1037     		adds	r7, r7, #16
 277              		.cfi_def_cfa_offset 8
 278 004c BD46     		mov	sp, r7
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 004e 80BD     		pop	{r7, pc}
 282              		.cfi_endproc
 283              	.LFE70:
 285              		.section	.text.S2LP_TX_SetRampingState,"ax",%progbits
 286              		.align	1
 287              		.global	S2LP_TX_SetRampingState
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	S2LP_TX_SetRampingState:
 293              	.LFB71:
  49:S2LP_Driver/s2lp_tx.c **** 
  50:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetRampingState(S2LP_Handle* handle, bool enabled) {
 294              		.loc 1 50 65
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 16
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 80B5     		push	{r7, lr}
 299              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccLZDiom.s 			page 7


 300              		.cfi_offset 7, -8
 301              		.cfi_offset 14, -4
 302 0002 84B0     		sub	sp, sp, #16
 303              		.cfi_def_cfa_offset 24
 304 0004 00AF     		add	r7, sp, #0
 305              		.cfi_def_cfa_register 7
 306 0006 7860     		str	r0, [r7, #4]
 307 0008 0B46     		mov	r3, r1
 308 000a FB70     		strb	r3, [r7, #3]
  51:S2LP_Driver/s2lp_tx.c ****     uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PA_POWER0);
 309              		.loc 1 51 23
 310 000c 6221     		movs	r1, #98
 311 000e 7868     		ldr	r0, [r7, #4]
 312 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 313 0014 0346     		mov	r3, r0
 314 0016 FB73     		strb	r3, [r7, #15]
  52:S2LP_Driver/s2lp_tx.c **** 
  53:S2LP_Driver/s2lp_tx.c ****     if (enabled) {
 315              		.loc 1 53 8
 316 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 317 001a 002B     		cmp	r3, #0
 318 001c 04D0     		beq	.L12
  54:S2LP_Driver/s2lp_tx.c ****         SETBIT(reg_val, 5);
 319              		.loc 1 54 9
 320 001e FB7B     		ldrb	r3, [r7, #15]
 321 0020 43F02003 		orr	r3, r3, #32
 322 0024 FB73     		strb	r3, [r7, #15]
 323 0026 03E0     		b	.L13
 324              	.L12:
  55:S2LP_Driver/s2lp_tx.c ****     }
  56:S2LP_Driver/s2lp_tx.c ****     else {
  57:S2LP_Driver/s2lp_tx.c ****         CLEARBIT(reg_val, 5);
 325              		.loc 1 57 9
 326 0028 FB7B     		ldrb	r3, [r7, #15]
 327 002a 23F02003 		bic	r3, r3, #32
 328 002e FB73     		strb	r3, [r7, #15]
 329              	.L13:
  58:S2LP_Driver/s2lp_tx.c ****     }
  59:S2LP_Driver/s2lp_tx.c **** 
  60:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER0, reg_val);
 330              		.loc 1 60 5
 331 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 332 0032 1A46     		mov	r2, r3
 333 0034 6221     		movs	r1, #98
 334 0036 7868     		ldr	r0, [r7, #4]
 335 0038 FFF7FEFF 		bl	S2LP_WriteRegister
  61:S2LP_Driver/s2lp_tx.c **** }
 336              		.loc 1 61 1
 337 003c 00BF     		nop
 338 003e 1037     		adds	r7, r7, #16
 339              		.cfi_def_cfa_offset 8
 340 0040 BD46     		mov	sp, r7
 341              		.cfi_def_cfa_register 13
 342              		@ sp needed
 343 0042 80BD     		pop	{r7, pc}
 344              		.cfi_endproc
 345              	.LFE71:
ARM GAS  /tmp/ccLZDiom.s 			page 8


 347              		.section	.text.S2LP_TX_SetMaxPowerState,"ax",%progbits
 348              		.align	1
 349              		.global	S2LP_TX_SetMaxPowerState
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	S2LP_TX_SetMaxPowerState:
 355              	.LFB72:
  62:S2LP_Driver/s2lp_tx.c **** 
  63:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetMaxPowerState(S2LP_Handle* handle, bool enabled) {
 356              		.loc 1 63 66
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 16
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 7, -8
 363              		.cfi_offset 14, -4
 364 0002 84B0     		sub	sp, sp, #16
 365              		.cfi_def_cfa_offset 24
 366 0004 00AF     		add	r7, sp, #0
 367              		.cfi_def_cfa_register 7
 368 0006 7860     		str	r0, [r7, #4]
 369 0008 0B46     		mov	r3, r1
 370 000a FB70     		strb	r3, [r7, #3]
  64:S2LP_Driver/s2lp_tx.c ****     uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PA_POWER0);
 371              		.loc 1 64 23
 372 000c 6221     		movs	r1, #98
 373 000e 7868     		ldr	r0, [r7, #4]
 374 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 375 0014 0346     		mov	r3, r0
 376 0016 FB73     		strb	r3, [r7, #15]
  65:S2LP_Driver/s2lp_tx.c **** 
  66:S2LP_Driver/s2lp_tx.c ****     if (enabled) {
 377              		.loc 1 66 8
 378 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 379 001a 002B     		cmp	r3, #0
 380 001c 04D0     		beq	.L15
  67:S2LP_Driver/s2lp_tx.c ****         SETBIT(reg_val, 6);
 381              		.loc 1 67 9
 382 001e FB7B     		ldrb	r3, [r7, #15]
 383 0020 43F04003 		orr	r3, r3, #64
 384 0024 FB73     		strb	r3, [r7, #15]
 385 0026 03E0     		b	.L16
 386              	.L15:
  68:S2LP_Driver/s2lp_tx.c ****     }
  69:S2LP_Driver/s2lp_tx.c ****     else {
  70:S2LP_Driver/s2lp_tx.c ****         CLEARBIT(reg_val, 6);
 387              		.loc 1 70 9
 388 0028 FB7B     		ldrb	r3, [r7, #15]
 389 002a 23F04003 		bic	r3, r3, #64
 390 002e FB73     		strb	r3, [r7, #15]
 391              	.L16:
  71:S2LP_Driver/s2lp_tx.c ****     }
  72:S2LP_Driver/s2lp_tx.c **** 
  73:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PA_POWER0, reg_val);
 392              		.loc 1 73 5
ARM GAS  /tmp/ccLZDiom.s 			page 9


 393 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 394 0032 1A46     		mov	r2, r3
 395 0034 6221     		movs	r1, #98
 396 0036 7868     		ldr	r0, [r7, #4]
 397 0038 FFF7FEFF 		bl	S2LP_WriteRegister
  74:S2LP_Driver/s2lp_tx.c **** }
 398              		.loc 1 74 1
 399 003c 00BF     		nop
 400 003e 1037     		adds	r7, r7, #16
 401              		.cfi_def_cfa_offset 8
 402 0040 BD46     		mov	sp, r7
 403              		.cfi_def_cfa_register 13
 404              		@ sp needed
 405 0042 80BD     		pop	{r7, pc}
 406              		.cfi_endproc
 407              	.LFE72:
 409              		.section	.text.S2LP_TX_SetRampingInterpolationState,"ax",%progbits
 410              		.align	1
 411              		.global	S2LP_TX_SetRampingInterpolationState
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 416              	S2LP_TX_SetRampingInterpolationState:
 417              	.LFB73:
  75:S2LP_Driver/s2lp_tx.c **** 
  76:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetRampingInterpolationState(S2LP_Handle* handle, bool enabled) {
 418              		.loc 1 76 78
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 16
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 80B5     		push	{r7, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 7, -8
 425              		.cfi_offset 14, -4
 426 0002 84B0     		sub	sp, sp, #16
 427              		.cfi_def_cfa_offset 24
 428 0004 00AF     		add	r7, sp, #0
 429              		.cfi_def_cfa_register 7
 430 0006 7860     		str	r0, [r7, #4]
 431 0008 0B46     		mov	r3, r1
 432 000a FB70     		strb	r3, [r7, #3]
  77:S2LP_Driver/s2lp_tx.c ****     uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_MOD1);
 433              		.loc 1 77 23
 434 000c 1121     		movs	r1, #17
 435 000e 7868     		ldr	r0, [r7, #4]
 436 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 437 0014 0346     		mov	r3, r0
 438 0016 FB73     		strb	r3, [r7, #15]
  78:S2LP_Driver/s2lp_tx.c ****     if (enabled) {
 439              		.loc 1 78 8
 440 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 441 001a 002B     		cmp	r3, #0
 442 001c 04D0     		beq	.L18
  79:S2LP_Driver/s2lp_tx.c ****         SETBIT(reg_val, 7);
 443              		.loc 1 79 9
 444 001e FB7B     		ldrb	r3, [r7, #15]
 445 0020 63F07F03 		orn	r3, r3, #127
ARM GAS  /tmp/ccLZDiom.s 			page 10


 446 0024 FB73     		strb	r3, [r7, #15]
 447 0026 03E0     		b	.L19
 448              	.L18:
  80:S2LP_Driver/s2lp_tx.c ****     }
  81:S2LP_Driver/s2lp_tx.c ****     else {
  82:S2LP_Driver/s2lp_tx.c ****         CLEARBIT(reg_val, 7);
 449              		.loc 1 82 9
 450 0028 FB7B     		ldrb	r3, [r7, #15]
 451 002a 03F07F03 		and	r3, r3, #127
 452 002e FB73     		strb	r3, [r7, #15]
 453              	.L19:
  83:S2LP_Driver/s2lp_tx.c ****     }
  84:S2LP_Driver/s2lp_tx.c **** 
  85:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_MOD1, reg_val);
 454              		.loc 1 85 5
 455 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 456 0032 1A46     		mov	r2, r3
 457 0034 1121     		movs	r1, #17
 458 0036 7868     		ldr	r0, [r7, #4]
 459 0038 FFF7FEFF 		bl	S2LP_WriteRegister
  86:S2LP_Driver/s2lp_tx.c **** }
 460              		.loc 1 86 1
 461 003c 00BF     		nop
 462 003e 1037     		adds	r7, r7, #16
 463              		.cfi_def_cfa_offset 8
 464 0040 BD46     		mov	sp, r7
 465              		.cfi_def_cfa_register 13
 466              		@ sp needed
 467 0042 80BD     		pop	{r7, pc}
 468              		.cfi_endproc
 469              	.LFE73:
 471              		.section	.text.S2LP_TX_SetDataSource,"ax",%progbits
 472              		.align	1
 473              		.global	S2LP_TX_SetDataSource
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 478              	S2LP_TX_SetDataSource:
 479              	.LFB74:
  87:S2LP_Driver/s2lp_tx.c **** 
  88:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetDataSource(S2LP_Handle* handle, S2LP_TX_Source source) {
 480              		.loc 1 88 72
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 16
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484 0000 80B5     		push	{r7, lr}
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 7, -8
 487              		.cfi_offset 14, -4
 488 0002 84B0     		sub	sp, sp, #16
 489              		.cfi_def_cfa_offset 24
 490 0004 00AF     		add	r7, sp, #0
 491              		.cfi_def_cfa_register 7
 492 0006 7860     		str	r0, [r7, #4]
 493 0008 0B46     		mov	r3, r1
 494 000a FB70     		strb	r3, [r7, #3]
  89:S2LP_Driver/s2lp_tx.c ****     uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL1);
ARM GAS  /tmp/ccLZDiom.s 			page 11


 495              		.loc 1 89 23
 496 000c 3021     		movs	r1, #48
 497 000e 7868     		ldr	r0, [r7, #4]
 498 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 499 0014 0346     		mov	r3, r0
 500 0016 FB73     		strb	r3, [r7, #15]
  90:S2LP_Driver/s2lp_tx.c ****     CLEARBITS(reg_val, 0b11, 2);
 501              		.loc 1 90 5
 502 0018 FB7B     		ldrb	r3, [r7, #15]
 503 001a 23F00C03 		bic	r3, r3, #12
 504 001e FB73     		strb	r3, [r7, #15]
  91:S2LP_Driver/s2lp_tx.c ****     SETBITS(reg_val, (uint8_t )source, 0b11, 2);
 505              		.loc 1 91 5
 506 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 507 0022 9B00     		lsls	r3, r3, #2
 508 0024 5BB2     		sxtb	r3, r3
 509 0026 03F00C03 		and	r3, r3, #12
 510 002a 5AB2     		sxtb	r2, r3
 511 002c 97F90F30 		ldrsb	r3, [r7, #15]
 512 0030 1343     		orrs	r3, r3, r2
 513 0032 5BB2     		sxtb	r3, r3
 514 0034 FB73     		strb	r3, [r7, #15]
  92:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL1, reg_val);
 515              		.loc 1 92 5
 516 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 517 0038 1A46     		mov	r2, r3
 518 003a 3021     		movs	r1, #48
 519 003c 7868     		ldr	r0, [r7, #4]
 520 003e FFF7FEFF 		bl	S2LP_WriteRegister
  93:S2LP_Driver/s2lp_tx.c **** }
 521              		.loc 1 93 1
 522 0042 00BF     		nop
 523 0044 1037     		adds	r7, r7, #16
 524              		.cfi_def_cfa_offset 8
 525 0046 BD46     		mov	sp, r7
 526              		.cfi_def_cfa_register 13
 527              		@ sp needed
 528 0048 80BD     		pop	{r7, pc}
 529              		.cfi_endproc
 530              	.LFE74:
 532              		.section	.text.S2LP_TX_SetFIFOAlmostFullThreshold,"ax",%progbits
 533              		.align	1
 534              		.global	S2LP_TX_SetFIFOAlmostFullThreshold
 535              		.syntax unified
 536              		.thumb
 537              		.thumb_func
 539              	S2LP_TX_SetFIFOAlmostFullThreshold:
 540              	.LFB75:
  94:S2LP_Driver/s2lp_tx.c **** 
  95:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetFIFOAlmostFullThreshold(S2LP_Handle* handle, uint8_t threshold) {
 541              		.loc 1 95 81
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 16
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545 0000 80B5     		push	{r7, lr}
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 7, -8
ARM GAS  /tmp/ccLZDiom.s 			page 12


 548              		.cfi_offset 14, -4
 549 0002 84B0     		sub	sp, sp, #16
 550              		.cfi_def_cfa_offset 24
 551 0004 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 553 0006 7860     		str	r0, [r7, #4]
 554 0008 0B46     		mov	r3, r1
 555 000a FB70     		strb	r3, [r7, #3]
  96:S2LP_Driver/s2lp_tx.c ****     uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_FIFO_CONFIG1);
 556              		.loc 1 96 23
 557 000c 3E21     		movs	r1, #62
 558 000e 7868     		ldr	r0, [r7, #4]
 559 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 560 0014 0346     		mov	r3, r0
 561 0016 FB73     		strb	r3, [r7, #15]
  97:S2LP_Driver/s2lp_tx.c **** 
  98:S2LP_Driver/s2lp_tx.c ****     CLEARBITS(reg_val, 0b1111111, 0);
 562              		.loc 1 98 5
 563 0018 FB7B     		ldrb	r3, [r7, #15]
 564 001a 23F07F03 		bic	r3, r3, #127
 565 001e FB73     		strb	r3, [r7, #15]
  99:S2LP_Driver/s2lp_tx.c ****     SETBITS(reg_val, threshold, 0b1111111, 0);
 566              		.loc 1 99 5
 567 0020 97F90330 		ldrsb	r3, [r7, #3]
 568 0024 03F07F03 		and	r3, r3, #127
 569 0028 5AB2     		sxtb	r2, r3
 570 002a 97F90F30 		ldrsb	r3, [r7, #15]
 571 002e 1343     		orrs	r3, r3, r2
 572 0030 5BB2     		sxtb	r3, r3
 573 0032 FB73     		strb	r3, [r7, #15]
 100:S2LP_Driver/s2lp_tx.c **** 
 101:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_FIFO_CONFIG1, reg_val);
 574              		.loc 1 101 5
 575 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 576 0036 1A46     		mov	r2, r3
 577 0038 3E21     		movs	r1, #62
 578 003a 7868     		ldr	r0, [r7, #4]
 579 003c FFF7FEFF 		bl	S2LP_WriteRegister
 102:S2LP_Driver/s2lp_tx.c **** }
 580              		.loc 1 102 1
 581 0040 00BF     		nop
 582 0042 1037     		adds	r7, r7, #16
 583              		.cfi_def_cfa_offset 8
 584 0044 BD46     		mov	sp, r7
 585              		.cfi_def_cfa_register 13
 586              		@ sp needed
 587 0046 80BD     		pop	{r7, pc}
 588              		.cfi_endproc
 589              	.LFE75:
 591              		.section	.text.S2LP_TX_SetFIFOAlmostEmptyThreshold,"ax",%progbits
 592              		.align	1
 593              		.global	S2LP_TX_SetFIFOAlmostEmptyThreshold
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 598              	S2LP_TX_SetFIFOAlmostEmptyThreshold:
 599              	.LFB76:
ARM GAS  /tmp/ccLZDiom.s 			page 13


 103:S2LP_Driver/s2lp_tx.c **** 
 104:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetFIFOAlmostEmptyThreshold(S2LP_Handle* handle, uint8_t threshold) {
 600              		.loc 1 104 82
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 16
 603              		@ frame_needed = 1, uses_anonymous_args = 0
 604 0000 80B5     		push	{r7, lr}
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 608 0002 84B0     		sub	sp, sp, #16
 609              		.cfi_def_cfa_offset 24
 610 0004 00AF     		add	r7, sp, #0
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 613 0008 0B46     		mov	r3, r1
 614 000a FB70     		strb	r3, [r7, #3]
 105:S2LP_Driver/s2lp_tx.c ****     uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_FIFO_CONFIG0);
 615              		.loc 1 105 23
 616 000c 3F21     		movs	r1, #63
 617 000e 7868     		ldr	r0, [r7, #4]
 618 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 619 0014 0346     		mov	r3, r0
 620 0016 FB73     		strb	r3, [r7, #15]
 106:S2LP_Driver/s2lp_tx.c **** 
 107:S2LP_Driver/s2lp_tx.c ****     CLEARBITS(reg_val, 0b1111111, 0);
 621              		.loc 1 107 5
 622 0018 FB7B     		ldrb	r3, [r7, #15]
 623 001a 23F07F03 		bic	r3, r3, #127
 624 001e FB73     		strb	r3, [r7, #15]
 108:S2LP_Driver/s2lp_tx.c ****     SETBITS(reg_val, threshold, 0b1111111, 0);
 625              		.loc 1 108 5
 626 0020 97F90330 		ldrsb	r3, [r7, #3]
 627 0024 03F07F03 		and	r3, r3, #127
 628 0028 5AB2     		sxtb	r2, r3
 629 002a 97F90F30 		ldrsb	r3, [r7, #15]
 630 002e 1343     		orrs	r3, r3, r2
 631 0030 5BB2     		sxtb	r3, r3
 632 0032 FB73     		strb	r3, [r7, #15]
 109:S2LP_Driver/s2lp_tx.c **** 
 110:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_FIFO_CONFIG0, reg_val);
 633              		.loc 1 110 5
 634 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635 0036 1A46     		mov	r2, r3
 636 0038 3F21     		movs	r1, #63
 637 003a 7868     		ldr	r0, [r7, #4]
 638 003c FFF7FEFF 		bl	S2LP_WriteRegister
 111:S2LP_Driver/s2lp_tx.c **** }
 639              		.loc 1 111 1
 640 0040 00BF     		nop
 641 0042 1037     		adds	r7, r7, #16
 642              		.cfi_def_cfa_offset 8
 643 0044 BD46     		mov	sp, r7
 644              		.cfi_def_cfa_register 13
 645              		@ sp needed
 646 0046 80BD     		pop	{r7, pc}
 647              		.cfi_endproc
ARM GAS  /tmp/ccLZDiom.s 			page 14


 648              	.LFE76:
 650              		.section	.text.S2LP_TX_SetRetransmissionTries,"ax",%progbits
 651              		.align	1
 652              		.global	S2LP_TX_SetRetransmissionTries
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 657              	S2LP_TX_SetRetransmissionTries:
 658              	.LFB77:
 112:S2LP_Driver/s2lp_tx.c **** 
 113:S2LP_Driver/s2lp_tx.c **** void S2LP_TX_SetRetransmissionTries(S2LP_Handle* handle, uint8_t tries) {
 659              		.loc 1 113 73
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 16
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663 0000 80B5     		push	{r7, lr}
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 7, -8
 666              		.cfi_offset 14, -4
 667 0002 84B0     		sub	sp, sp, #16
 668              		.cfi_def_cfa_offset 24
 669 0004 00AF     		add	r7, sp, #0
 670              		.cfi_def_cfa_register 7
 671 0006 7860     		str	r0, [r7, #4]
 672 0008 0B46     		mov	r3, r1
 673 000a FB70     		strb	r3, [r7, #3]
 114:S2LP_Driver/s2lp_tx.c ****     if (tries > 15) {
 674              		.loc 1 114 8
 675 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 676 000e 0F2B     		cmp	r3, #15
 677 0010 18D8     		bhi	.L26
 115:S2LP_Driver/s2lp_tx.c ****         return;
 116:S2LP_Driver/s2lp_tx.c ****     }
 117:S2LP_Driver/s2lp_tx.c **** 
 118:S2LP_Driver/s2lp_tx.c ****     uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PROTOCOL0);
 678              		.loc 1 118 23
 679 0012 3B21     		movs	r1, #59
 680 0014 7868     		ldr	r0, [r7, #4]
 681 0016 FFF7FEFF 		bl	S2LP_ReadRegister
 682 001a 0346     		mov	r3, r0
 683 001c FB73     		strb	r3, [r7, #15]
 119:S2LP_Driver/s2lp_tx.c **** 
 120:S2LP_Driver/s2lp_tx.c ****     CLEARBITS(reg_val, 0xF, 4);
 684              		.loc 1 120 5
 685 001e FB7B     		ldrb	r3, [r7, #15]
 686 0020 03F00F03 		and	r3, r3, #15
 687 0024 FB73     		strb	r3, [r7, #15]
 121:S2LP_Driver/s2lp_tx.c ****     SETBITS(reg_val, tries, 0xF, 4);
 688              		.loc 1 121 5
 689 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 690 0028 1B01     		lsls	r3, r3, #4
 691 002a 5AB2     		sxtb	r2, r3
 692 002c 97F90F30 		ldrsb	r3, [r7, #15]
 693 0030 1343     		orrs	r3, r3, r2
 694 0032 5BB2     		sxtb	r3, r3
 695 0034 FB73     		strb	r3, [r7, #15]
 122:S2LP_Driver/s2lp_tx.c **** 
ARM GAS  /tmp/ccLZDiom.s 			page 15


 123:S2LP_Driver/s2lp_tx.c ****     S2LP_WriteRegister(handle, S2LP_REG_PROTOCOL0, reg_val);
 696              		.loc 1 123 5
 697 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 698 0038 1A46     		mov	r2, r3
 699 003a 3B21     		movs	r1, #59
 700 003c 7868     		ldr	r0, [r7, #4]
 701 003e FFF7FEFF 		bl	S2LP_WriteRegister
 702 0042 00E0     		b	.L23
 703              	.L26:
 115:S2LP_Driver/s2lp_tx.c ****     }
 704              		.loc 1 115 9
 705 0044 00BF     		nop
 706              	.L23:
 124:S2LP_Driver/s2lp_tx.c **** }
 707              		.loc 1 124 1
 708 0046 1037     		adds	r7, r7, #16
 709              		.cfi_def_cfa_offset 8
 710 0048 BD46     		mov	sp, r7
 711              		.cfi_def_cfa_register 13
 712              		@ sp needed
 713 004a 80BD     		pop	{r7, pc}
 714              		.cfi_endproc
 715              	.LFE77:
 717              		.section	.text.S2LP_TX_GetPowerRampStepLength,"ax",%progbits
 718              		.align	1
 719              		.global	S2LP_TX_GetPowerRampStepLength
 720              		.syntax unified
 721              		.thumb
 722              		.thumb_func
 724              	S2LP_TX_GetPowerRampStepLength:
 725              	.LFB78:
 125:S2LP_Driver/s2lp_tx.c **** 
 126:S2LP_Driver/s2lp_tx.c **** uint8_t S2LP_TX_GetPowerRampStepLength(S2LP_Handle* handle) {
 726              		.loc 1 126 61
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 16
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 84B0     		sub	sp, sp, #16
 735              		.cfi_def_cfa_offset 24
 736 0004 00AF     		add	r7, sp, #0
 737              		.cfi_def_cfa_register 7
 738 0006 7860     		str	r0, [r7, #4]
 127:S2LP_Driver/s2lp_tx.c ****     uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PA_POWER0);
 739              		.loc 1 127 29
 740 0008 6221     		movs	r1, #98
 741 000a 7868     		ldr	r0, [r7, #4]
 742 000c FFF7FEFF 		bl	S2LP_ReadRegister
 743 0010 0346     		mov	r3, r0
 744 0012 FB73     		strb	r3, [r7, #15]
 128:S2LP_Driver/s2lp_tx.c ****     return (uint8_t) GETBITS(reg_val, 0b11, 3);
 745              		.loc 1 128 22
 746 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 747 0016 DB10     		asrs	r3, r3, #3
ARM GAS  /tmp/ccLZDiom.s 			page 16


 748              		.loc 1 128 12
 749 0018 DBB2     		uxtb	r3, r3
 750 001a 03F00303 		and	r3, r3, #3
 751 001e DBB2     		uxtb	r3, r3
 129:S2LP_Driver/s2lp_tx.c **** }
 752              		.loc 1 129 1
 753 0020 1846     		mov	r0, r3
 754 0022 1037     		adds	r7, r7, #16
 755              		.cfi_def_cfa_offset 8
 756 0024 BD46     		mov	sp, r7
 757              		.cfi_def_cfa_register 13
 758              		@ sp needed
 759 0026 80BD     		pop	{r7, pc}
 760              		.cfi_endproc
 761              	.LFE78:
 763              		.section	.text.S2LP_TX_GetPowerRampStepMax,"ax",%progbits
 764              		.align	1
 765              		.global	S2LP_TX_GetPowerRampStepMax
 766              		.syntax unified
 767              		.thumb
 768              		.thumb_func
 770              	S2LP_TX_GetPowerRampStepMax:
 771              	.LFB79:
 130:S2LP_Driver/s2lp_tx.c **** 
 131:S2LP_Driver/s2lp_tx.c **** uint8_t S2LP_TX_GetPowerRampStepMax(S2LP_Handle* handle) {
 772              		.loc 1 131 58
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 16
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776 0000 80B5     		push	{r7, lr}
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 7, -8
 779              		.cfi_offset 14, -4
 780 0002 84B0     		sub	sp, sp, #16
 781              		.cfi_def_cfa_offset 24
 782 0004 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
 784 0006 7860     		str	r0, [r7, #4]
 132:S2LP_Driver/s2lp_tx.c ****     uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PA_POWER0);
 785              		.loc 1 132 29
 786 0008 6221     		movs	r1, #98
 787 000a 7868     		ldr	r0, [r7, #4]
 788 000c FFF7FEFF 		bl	S2LP_ReadRegister
 789 0010 0346     		mov	r3, r0
 790 0012 FB73     		strb	r3, [r7, #15]
 133:S2LP_Driver/s2lp_tx.c ****     return (uint8_t) GETBITS(reg_val, 0b111, 0);
 791              		.loc 1 133 12
 792 0014 FB7B     		ldrb	r3, [r7, #15]
 793 0016 03F00703 		and	r3, r3, #7
 794 001a DBB2     		uxtb	r3, r3
 134:S2LP_Driver/s2lp_tx.c **** }
 795              		.loc 1 134 1
 796 001c 1846     		mov	r0, r3
 797 001e 1037     		adds	r7, r7, #16
 798              		.cfi_def_cfa_offset 8
 799 0020 BD46     		mov	sp, r7
 800              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccLZDiom.s 			page 17


 801              		@ sp needed
 802 0022 80BD     		pop	{r7, pc}
 803              		.cfi_endproc
 804              	.LFE79:
 806              		.section	.text.S2LP_TX_GetRampingState,"ax",%progbits
 807              		.align	1
 808              		.global	S2LP_TX_GetRampingState
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 813              	S2LP_TX_GetRampingState:
 814              	.LFB80:
 135:S2LP_Driver/s2lp_tx.c **** 
 136:S2LP_Driver/s2lp_tx.c **** bool S2LP_TX_GetRampingState(S2LP_Handle* handle) {
 815              		.loc 1 136 51
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 16
 818              		@ frame_needed = 1, uses_anonymous_args = 0
 819 0000 80B5     		push	{r7, lr}
 820              		.cfi_def_cfa_offset 8
 821              		.cfi_offset 7, -8
 822              		.cfi_offset 14, -4
 823 0002 84B0     		sub	sp, sp, #16
 824              		.cfi_def_cfa_offset 24
 825 0004 00AF     		add	r7, sp, #0
 826              		.cfi_def_cfa_register 7
 827 0006 7860     		str	r0, [r7, #4]
 137:S2LP_Driver/s2lp_tx.c ****     uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PA_POWER0);
 828              		.loc 1 137 29
 829 0008 6221     		movs	r1, #98
 830 000a 7868     		ldr	r0, [r7, #4]
 831 000c FFF7FEFF 		bl	S2LP_ReadRegister
 832 0010 0346     		mov	r3, r0
 833 0012 FB73     		strb	r3, [r7, #15]
 138:S2LP_Driver/s2lp_tx.c ****     return (bool) GETBIT(reg_val, 5);
 834              		.loc 1 138 12
 835 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 836 0016 03F02003 		and	r3, r3, #32
 837 001a 002B     		cmp	r3, #0
 838 001c 14BF     		ite	ne
 839 001e 0123     		movne	r3, #1
 840 0020 0023     		moveq	r3, #0
 841 0022 DBB2     		uxtb	r3, r3
 139:S2LP_Driver/s2lp_tx.c **** }
 842              		.loc 1 139 1
 843 0024 1846     		mov	r0, r3
 844 0026 1037     		adds	r7, r7, #16
 845              		.cfi_def_cfa_offset 8
 846 0028 BD46     		mov	sp, r7
 847              		.cfi_def_cfa_register 13
 848              		@ sp needed
 849 002a 80BD     		pop	{r7, pc}
 850              		.cfi_endproc
 851              	.LFE80:
 853              		.section	.text.S2LP_TX_GetMaxPowerState,"ax",%progbits
 854              		.align	1
 855              		.global	S2LP_TX_GetMaxPowerState
ARM GAS  /tmp/ccLZDiom.s 			page 18


 856              		.syntax unified
 857              		.thumb
 858              		.thumb_func
 860              	S2LP_TX_GetMaxPowerState:
 861              	.LFB81:
 140:S2LP_Driver/s2lp_tx.c **** 
 141:S2LP_Driver/s2lp_tx.c **** bool S2LP_TX_GetMaxPowerState(S2LP_Handle* handle) {
 862              		.loc 1 141 52
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 16
 865              		@ frame_needed = 1, uses_anonymous_args = 0
 866 0000 80B5     		push	{r7, lr}
 867              		.cfi_def_cfa_offset 8
 868              		.cfi_offset 7, -8
 869              		.cfi_offset 14, -4
 870 0002 84B0     		sub	sp, sp, #16
 871              		.cfi_def_cfa_offset 24
 872 0004 00AF     		add	r7, sp, #0
 873              		.cfi_def_cfa_register 7
 874 0006 7860     		str	r0, [r7, #4]
 142:S2LP_Driver/s2lp_tx.c ****     uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PA_POWER0);
 875              		.loc 1 142 29
 876 0008 6221     		movs	r1, #98
 877 000a 7868     		ldr	r0, [r7, #4]
 878 000c FFF7FEFF 		bl	S2LP_ReadRegister
 879 0010 0346     		mov	r3, r0
 880 0012 FB73     		strb	r3, [r7, #15]
 143:S2LP_Driver/s2lp_tx.c ****     return (bool) GETBIT(reg_val, 6);
 881              		.loc 1 143 12
 882 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 883 0016 03F04003 		and	r3, r3, #64
 884 001a 002B     		cmp	r3, #0
 885 001c 14BF     		ite	ne
 886 001e 0123     		movne	r3, #1
 887 0020 0023     		moveq	r3, #0
 888 0022 DBB2     		uxtb	r3, r3
 144:S2LP_Driver/s2lp_tx.c **** }
 889              		.loc 1 144 1
 890 0024 1846     		mov	r0, r3
 891 0026 1037     		adds	r7, r7, #16
 892              		.cfi_def_cfa_offset 8
 893 0028 BD46     		mov	sp, r7
 894              		.cfi_def_cfa_register 13
 895              		@ sp needed
 896 002a 80BD     		pop	{r7, pc}
 897              		.cfi_endproc
 898              	.LFE81:
 900              		.section	.text.S2LP_TX_GetRampingInterpolationState,"ax",%progbits
 901              		.align	1
 902              		.global	S2LP_TX_GetRampingInterpolationState
 903              		.syntax unified
 904              		.thumb
 905              		.thumb_func
 907              	S2LP_TX_GetRampingInterpolationState:
 908              	.LFB82:
 145:S2LP_Driver/s2lp_tx.c **** 
 146:S2LP_Driver/s2lp_tx.c **** bool S2LP_TX_GetRampingInterpolationState(S2LP_Handle* handle) {
ARM GAS  /tmp/ccLZDiom.s 			page 19


 909              		.loc 1 146 64
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 16
 912              		@ frame_needed = 1, uses_anonymous_args = 0
 913 0000 80B5     		push	{r7, lr}
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 84B0     		sub	sp, sp, #16
 918              		.cfi_def_cfa_offset 24
 919 0004 00AF     		add	r7, sp, #0
 920              		.cfi_def_cfa_register 7
 921 0006 7860     		str	r0, [r7, #4]
 147:S2LP_Driver/s2lp_tx.c ****     uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_MOD1);
 922              		.loc 1 147 29
 923 0008 1121     		movs	r1, #17
 924 000a 7868     		ldr	r0, [r7, #4]
 925 000c FFF7FEFF 		bl	S2LP_ReadRegister
 926 0010 0346     		mov	r3, r0
 927 0012 FB73     		strb	r3, [r7, #15]
 148:S2LP_Driver/s2lp_tx.c ****     return GETBIT(reg_val, 7);
 928              		.loc 1 148 12
 929 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 930 0016 DB09     		lsrs	r3, r3, #7
 931 0018 DBB2     		uxtb	r3, r3
 932 001a 002B     		cmp	r3, #0
 933 001c 14BF     		ite	ne
 934 001e 0123     		movne	r3, #1
 935 0020 0023     		moveq	r3, #0
 936 0022 DBB2     		uxtb	r3, r3
 149:S2LP_Driver/s2lp_tx.c **** }
 937              		.loc 1 149 1
 938 0024 1846     		mov	r0, r3
 939 0026 1037     		adds	r7, r7, #16
 940              		.cfi_def_cfa_offset 8
 941 0028 BD46     		mov	sp, r7
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 002a 80BD     		pop	{r7, pc}
 945              		.cfi_endproc
 946              	.LFE82:
 948              		.section	.text.S2LP_TX_GetDataSource,"ax",%progbits
 949              		.align	1
 950              		.global	S2LP_TX_GetDataSource
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 955              	S2LP_TX_GetDataSource:
 956              	.LFB83:
 150:S2LP_Driver/s2lp_tx.c **** 
 151:S2LP_Driver/s2lp_tx.c **** S2LP_TX_Source S2LP_TX_GetDataSource(S2LP_Handle* handle) {
 957              		.loc 1 151 59
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 16
 960              		@ frame_needed = 1, uses_anonymous_args = 0
 961 0000 80B5     		push	{r7, lr}
 962              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccLZDiom.s 			page 20


 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 84B0     		sub	sp, sp, #16
 966              		.cfi_def_cfa_offset 24
 967 0004 00AF     		add	r7, sp, #0
 968              		.cfi_def_cfa_register 7
 969 0006 7860     		str	r0, [r7, #4]
 152:S2LP_Driver/s2lp_tx.c ****     uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL1);
 970              		.loc 1 152 29
 971 0008 3021     		movs	r1, #48
 972 000a 7868     		ldr	r0, [r7, #4]
 973 000c FFF7FEFF 		bl	S2LP_ReadRegister
 974 0010 0346     		mov	r3, r0
 975 0012 FB73     		strb	r3, [r7, #15]
 153:S2LP_Driver/s2lp_tx.c ****     return (S2LP_TX_Source) GETBITS(reg_val, 0b11, 2);
 976              		.loc 1 153 29
 977 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 978 0016 9B10     		asrs	r3, r3, #2
 979 0018 03F00303 		and	r3, r3, #3
 980              		.loc 1 153 12
 981 001c DBB2     		uxtb	r3, r3
 154:S2LP_Driver/s2lp_tx.c **** }
 982              		.loc 1 154 1
 983 001e 1846     		mov	r0, r3
 984 0020 1037     		adds	r7, r7, #16
 985              		.cfi_def_cfa_offset 8
 986 0022 BD46     		mov	sp, r7
 987              		.cfi_def_cfa_register 13
 988              		@ sp needed
 989 0024 80BD     		pop	{r7, pc}
 990              		.cfi_endproc
 991              	.LFE83:
 993              		.section	.text.S2LP_TX_GetFIFOAlmostFullThreshold,"ax",%progbits
 994              		.align	1
 995              		.global	S2LP_TX_GetFIFOAlmostFullThreshold
 996              		.syntax unified
 997              		.thumb
 998              		.thumb_func
 1000              	S2LP_TX_GetFIFOAlmostFullThreshold:
 1001              	.LFB84:
 155:S2LP_Driver/s2lp_tx.c **** 
 156:S2LP_Driver/s2lp_tx.c **** uint8_t S2LP_TX_GetFIFOAlmostFullThreshold(S2LP_Handle* handle) {
 1002              		.loc 1 156 65
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 16
 1005              		@ frame_needed = 1, uses_anonymous_args = 0
 1006 0000 80B5     		push	{r7, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 7, -8
 1009              		.cfi_offset 14, -4
 1010 0002 84B0     		sub	sp, sp, #16
 1011              		.cfi_def_cfa_offset 24
 1012 0004 00AF     		add	r7, sp, #0
 1013              		.cfi_def_cfa_register 7
 1014 0006 7860     		str	r0, [r7, #4]
 157:S2LP_Driver/s2lp_tx.c ****     uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_FIFO_CONFIG1);
 1015              		.loc 1 157 29
ARM GAS  /tmp/ccLZDiom.s 			page 21


 1016 0008 3E21     		movs	r1, #62
 1017 000a 7868     		ldr	r0, [r7, #4]
 1018 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1019 0010 0346     		mov	r3, r0
 1020 0012 FB73     		strb	r3, [r7, #15]
 158:S2LP_Driver/s2lp_tx.c ****     return (uint8_t) GETBITS(reg_val, 0b1111111, 0);
 1021              		.loc 1 158 12
 1022 0014 FB7B     		ldrb	r3, [r7, #15]
 1023 0016 03F07F03 		and	r3, r3, #127
 1024 001a DBB2     		uxtb	r3, r3
 159:S2LP_Driver/s2lp_tx.c **** }
 1025              		.loc 1 159 1
 1026 001c 1846     		mov	r0, r3
 1027 001e 1037     		adds	r7, r7, #16
 1028              		.cfi_def_cfa_offset 8
 1029 0020 BD46     		mov	sp, r7
 1030              		.cfi_def_cfa_register 13
 1031              		@ sp needed
 1032 0022 80BD     		pop	{r7, pc}
 1033              		.cfi_endproc
 1034              	.LFE84:
 1036              		.section	.text.S2LP_TX_GetFIFOAlmostEmptyThreshold,"ax",%progbits
 1037              		.align	1
 1038              		.global	S2LP_TX_GetFIFOAlmostEmptyThreshold
 1039              		.syntax unified
 1040              		.thumb
 1041              		.thumb_func
 1043              	S2LP_TX_GetFIFOAlmostEmptyThreshold:
 1044              	.LFB85:
 160:S2LP_Driver/s2lp_tx.c **** 
 161:S2LP_Driver/s2lp_tx.c **** uint8_t S2LP_TX_GetFIFOAlmostEmptyThreshold(S2LP_Handle* handle) {
 1045              		.loc 1 161 66
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 16
 1048              		@ frame_needed = 1, uses_anonymous_args = 0
 1049 0000 80B5     		push	{r7, lr}
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 84B0     		sub	sp, sp, #16
 1054              		.cfi_def_cfa_offset 24
 1055 0004 00AF     		add	r7, sp, #0
 1056              		.cfi_def_cfa_register 7
 1057 0006 7860     		str	r0, [r7, #4]
 162:S2LP_Driver/s2lp_tx.c ****     uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_FIFO_CONFIG0);
 1058              		.loc 1 162 29
 1059 0008 3F21     		movs	r1, #63
 1060 000a 7868     		ldr	r0, [r7, #4]
 1061 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1062 0010 0346     		mov	r3, r0
 1063 0012 FB73     		strb	r3, [r7, #15]
 163:S2LP_Driver/s2lp_tx.c ****     return (uint8_t) GETBITS(reg_val, 0b1111111, 0);
 1064              		.loc 1 163 12
 1065 0014 FB7B     		ldrb	r3, [r7, #15]
 1066 0016 03F07F03 		and	r3, r3, #127
 1067 001a DBB2     		uxtb	r3, r3
 164:S2LP_Driver/s2lp_tx.c **** }
ARM GAS  /tmp/ccLZDiom.s 			page 22


 1068              		.loc 1 164 1
 1069 001c 1846     		mov	r0, r3
 1070 001e 1037     		adds	r7, r7, #16
 1071              		.cfi_def_cfa_offset 8
 1072 0020 BD46     		mov	sp, r7
 1073              		.cfi_def_cfa_register 13
 1074              		@ sp needed
 1075 0022 80BD     		pop	{r7, pc}
 1076              		.cfi_endproc
 1077              	.LFE85:
 1079              		.section	.text.S2LP_TX_GetFIFOCount,"ax",%progbits
 1080              		.align	1
 1081              		.global	S2LP_TX_GetFIFOCount
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1086              	S2LP_TX_GetFIFOCount:
 1087              	.LFB86:
 165:S2LP_Driver/s2lp_tx.c **** 
 166:S2LP_Driver/s2lp_tx.c **** uint8_t S2LP_TX_GetFIFOCount(S2LP_Handle* handle) {
 1088              		.loc 1 166 51
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 8
 1091              		@ frame_needed = 1, uses_anonymous_args = 0
 1092 0000 80B5     		push	{r7, lr}
 1093              		.cfi_def_cfa_offset 8
 1094              		.cfi_offset 7, -8
 1095              		.cfi_offset 14, -4
 1096 0002 82B0     		sub	sp, sp, #8
 1097              		.cfi_def_cfa_offset 16
 1098 0004 00AF     		add	r7, sp, #0
 1099              		.cfi_def_cfa_register 7
 1100 0006 7860     		str	r0, [r7, #4]
 167:S2LP_Driver/s2lp_tx.c ****     return S2LP_ReadRegister(handle, S2LP_REG_TX_FIFO_STATUS);
 1101              		.loc 1 167 12
 1102 0008 8F21     		movs	r1, #143
 1103 000a 7868     		ldr	r0, [r7, #4]
 1104 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1105 0010 0346     		mov	r3, r0
 168:S2LP_Driver/s2lp_tx.c **** }
 1106              		.loc 1 168 1
 1107 0012 1846     		mov	r0, r3
 1108 0014 0837     		adds	r7, r7, #8
 1109              		.cfi_def_cfa_offset 8
 1110 0016 BD46     		mov	sp, r7
 1111              		.cfi_def_cfa_register 13
 1112              		@ sp needed
 1113 0018 80BD     		pop	{r7, pc}
 1114              		.cfi_endproc
 1115              	.LFE86:
 1117              		.section	.text.S2LP_TX_GetRetransmissionTries,"ax",%progbits
 1118              		.align	1
 1119              		.global	S2LP_TX_GetRetransmissionTries
 1120              		.syntax unified
 1121              		.thumb
 1122              		.thumb_func
 1124              	S2LP_TX_GetRetransmissionTries:
ARM GAS  /tmp/ccLZDiom.s 			page 23


 1125              	.LFB87:
 169:S2LP_Driver/s2lp_tx.c **** 
 170:S2LP_Driver/s2lp_tx.c **** uint8_t S2LP_TX_GetRetransmissionTries(S2LP_Handle* handle) {
 1126              		.loc 1 170 61
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 16
 1129              		@ frame_needed = 1, uses_anonymous_args = 0
 1130 0000 80B5     		push	{r7, lr}
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
 1134 0002 84B0     		sub	sp, sp, #16
 1135              		.cfi_def_cfa_offset 24
 1136 0004 00AF     		add	r7, sp, #0
 1137              		.cfi_def_cfa_register 7
 1138 0006 7860     		str	r0, [r7, #4]
 171:S2LP_Driver/s2lp_tx.c ****     uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PROTOCOL0);
 1139              		.loc 1 171 29
 1140 0008 3B21     		movs	r1, #59
 1141 000a 7868     		ldr	r0, [r7, #4]
 1142 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1143 0010 0346     		mov	r3, r0
 1144 0012 FB73     		strb	r3, [r7, #15]
 172:S2LP_Driver/s2lp_tx.c ****     return (uint8_t) GETBITS(reg_val, 0xF, 4);
 1145              		.loc 1 172 12
 1146 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1147 0016 1B09     		lsrs	r3, r3, #4
 1148 0018 DBB2     		uxtb	r3, r3
 173:S2LP_Driver/s2lp_tx.c **** }
 1149              		.loc 1 173 1
 1150 001a 1846     		mov	r0, r3
 1151 001c 1037     		adds	r7, r7, #16
 1152              		.cfi_def_cfa_offset 8
 1153 001e BD46     		mov	sp, r7
 1154              		.cfi_def_cfa_register 13
 1155              		@ sp needed
 1156 0020 80BD     		pop	{r7, pc}
 1157              		.cfi_endproc
 1158              	.LFE87:
 1160              		.text
 1161              	.Letext0:
 1162              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1163              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1164              		.file 4 "S2LP_Driver/s2lp_constants.h"
 1165              		.file 5 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 1166              		.file 6 "../../../lib/libhalglue/bshal/bshal_spim.h"
 1167              		.file 7 "S2LP_Driver/s2lp_mcu_interface.h"
ARM GAS  /tmp/ccLZDiom.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 s2lp_tx.c
     /tmp/ccLZDiom.s:19     .text.S2LP_TX_SetStaticPowerLevel:0000000000000000 $t
     /tmp/ccLZDiom.s:25     .text.S2LP_TX_SetStaticPowerLevel:0000000000000000 S2LP_TX_SetStaticPowerLevel
     /tmp/ccLZDiom.s:225    .text.S2LP_TX_SetPowerRampStepMax:0000000000000000 S2LP_TX_SetPowerRampStepMax
     /tmp/ccLZDiom.s:292    .text.S2LP_TX_SetRampingState:0000000000000000 S2LP_TX_SetRampingState
     /tmp/ccLZDiom.s:110    .text.S2LP_TX_SetPowerRampSteps:0000000000000000 $t
     /tmp/ccLZDiom.s:116    .text.S2LP_TX_SetPowerRampSteps:0000000000000000 S2LP_TX_SetPowerRampSteps
     /tmp/ccLZDiom.s:150    .text.S2LP_TX_SetPowerRampStepLength:0000000000000000 $t
     /tmp/ccLZDiom.s:156    .text.S2LP_TX_SetPowerRampStepLength:0000000000000000 S2LP_TX_SetPowerRampStepLength
     /tmp/ccLZDiom.s:219    .text.S2LP_TX_SetPowerRampStepMax:0000000000000000 $t
     /tmp/ccLZDiom.s:286    .text.S2LP_TX_SetRampingState:0000000000000000 $t
     /tmp/ccLZDiom.s:348    .text.S2LP_TX_SetMaxPowerState:0000000000000000 $t
     /tmp/ccLZDiom.s:354    .text.S2LP_TX_SetMaxPowerState:0000000000000000 S2LP_TX_SetMaxPowerState
     /tmp/ccLZDiom.s:410    .text.S2LP_TX_SetRampingInterpolationState:0000000000000000 $t
     /tmp/ccLZDiom.s:416    .text.S2LP_TX_SetRampingInterpolationState:0000000000000000 S2LP_TX_SetRampingInterpolationState
     /tmp/ccLZDiom.s:472    .text.S2LP_TX_SetDataSource:0000000000000000 $t
     /tmp/ccLZDiom.s:478    .text.S2LP_TX_SetDataSource:0000000000000000 S2LP_TX_SetDataSource
     /tmp/ccLZDiom.s:533    .text.S2LP_TX_SetFIFOAlmostFullThreshold:0000000000000000 $t
     /tmp/ccLZDiom.s:539    .text.S2LP_TX_SetFIFOAlmostFullThreshold:0000000000000000 S2LP_TX_SetFIFOAlmostFullThreshold
     /tmp/ccLZDiom.s:592    .text.S2LP_TX_SetFIFOAlmostEmptyThreshold:0000000000000000 $t
     /tmp/ccLZDiom.s:598    .text.S2LP_TX_SetFIFOAlmostEmptyThreshold:0000000000000000 S2LP_TX_SetFIFOAlmostEmptyThreshold
     /tmp/ccLZDiom.s:651    .text.S2LP_TX_SetRetransmissionTries:0000000000000000 $t
     /tmp/ccLZDiom.s:657    .text.S2LP_TX_SetRetransmissionTries:0000000000000000 S2LP_TX_SetRetransmissionTries
     /tmp/ccLZDiom.s:718    .text.S2LP_TX_GetPowerRampStepLength:0000000000000000 $t
     /tmp/ccLZDiom.s:724    .text.S2LP_TX_GetPowerRampStepLength:0000000000000000 S2LP_TX_GetPowerRampStepLength
     /tmp/ccLZDiom.s:764    .text.S2LP_TX_GetPowerRampStepMax:0000000000000000 $t
     /tmp/ccLZDiom.s:770    .text.S2LP_TX_GetPowerRampStepMax:0000000000000000 S2LP_TX_GetPowerRampStepMax
     /tmp/ccLZDiom.s:807    .text.S2LP_TX_GetRampingState:0000000000000000 $t
     /tmp/ccLZDiom.s:813    .text.S2LP_TX_GetRampingState:0000000000000000 S2LP_TX_GetRampingState
     /tmp/ccLZDiom.s:854    .text.S2LP_TX_GetMaxPowerState:0000000000000000 $t
     /tmp/ccLZDiom.s:860    .text.S2LP_TX_GetMaxPowerState:0000000000000000 S2LP_TX_GetMaxPowerState
     /tmp/ccLZDiom.s:901    .text.S2LP_TX_GetRampingInterpolationState:0000000000000000 $t
     /tmp/ccLZDiom.s:907    .text.S2LP_TX_GetRampingInterpolationState:0000000000000000 S2LP_TX_GetRampingInterpolationState
     /tmp/ccLZDiom.s:949    .text.S2LP_TX_GetDataSource:0000000000000000 $t
     /tmp/ccLZDiom.s:955    .text.S2LP_TX_GetDataSource:0000000000000000 S2LP_TX_GetDataSource
     /tmp/ccLZDiom.s:994    .text.S2LP_TX_GetFIFOAlmostFullThreshold:0000000000000000 $t
     /tmp/ccLZDiom.s:1000   .text.S2LP_TX_GetFIFOAlmostFullThreshold:0000000000000000 S2LP_TX_GetFIFOAlmostFullThreshold
     /tmp/ccLZDiom.s:1037   .text.S2LP_TX_GetFIFOAlmostEmptyThreshold:0000000000000000 $t
     /tmp/ccLZDiom.s:1043   .text.S2LP_TX_GetFIFOAlmostEmptyThreshold:0000000000000000 S2LP_TX_GetFIFOAlmostEmptyThreshold
     /tmp/ccLZDiom.s:1080   .text.S2LP_TX_GetFIFOCount:0000000000000000 $t
     /tmp/ccLZDiom.s:1086   .text.S2LP_TX_GetFIFOCount:0000000000000000 S2LP_TX_GetFIFOCount
     /tmp/ccLZDiom.s:1118   .text.S2LP_TX_GetRetransmissionTries:0000000000000000 $t
     /tmp/ccLZDiom.s:1124   .text.S2LP_TX_GetRetransmissionTries:0000000000000000 S2LP_TX_GetRetransmissionTries
                           .group:0000000000000000 wm4.0.2a10468dd89b593cd64cc189d36e5bb7
                           .group:0000000000000000 wm4._newlib_version.h.4.529115dae5e4f67702b1de0b6e841f38
                           .group:0000000000000000 wm4.newlib.h.18.a58e9e86397e11d140a508f2e0db40b7
                           .group:0000000000000000 wm4.ieeefp.h.77.25247dc27dbe3b23bfe98c2dc18f6ac5
                           .group:0000000000000000 wm4.features.h.22.7877b139107948f7dadcf3660cc79cfd
                           .group:0000000000000000 wm4.config.h.224.18dfb280c62ae4ee788eb67b451eb1a6
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._ansi.h.8.aeadd4934928258a76627d21910677e3
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.stddef.h.267.6dda48f8b0edf141523347999dd9ec79
                           .group:0000000000000000 wm4.inttypes.h.28.684aa7736e7ecc9a6ffc44acc61c7a90
ARM GAS  /tmp/ccLZDiom.s 			page 25


                           .group:0000000000000000 wm4.bit_helpers.h.13.f2975869ef099390daf1922e17c656db
                           .group:0000000000000000 wm4.s2lp_mcu_interface.h.9.9eeee19d530c6ae696c504e7de7f49cd
                           .group:0000000000000000 wm4.s2lp_constants.h.9.b7f616e3835971b5021c80c1c98c29b7
                           .group:0000000000000000 wm4.stdbool.h.29.4a1c88fe569adb8d03217dd16982ca34
                           .group:0000000000000000 wm4.stddef.h.39.82585dd3f3d03c4909f3d30d8739f57e
                           .group:0000000000000000 wm4.stm32f1xx.h.39.e8c98c5ce2cd95856eed179966374e12
                           .group:0000000000000000 wm4.stm32f103xb.h.38.ec967d5ad9d3269cb0788eebda048e38
                           .group:0000000000000000 wm4.cmsis_version.h.32.0f826810625204eca22a19868bdc7586
                           .group:0000000000000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.549e8fd988111c6b396c357ef98aeb59
                           .group:0000000000000000 wm4.core_cm3.h.127.aaed3d1df272b0aa79c526153017805c
                           .group:0000000000000000 wm4.stm32f103xb.h.573.10249aa7473ca93be896fed94046a725
                           .group:0000000000000000 wm4.stm32f1xx.h.162.96b09079a093c34dbd7f0b85cbd0ddee
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.24.fb218a6cd2ee35d840b3eac0f5fb4119
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.22.3d81dc02d9b9459e9eac6fdca7f8f18e
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.56.d1c3014f99fce17329ff5ab2921c0923
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.94.78ba4ec8cedd7ba94683a5fabb61b31e
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.21.8406672c8a3f21f71eb8441fb8ecb4bd
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1201.89d14cbb1b46fba2de70512ccfd8d5ce
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.21.0099da253a68660e916195d3e8928be3
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.21.93f1f3ec7660fa76375def81b976f73c
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.262.7df79220ec7519ba80c1763e6b4854a6
                           .group:0000000000000000 wm4.stm32f1xx_hal_exti.h.21.a7f1b393a0c9b2b56b72ccdbb8dee508
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.21.11e5a204ed6aa790b1cdae2e4192bc9d
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.21.d438f745b4c04dc23f9f569190526864
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.408.14794a3f8621230c9ac7fca0cacf3e57
                           .group:0000000000000000 wm4.stm32f1xx_hal_can.h.21.d1dd4a884a3983bc975efc64fbbd5748
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.21.6ab92041a8778f53d2d2d96b3825535a
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc.h.21.8ae5a06b46334619d54b2469802d6db6
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc_ex.h.21.f5c9ba15472af26c826d75096ae3e02a
                           .group:0000000000000000 wm4.stm32f1xx_hal_crc.h.21.b5b5d61856236c32a5704a7db1b8c77f
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.21.6df147ac02cc6dec8c4706cc1a34879c
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.21.33e24ce7a8607e16d5a38297454fd963
                           .group:0000000000000000 wm4.stm32f1xx_hal_i2c.h.21.6a947c870feb456d84d10dd871ee01bd
                           .group:0000000000000000 wm4.stm32f1xx_hal_iwdg.h.21.14afe1e30714751a311b81d0791714c2
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.21.ec3e2cfd4c26fffa32fc4ff0a8ac7390
                           .group:0000000000000000 wm4.stm32f1xx_hal_rtc.h.21.833c91cab3eef49edc59fd371d3c1ce0
                           .group:0000000000000000 wm4.stm32f1xx_hal_rtc_ex.h.21.b671683f6728965b6d8404d04009ed32
                           .group:0000000000000000 wm4.stm32f1xx_hal_spi.h.21.59f3c581a47a8dea5d070b46998af27e
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.21.76f9d96f76cba41ae3b6e27311c6f5ff
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.21.ffd6508e5e0a88f651472e5c80a9d587
                           .group:0000000000000000 wm4.stm32f1xx_hal_usart.h.21.0b32d58c93817e5f10bce7603c316c1e
                           .group:0000000000000000 wm4.stm32f1xx_hal_irda.h.21.b44168150ccb55c331f6e6afe3cf4b88
                           .group:0000000000000000 wm4.stm32f1xx_hal_smartcard.h.21.d256a98de9ec7b58600da5aa4b29abdb
                           .group:0000000000000000 wm4.stm32f1xx_hal_wwdg.h.21.ac611fc4089566604f02b81297147d50
                           .group:0000000000000000 wm4.stm32f1xx_ll_usb.h.21.4cb0f3c145693f977427d01b787de0c7
                           .group:0000000000000000 wm4.stm32f1xx_hal_pcd.h.160.b1d545af3cea9ada15575c2dedd78cdc
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.87.60093b86a987865736d7cddecce3c235
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.158.bfed30416c9480cd13bc4a25427d538f
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.158.5f30652bb2ea05b142c1bbee9108c999
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
ARM GAS  /tmp/ccLZDiom.s 			page 26


                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:0000000000000000 wm4.bshal_i2cm.h.11.09ce5fde9ee09ba50563c37b9993575a
                           .group:0000000000000000 wm4.s2lp_tx.h.16.c3dd382957aac675afead280ae18647a

UNDEFINED SYMBOLS
S2LP_WriteRegister
S2LP_BatchWriteRegisters
S2LP_ReadRegister

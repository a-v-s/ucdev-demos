ARM GAS  /tmp/ccyedYby.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"s2lp_mcu_interface.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "S2LP_Driver/s2lp_mcu_interface.c"
  18              		.global	S2LP_HEADER_BYTE_WRITE
  19              		.section	.rodata.S2LP_HEADER_BYTE_WRITE,"a"
  22              	S2LP_HEADER_BYTE_WRITE:
  23 0000 00       		.space	1
  24              		.global	S2LP_HEADER_BYTE_READ
  25              		.section	.rodata.S2LP_HEADER_BYTE_READ,"a"
  28              	S2LP_HEADER_BYTE_READ:
  29 0000 01       		.byte	1
  30              		.global	S2LP_HEADER_BYTE_COMMAND
  31              		.section	.rodata.S2LP_HEADER_BYTE_COMMAND,"a"
  34              	S2LP_HEADER_BYTE_COMMAND:
  35 0000 80       		.byte	-128
  36              		.global	S2LP_RESET_TIMEOUT
  37              		.section	.rodata.S2LP_RESET_TIMEOUT,"a"
  38              		.align	2
  41              	S2LP_RESET_TIMEOUT:
  42 0000 02000000 		.word	2
  43              		.section	.text.S2LP_InitHandle,"ax",%progbits
  44              		.align	1
  45              		.global	S2LP_InitHandle
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	S2LP_InitHandle:
  51              	.LFB67:
   1:S2LP_Driver/s2lp_mcu_interface.c **** /*
   2:S2LP_Driver/s2lp_mcu_interface.c ****  * s2lp_mcu_interface.c
   3:S2LP_Driver/s2lp_mcu_interface.c ****  *
   4:S2LP_Driver/s2lp_mcu_interface.c ****  *  Created on: 28 cze 2021
   5:S2LP_Driver/s2lp_mcu_interface.c ****  *      Author: SteelPh0enixLocal
   6:S2LP_Driver/s2lp_mcu_interface.c ****  */
   7:S2LP_Driver/s2lp_mcu_interface.c **** 
   8:S2LP_Driver/s2lp_mcu_interface.c **** #include "s2lp_mcu_interface.h"
   9:S2LP_Driver/s2lp_mcu_interface.c **** //#include "main.h"
  10:S2LP_Driver/s2lp_mcu_interface.c **** //#include "cmsis_os.h"
  11:S2LP_Driver/s2lp_mcu_interface.c **** 
  12:S2LP_Driver/s2lp_mcu_interface.c **** #include <string.h>
  13:S2LP_Driver/s2lp_mcu_interface.c **** 
  14:S2LP_Driver/s2lp_mcu_interface.c **** // Low-level, internal constants
  15:S2LP_Driver/s2lp_mcu_interface.c **** 
ARM GAS  /tmp/ccyedYby.s 			page 2


  16:S2LP_Driver/s2lp_mcu_interface.c **** uint8_t const S2LP_HEADER_BYTE_WRITE = 0b00000000;
  17:S2LP_Driver/s2lp_mcu_interface.c **** uint8_t const S2LP_HEADER_BYTE_READ = 0b00000001;
  18:S2LP_Driver/s2lp_mcu_interface.c **** uint8_t const S2LP_HEADER_BYTE_COMMAND = 0b10000000;
  19:S2LP_Driver/s2lp_mcu_interface.c **** 
  20:S2LP_Driver/s2lp_mcu_interface.c **** uint32_t const S2LP_RESET_TIMEOUT = 2;
  21:S2LP_Driver/s2lp_mcu_interface.c **** 
  22:S2LP_Driver/s2lp_mcu_interface.c **** // MCU-specific functions implementation
  23:S2LP_Driver/s2lp_mcu_interface.c **** 
  24:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_InitHandle(S2LP_Handle* handle) {
  52              		.loc 1 24 43
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 8
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 82B0     		sub	sp, sp, #8
  61              		.cfi_def_cfa_offset 16
  62 0004 00AF     		add	r7, sp, #0
  63              		.cfi_def_cfa_register 7
  64 0006 7860     		str	r0, [r7, #4]
  25:S2LP_Driver/s2lp_mcu_interface.c **** 	memset(handle->status, 0, 2);
  65              		.loc 1 25 15
  66 0008 7B68     		ldr	r3, [r7, #4]
  67              		.loc 1 25 2
  68 000a 0222     		movs	r2, #2
  69 000c 0021     		movs	r1, #0
  70 000e 1846     		mov	r0, r3
  71 0010 FFF7FEFF 		bl	memset
  26:S2LP_Driver/s2lp_mcu_interface.c **** 	memset(handle->tx_buffer, 0, S2LP_TX_BUFFER_SIZE);
  72              		.loc 1 26 15
  73 0014 7B68     		ldr	r3, [r7, #4]
  74 0016 0233     		adds	r3, r3, #2
  75              		.loc 1 26 2
  76 0018 8222     		movs	r2, #130
  77 001a 0021     		movs	r1, #0
  78 001c 1846     		mov	r0, r3
  79 001e FFF7FEFF 		bl	memset
  27:S2LP_Driver/s2lp_mcu_interface.c **** 	memset(handle->rx_buffer, 0, S2LP_RX_BUFFER_SIZE);
  80              		.loc 1 27 15
  81 0022 7B68     		ldr	r3, [r7, #4]
  82 0024 8433     		adds	r3, r3, #132
  83              		.loc 1 27 2
  84 0026 8222     		movs	r2, #130
  85 0028 0021     		movs	r1, #0
  86 002a 1846     		mov	r0, r3
  87 002c FFF7FEFF 		bl	memset
  28:S2LP_Driver/s2lp_mcu_interface.c **** 
  29:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->tx_buffer_start = &(handle->tx_buffer[2]);
  88              		.loc 1 29 28
  89 0030 7B68     		ldr	r3, [r7, #4]
  90 0032 1A1D     		adds	r2, r3, #4
  91              		.loc 1 29 26
  92 0034 7B68     		ldr	r3, [r7, #4]
  93 0036 C3F80821 		str	r2, [r3, #264]
  30:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->rx_buffer_start = &(handle->rx_buffer[2]);
ARM GAS  /tmp/ccyedYby.s 			page 3


  94              		.loc 1 30 28
  95 003a 7B68     		ldr	r3, [r7, #4]
  96 003c 03F18602 		add	r2, r3, #134
  97              		.loc 1 30 26
  98 0040 7B68     		ldr	r3, [r7, #4]
  99 0042 C3F80C21 		str	r2, [r3, #268]
  31:S2LP_Driver/s2lp_mcu_interface.c **** 
  32:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->frequency = S2LP_CLOCK_FREQ_INVALID;
 100              		.loc 1 32 20
 101 0046 7B68     		ldr	r3, [r7, #4]
 102 0048 0022     		movs	r2, #0
 103 004a 83F81021 		strb	r2, [r3, #272]
  33:S2LP_Driver/s2lp_mcu_interface.c **** 
  34:S2LP_Driver/s2lp_mcu_interface.c **** 	// You can put your platform init code here
  35:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->spim_instance.frequency = 10000000; // MAX SPI speed for Si443x = 10 MHz
 104              		.loc 1 35 34
 105 004e 7B68     		ldr	r3, [r7, #4]
 106 0050 254A     		ldr	r2, .L2
 107 0052 C3F82421 		str	r2, [r3, #292]
  36:S2LP_Driver/s2lp_mcu_interface.c **** 	//radio_spi_config.frequency = 1000000;
  37:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->spim_instance.bit_order = 0; //MSB
 108              		.loc 1 37 34
 109 0056 7B68     		ldr	r3, [r7, #4]
 110 0058 0022     		movs	r2, #0
 111 005a 83F82121 		strb	r2, [r3, #289]
  38:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->spim_instance.mode = 0;
 112              		.loc 1 38 29
 113 005e 7B68     		ldr	r3, [r7, #4]
 114 0060 0022     		movs	r2, #0
 115 0062 83F82021 		strb	r2, [r3, #288]
  39:S2LP_Driver/s2lp_mcu_interface.c **** 
  40:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->spim_instance.hw_nr = 1;
 116              		.loc 1 40 30
 117 0066 7B68     		ldr	r3, [r7, #4]
 118 0068 0122     		movs	r2, #1
 119 006a 83F81821 		strb	r2, [r3, #280]
  41:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->spim_instance.sck_pin = bshal_gpio_encode_pin(GPIOA, GPIO_PIN_5);
 120              		.loc 1 41 34
 121 006e 2021     		movs	r1, #32
 122 0070 1E48     		ldr	r0, .L2+4
 123 0072 FFF7FEFF 		bl	bshal_gpio_encode_pin
 124 0076 0346     		mov	r3, r0
 125              		.loc 1 41 32
 126 0078 DAB2     		uxtb	r2, r3
 127 007a 7B68     		ldr	r3, [r7, #4]
 128 007c 83F81921 		strb	r2, [r3, #281]
  42:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->spim_instance.miso_pin = bshal_gpio_encode_pin(GPIOA, GPIO_PIN_6);
 129              		.loc 1 42 35
 130 0080 4021     		movs	r1, #64
 131 0082 1A48     		ldr	r0, .L2+4
 132 0084 FFF7FEFF 		bl	bshal_gpio_encode_pin
 133 0088 0346     		mov	r3, r0
 134              		.loc 1 42 33
 135 008a DAB2     		uxtb	r2, r3
 136 008c 7B68     		ldr	r3, [r7, #4]
 137 008e 83F81B21 		strb	r2, [r3, #283]
  43:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->spim_instance.mosi_pin = bshal_gpio_encode_pin(GPIOA, GPIO_PIN_7);
ARM GAS  /tmp/ccyedYby.s 			page 4


 138              		.loc 1 43 35
 139 0092 8021     		movs	r1, #128
 140 0094 1548     		ldr	r0, .L2+4
 141 0096 FFF7FEFF 		bl	bshal_gpio_encode_pin
 142 009a 0346     		mov	r3, r0
 143              		.loc 1 43 33
 144 009c DAB2     		uxtb	r2, r3
 145 009e 7B68     		ldr	r3, [r7, #4]
 146 00a0 83F81A21 		strb	r2, [r3, #282]
  44:S2LP_Driver/s2lp_mcu_interface.c **** 
  45:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->spim_instance.cs_pin = bshal_gpio_encode_pin(GPIOA, GPIO_PIN_4);
 147              		.loc 1 45 33
 148 00a4 1021     		movs	r1, #16
 149 00a6 1148     		ldr	r0, .L2+4
 150 00a8 FFF7FEFF 		bl	bshal_gpio_encode_pin
 151 00ac 0346     		mov	r3, r0
 152              		.loc 1 45 31
 153 00ae DAB2     		uxtb	r2, r3
 154 00b0 7B68     		ldr	r3, [r7, #4]
 155 00b2 83F81C21 		strb	r2, [r3, #284]
  46:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->spim_instance.rs_pin = bshal_gpio_encode_pin(GPIOB, GPIO_PIN_10);
 156              		.loc 1 46 33
 157 00b6 4FF48061 		mov	r1, #1024
 158 00ba 0D48     		ldr	r0, .L2+8
 159 00bc FFF7FEFF 		bl	bshal_gpio_encode_pin
 160 00c0 0346     		mov	r3, r0
 161              		.loc 1 46 31
 162 00c2 DAB2     		uxtb	r2, r3
 163 00c4 7B68     		ldr	r3, [r7, #4]
 164 00c6 83F81E21 		strb	r2, [r3, #286]
  47:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->spim_instance.rs_pol = 1;
 165              		.loc 1 47 31
 166 00ca 7B68     		ldr	r3, [r7, #4]
 167 00cc 0122     		movs	r2, #1
 168 00ce 83F81F21 		strb	r2, [r3, #287]
  48:S2LP_Driver/s2lp_mcu_interface.c **** 
  49:S2LP_Driver/s2lp_mcu_interface.c **** 	bshal_spim_init(&handle->spim_instance);
 169              		.loc 1 49 2
 170 00d2 7B68     		ldr	r3, [r7, #4]
 171 00d4 03F58A73 		add	r3, r3, #276
 172 00d8 1846     		mov	r0, r3
 173 00da FFF7FEFF 		bl	bshal_spim_init
  50:S2LP_Driver/s2lp_mcu_interface.c **** 
  51:S2LP_Driver/s2lp_mcu_interface.c **** 
  52:S2LP_Driver/s2lp_mcu_interface.c **** }
 174              		.loc 1 52 1
 175 00de 00BF     		nop
 176 00e0 0837     		adds	r7, r7, #8
 177              		.cfi_def_cfa_offset 8
 178 00e2 BD46     		mov	sp, r7
 179              		.cfi_def_cfa_register 13
 180              		@ sp needed
 181 00e4 80BD     		pop	{r7, pc}
 182              	.L3:
 183 00e6 00BF     		.align	2
 184              	.L2:
 185 00e8 80969800 		.word	10000000
ARM GAS  /tmp/ccyedYby.s 			page 5


 186 00ec 00080140 		.word	1073809408
 187 00f0 000C0140 		.word	1073810432
 188              		.cfi_endproc
 189              	.LFE67:
 191              		.section	.text.S2LP_GetPin,"ax",%progbits
 192              		.align	1
 193              		.global	S2LP_GetPin
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	S2LP_GetPin:
 199              	.LFB68:
  53:S2LP_Driver/s2lp_mcu_interface.c **** 
  54:S2LP_Driver/s2lp_mcu_interface.c **** 
  55:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_GetPin(S2LP_Handle* handle, S2LP_Pin pin, uint32_t * bshal_pin) {
 200              		.loc 1 55 75
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 16
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205 0000 80B4     		push	{r7}
 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 7, -4
 208 0002 85B0     		sub	sp, sp, #20
 209              		.cfi_def_cfa_offset 24
 210 0004 00AF     		add	r7, sp, #0
 211              		.cfi_def_cfa_register 7
 212 0006 F860     		str	r0, [r7, #12]
 213 0008 0B46     		mov	r3, r1
 214 000a 7A60     		str	r2, [r7, #4]
 215 000c FB72     		strb	r3, [r7, #11]
  56:S2LP_Driver/s2lp_mcu_interface.c **** 	switch (pin) {
 216              		.loc 1 56 2
 217 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 218 0010 052B     		cmp	r3, #5
 219 0012 06D1     		bne	.L7
  57:S2LP_Driver/s2lp_mcu_interface.c **** 		case S2LP_PIN_CSN:
  58:S2LP_Driver/s2lp_mcu_interface.c **** 			*bshal_pin = handle->spim_instance.cs_pin;
 220              		.loc 1 58 38
 221 0014 FB68     		ldr	r3, [r7, #12]
 222 0016 93F81C31 		ldrb	r3, [r3, #284]	@ zero_extendqisi2
 223 001a 1A46     		mov	r2, r3
 224              		.loc 1 58 15
 225 001c 7B68     		ldr	r3, [r7, #4]
 226 001e 1A60     		str	r2, [r3]
  59:S2LP_Driver/s2lp_mcu_interface.c **** 			break;
 227              		.loc 1 59 4
 228 0020 00E0     		b	.L6
 229              	.L7:
  60:S2LP_Driver/s2lp_mcu_interface.c **** #ifndef S2LP_SOFTWARE_RESET
  61:S2LP_Driver/s2lp_mcu_interface.c **** 		case S2LP_PIN_SDN:
  62:S2LP_Driver/s2lp_mcu_interface.c **** 			*bshal_pin = handle->spim_instance.rs_pin;
  63:S2LP_Driver/s2lp_mcu_interface.c **** 			break;
  64:S2LP_Driver/s2lp_mcu_interface.c **** #endif
  65:S2LP_Driver/s2lp_mcu_interface.c **** /*
  66:S2LP_Driver/s2lp_mcu_interface.c **** 		case S2LP_PIN_GPIO_0:
  67:S2LP_Driver/s2lp_mcu_interface.c **** 			*port_out = handle->gpio_port[0];
ARM GAS  /tmp/ccyedYby.s 			page 6


  68:S2LP_Driver/s2lp_mcu_interface.c **** 			*pin_out = handle->gpio_pin[0];
  69:S2LP_Driver/s2lp_mcu_interface.c **** 			break;
  70:S2LP_Driver/s2lp_mcu_interface.c **** 		case S2LP_PIN_GPIO_1:
  71:S2LP_Driver/s2lp_mcu_interface.c **** 			*port_out = handle->gpio_port[1];
  72:S2LP_Driver/s2lp_mcu_interface.c **** 			*pin_out = handle->gpio_pin[1];
  73:S2LP_Driver/s2lp_mcu_interface.c **** 			break;
  74:S2LP_Driver/s2lp_mcu_interface.c **** 		case S2LP_PIN_GPIO_2:
  75:S2LP_Driver/s2lp_mcu_interface.c **** 			*port_out = handle->gpio_port[2];
  76:S2LP_Driver/s2lp_mcu_interface.c **** 			*pin_out = handle->gpio_pin[2];
  77:S2LP_Driver/s2lp_mcu_interface.c **** 			break;
  78:S2LP_Driver/s2lp_mcu_interface.c **** 		case S2LP_PIN_GPIO_3:
  79:S2LP_Driver/s2lp_mcu_interface.c **** 			*port_out = handle->gpio_port[3];
  80:S2LP_Driver/s2lp_mcu_interface.c **** 			*pin_out = handle->gpio_pin[3];
  81:S2LP_Driver/s2lp_mcu_interface.c **** 			break;
  82:S2LP_Driver/s2lp_mcu_interface.c **** */
  83:S2LP_Driver/s2lp_mcu_interface.c **** 		default:
  84:S2LP_Driver/s2lp_mcu_interface.c **** 			break;
 230              		.loc 1 84 4
 231 0022 00BF     		nop
 232              	.L6:
  85:S2LP_Driver/s2lp_mcu_interface.c **** 			*bshal_pin = -1;
  86:S2LP_Driver/s2lp_mcu_interface.c **** 	}
  87:S2LP_Driver/s2lp_mcu_interface.c **** }
 233              		.loc 1 87 1
 234 0024 00BF     		nop
 235 0026 1437     		adds	r7, r7, #20
 236              		.cfi_def_cfa_offset 4
 237 0028 BD46     		mov	sp, r7
 238              		.cfi_def_cfa_register 13
 239              		@ sp needed
 240 002a 80BC     		pop	{r7}
 241              		.cfi_restore 7
 242              		.cfi_def_cfa_offset 0
 243 002c 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE68:
 247              		.section	.text.S2LP_WritePin,"ax",%progbits
 248              		.align	1
 249              		.global	S2LP_WritePin
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	S2LP_WritePin:
 255              	.LFB69:
  88:S2LP_Driver/s2lp_mcu_interface.c **** 
  89:S2LP_Driver/s2lp_mcu_interface.c **** 
  90:S2LP_Driver/s2lp_mcu_interface.c **** 
  91:S2LP_Driver/s2lp_mcu_interface.c **** 
  92:S2LP_Driver/s2lp_mcu_interface.c **** #ifdef __GNUC__
  93:S2LP_Driver/s2lp_mcu_interface.c **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  94:S2LP_Driver/s2lp_mcu_interface.c **** #endif
  95:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_WritePin(S2LP_Handle* handle, S2LP_Pin pin, bool state) {
 256              		.loc 1 95 67
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 16
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccyedYby.s 			page 7


 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 84B0     		sub	sp, sp, #16
 265              		.cfi_def_cfa_offset 24
 266 0004 00AF     		add	r7, sp, #0
 267              		.cfi_def_cfa_register 7
 268 0006 7860     		str	r0, [r7, #4]
 269 0008 0B46     		mov	r3, r1
 270 000a FB70     		strb	r3, [r7, #3]
 271 000c 1346     		mov	r3, r2
 272 000e BB70     		strb	r3, [r7, #2]
  96:S2LP_Driver/s2lp_mcu_interface.c **** 	uint32_t bshal_pin;
  97:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_GetPin(handle, pin, &bshal_pin);
 273              		.loc 1 97 2
 274 0010 07F10C02 		add	r2, r7, #12
 275 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 276 0016 1946     		mov	r1, r3
 277 0018 7868     		ldr	r0, [r7, #4]
 278 001a FFF7FEFF 		bl	S2LP_GetPin
  98:S2LP_Driver/s2lp_mcu_interface.c **** 
  99:S2LP_Driver/s2lp_mcu_interface.c **** 	if (bshal_pin != -1) {
 279              		.loc 1 99 16
 280 001e FB68     		ldr	r3, [r7, #12]
 281              		.loc 1 99 5
 282 0020 B3F1FF3F 		cmp	r3, #-1
 283 0024 05D0     		beq	.L10
 284              	.LBB2:
 100:S2LP_Driver/s2lp_mcu_interface.c **** 		bshal_gpio_write_pin(bshal_pin, state);
 285              		.loc 1 100 3
 286 0026 FB68     		ldr	r3, [r7, #12]
 287 0028 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 288 002a 1146     		mov	r1, r2
 289 002c 1846     		mov	r0, r3
 290 002e FFF7FEFF 		bl	bshal_gpio_write_pin
 291              	.L10:
 292              	.LBE2:
 101:S2LP_Driver/s2lp_mcu_interface.c **** 	}
 102:S2LP_Driver/s2lp_mcu_interface.c **** }
 293              		.loc 1 102 1
 294 0032 00BF     		nop
 295 0034 1037     		adds	r7, r7, #16
 296              		.cfi_def_cfa_offset 8
 297 0036 BD46     		mov	sp, r7
 298              		.cfi_def_cfa_register 13
 299              		@ sp needed
 300 0038 80BD     		pop	{r7, pc}
 301              		.cfi_endproc
 302              	.LFE69:
 304              		.section	.text.S2LP_Write,"ax",%progbits
 305              		.align	1
 306              		.global	S2LP_Write
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 311              	S2LP_Write:
 312              	.LFB70:
ARM GAS  /tmp/ccyedYby.s 			page 8


 103:S2LP_Driver/s2lp_mcu_interface.c **** 
 104:S2LP_Driver/s2lp_mcu_interface.c **** /*
 105:S2LP_Driver/s2lp_mcu_interface.c **** #ifdef __GNUC__
 106:S2LP_Driver/s2lp_mcu_interface.c **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 107:S2LP_Driver/s2lp_mcu_interface.c **** #endif
 108:S2LP_Driver/s2lp_mcu_interface.c **** bool S2LP_ReadPin(S2LP_Handle* handle, S2LP_Pin pin) {
 109:S2LP_Driver/s2lp_mcu_interface.c **** 	GPIO_TypeDef* gpio_port = NULL;
 110:S2LP_Driver/s2lp_mcu_interface.c **** 	uint16_t gpio_pin = 0;
 111:S2LP_Driver/s2lp_mcu_interface.c **** 
 112:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_GetPin(handle, pin, &gpio_port, &gpio_pin);
 113:S2LP_Driver/s2lp_mcu_interface.c **** 
 114:S2LP_Driver/s2lp_mcu_interface.c **** 	if (gpio_port != NULL) {
 115:S2LP_Driver/s2lp_mcu_interface.c **** 		return (HAL_GPIO_ReadPin(gpio_port, gpio_pin));
 116:S2LP_Driver/s2lp_mcu_interface.c **** 	}
 117:S2LP_Driver/s2lp_mcu_interface.c **** 
 118:S2LP_Driver/s2lp_mcu_interface.c **** 	return (false);
 119:S2LP_Driver/s2lp_mcu_interface.c **** }
 120:S2LP_Driver/s2lp_mcu_interface.c **** */
 121:S2LP_Driver/s2lp_mcu_interface.c **** 
 122:S2LP_Driver/s2lp_mcu_interface.c **** 
 123:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_Write(S2LP_Handle* handle, uint8_t address, size_t length) {
 313              		.loc 1 123 70
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 16
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317 0000 90B5     		push	{r4, r7, lr}
 318              		.cfi_def_cfa_offset 12
 319              		.cfi_offset 4, -12
 320              		.cfi_offset 7, -8
 321              		.cfi_offset 14, -4
 322 0002 87B0     		sub	sp, sp, #28
 323              		.cfi_def_cfa_offset 40
 324 0004 02AF     		add	r7, sp, #8
 325              		.cfi_def_cfa 7, 32
 326 0006 F860     		str	r0, [r7, #12]
 327 0008 0B46     		mov	r3, r1
 328 000a 7A60     		str	r2, [r7, #4]
 329 000c FB72     		strb	r3, [r7, #11]
 124:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->tx_buffer[0] = S2LP_HEADER_BYTE_WRITE;
 330              		.loc 1 124 23
 331 000e 0022     		movs	r2, #0
 332 0010 FB68     		ldr	r3, [r7, #12]
 333 0012 9A70     		strb	r2, [r3, #2]
 125:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->tx_buffer[1] = address;
 334              		.loc 1 125 23
 335 0014 FB68     		ldr	r3, [r7, #12]
 336 0016 FA7A     		ldrb	r2, [r7, #11]
 337 0018 DA70     		strb	r2, [r3, #3]
 126:S2LP_Driver/s2lp_mcu_interface.c **** 
 127:S2LP_Driver/s2lp_mcu_interface.c **** 	bshal_spim_transceive_split(&handle->spim_instance, &(handle->tx_buffer[0]), &(handle->rx_buffer[0
 338              		.loc 1 127 2
 339 001a FB68     		ldr	r3, [r7, #12]
 340 001c 03F58A70 		add	r0, r3, #276
 341              		.loc 1 127 54
 342 0020 FB68     		ldr	r3, [r7, #12]
 343 0022 991C     		adds	r1, r3, #2
 344              		.loc 1 127 79
ARM GAS  /tmp/ccyedYby.s 			page 9


 345 0024 FB68     		ldr	r3, [r7, #12]
 346 0026 03F18402 		add	r2, r3, #132
 347              		.loc 1 127 2
 348 002a 7B68     		ldr	r3, [r7, #4]
 349 002c 0233     		adds	r3, r3, #2
 350 002e 0124     		movs	r4, #1
 351 0030 0094     		str	r4, [sp]
 352 0032 FFF7FEFF 		bl	bshal_spim_transceive_split
 128:S2LP_Driver/s2lp_mcu_interface.c **** 
 129:S2LP_Driver/s2lp_mcu_interface.c **** 	// First two bytes are S2-LP status bits, so we copy them (in reverse order)
 130:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->status[0] = handle->rx_buffer[1];
 353              		.loc 1 130 39
 354 0036 FB68     		ldr	r3, [r7, #12]
 355 0038 93F88520 		ldrb	r2, [r3, #133]	@ zero_extendqisi2
 356              		.loc 1 130 20
 357 003c FB68     		ldr	r3, [r7, #12]
 358 003e 1A70     		strb	r2, [r3]
 131:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->status[1] = handle->rx_buffer[0];
 359              		.loc 1 131 39
 360 0040 FB68     		ldr	r3, [r7, #12]
 361 0042 93F88420 		ldrb	r2, [r3, #132]	@ zero_extendqisi2
 362              		.loc 1 131 20
 363 0046 FB68     		ldr	r3, [r7, #12]
 364 0048 5A70     		strb	r2, [r3, #1]
 132:S2LP_Driver/s2lp_mcu_interface.c **** }
 365              		.loc 1 132 1
 366 004a 00BF     		nop
 367 004c 1437     		adds	r7, r7, #20
 368              		.cfi_def_cfa_offset 12
 369 004e BD46     		mov	sp, r7
 370              		.cfi_def_cfa_register 13
 371              		@ sp needed
 372 0050 90BD     		pop	{r4, r7, pc}
 373              		.cfi_endproc
 374              	.LFE70:
 376              		.section	.text.S2LP_Read,"ax",%progbits
 377              		.align	1
 378              		.global	S2LP_Read
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 383              	S2LP_Read:
 384              	.LFB71:
 133:S2LP_Driver/s2lp_mcu_interface.c **** 
 134:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_Read(S2LP_Handle* handle, uint8_t address, size_t amount) {
 385              		.loc 1 134 69
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 16
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 90B5     		push	{r4, r7, lr}
 390              		.cfi_def_cfa_offset 12
 391              		.cfi_offset 4, -12
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 87B0     		sub	sp, sp, #28
 395              		.cfi_def_cfa_offset 40
 396 0004 02AF     		add	r7, sp, #8
ARM GAS  /tmp/ccyedYby.s 			page 10


 397              		.cfi_def_cfa 7, 32
 398 0006 F860     		str	r0, [r7, #12]
 399 0008 0B46     		mov	r3, r1
 400 000a 7A60     		str	r2, [r7, #4]
 401 000c FB72     		strb	r3, [r7, #11]
 135:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->tx_buffer[0] = S2LP_HEADER_BYTE_READ;
 402              		.loc 1 135 23
 403 000e 0122     		movs	r2, #1
 404 0010 FB68     		ldr	r3, [r7, #12]
 405 0012 9A70     		strb	r2, [r3, #2]
 136:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->tx_buffer[1] = address;
 406              		.loc 1 136 23
 407 0014 FB68     		ldr	r3, [r7, #12]
 408 0016 FA7A     		ldrb	r2, [r7, #11]
 409 0018 DA70     		strb	r2, [r3, #3]
 137:S2LP_Driver/s2lp_mcu_interface.c **** 
 138:S2LP_Driver/s2lp_mcu_interface.c **** 	bshal_spim_transceive_split(&handle->spim_instance, &(handle->tx_buffer[0]), &(handle->rx_buffer[0
 410              		.loc 1 138 2
 411 001a FB68     		ldr	r3, [r7, #12]
 412 001c 03F58A70 		add	r0, r3, #276
 413              		.loc 1 138 54
 414 0020 FB68     		ldr	r3, [r7, #12]
 415 0022 991C     		adds	r1, r3, #2
 416              		.loc 1 138 79
 417 0024 FB68     		ldr	r3, [r7, #12]
 418 0026 03F18402 		add	r2, r3, #132
 419              		.loc 1 138 2
 420 002a 7B68     		ldr	r3, [r7, #4]
 421 002c 0233     		adds	r3, r3, #2
 422 002e 0124     		movs	r4, #1
 423 0030 0094     		str	r4, [sp]
 424 0032 FFF7FEFF 		bl	bshal_spim_transceive_split
 139:S2LP_Driver/s2lp_mcu_interface.c **** 
 140:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->status[0] = handle->rx_buffer[1];
 425              		.loc 1 140 39
 426 0036 FB68     		ldr	r3, [r7, #12]
 427 0038 93F88520 		ldrb	r2, [r3, #133]	@ zero_extendqisi2
 428              		.loc 1 140 20
 429 003c FB68     		ldr	r3, [r7, #12]
 430 003e 1A70     		strb	r2, [r3]
 141:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->status[1] = handle->rx_buffer[0];
 431              		.loc 1 141 39
 432 0040 FB68     		ldr	r3, [r7, #12]
 433 0042 93F88420 		ldrb	r2, [r3, #132]	@ zero_extendqisi2
 434              		.loc 1 141 20
 435 0046 FB68     		ldr	r3, [r7, #12]
 436 0048 5A70     		strb	r2, [r3, #1]
 142:S2LP_Driver/s2lp_mcu_interface.c **** }
 437              		.loc 1 142 1
 438 004a 00BF     		nop
 439 004c 1437     		adds	r7, r7, #20
 440              		.cfi_def_cfa_offset 12
 441 004e BD46     		mov	sp, r7
 442              		.cfi_def_cfa_register 13
 443              		@ sp needed
 444 0050 90BD     		pop	{r4, r7, pc}
 445              		.cfi_endproc
ARM GAS  /tmp/ccyedYby.s 			page 11


 446              	.LFE71:
 448              		.section	.text.S2LP_SendCommand,"ax",%progbits
 449              		.align	1
 450              		.global	S2LP_SendCommand
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	S2LP_SendCommand:
 456              	.LFB72:
 143:S2LP_Driver/s2lp_mcu_interface.c **** 
 144:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_SendCommand(S2LP_Handle* handle, uint8_t command) {
 457              		.loc 1 144 61
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 8
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461 0000 80B5     		push	{r7, lr}
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 84B0     		sub	sp, sp, #16
 466              		.cfi_def_cfa_offset 24
 467 0004 02AF     		add	r7, sp, #8
 468              		.cfi_def_cfa 7, 16
 469 0006 7860     		str	r0, [r7, #4]
 470 0008 0B46     		mov	r3, r1
 471 000a FB70     		strb	r3, [r7, #3]
 145:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->tx_buffer[0] = S2LP_HEADER_BYTE_COMMAND;
 472              		.loc 1 145 23
 473 000c 8022     		movs	r2, #128
 474 000e 7B68     		ldr	r3, [r7, #4]
 475 0010 9A70     		strb	r2, [r3, #2]
 146:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->tx_buffer[1] = command;
 476              		.loc 1 146 23
 477 0012 7B68     		ldr	r3, [r7, #4]
 478 0014 FA78     		ldrb	r2, [r7, #3]
 479 0016 DA70     		strb	r2, [r3, #3]
 147:S2LP_Driver/s2lp_mcu_interface.c **** 
 148:S2LP_Driver/s2lp_mcu_interface.c **** 	// ACTUAL PLATFORM CODE START
 149:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Select(handle);
 480              		.loc 1 149 2
 481 0018 7868     		ldr	r0, [r7, #4]
 482 001a FFF7FEFF 		bl	S2LP_Select
 150:S2LP_Driver/s2lp_mcu_interface.c **** 	bshal_spim_transceive_split(&handle->spim_instance, &(handle->tx_buffer[0]), &(handle->rx_buffer[0
 483              		.loc 1 150 2
 484 001e 7B68     		ldr	r3, [r7, #4]
 485 0020 03F58A70 		add	r0, r3, #276
 486              		.loc 1 150 54
 487 0024 7B68     		ldr	r3, [r7, #4]
 488 0026 991C     		adds	r1, r3, #2
 489              		.loc 1 150 79
 490 0028 7B68     		ldr	r3, [r7, #4]
 491 002a 03F18402 		add	r2, r3, #132
 492              		.loc 1 150 2
 493 002e 0123     		movs	r3, #1
 494 0030 0093     		str	r3, [sp]
 495 0032 0223     		movs	r3, #2
 496 0034 FFF7FEFF 		bl	bshal_spim_transceive_split
ARM GAS  /tmp/ccyedYby.s 			page 12


 151:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Deselect(handle);
 497              		.loc 1 151 2
 498 0038 7868     		ldr	r0, [r7, #4]
 499 003a FFF7FEFF 		bl	S2LP_Deselect
 152:S2LP_Driver/s2lp_mcu_interface.c **** 	// ACTUAL PLATFORM CODE END
 153:S2LP_Driver/s2lp_mcu_interface.c **** 
 154:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->status[0] = handle->rx_buffer[1];
 500              		.loc 1 154 39
 501 003e 7B68     		ldr	r3, [r7, #4]
 502 0040 93F88520 		ldrb	r2, [r3, #133]	@ zero_extendqisi2
 503              		.loc 1 154 20
 504 0044 7B68     		ldr	r3, [r7, #4]
 505 0046 1A70     		strb	r2, [r3]
 155:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->status[1] = handle->rx_buffer[0];
 506              		.loc 1 155 39
 507 0048 7B68     		ldr	r3, [r7, #4]
 508 004a 93F88420 		ldrb	r2, [r3, #132]	@ zero_extendqisi2
 509              		.loc 1 155 20
 510 004e 7B68     		ldr	r3, [r7, #4]
 511 0050 5A70     		strb	r2, [r3, #1]
 156:S2LP_Driver/s2lp_mcu_interface.c **** }
 512              		.loc 1 156 1
 513 0052 00BF     		nop
 514 0054 0837     		adds	r7, r7, #8
 515              		.cfi_def_cfa_offset 8
 516 0056 BD46     		mov	sp, r7
 517              		.cfi_def_cfa_register 13
 518              		@ sp needed
 519 0058 80BD     		pop	{r7, pc}
 520              		.cfi_endproc
 521              	.LFE72:
 523              		.section	.text.S2LP_ReadRegister,"ax",%progbits
 524              		.align	1
 525              		.global	S2LP_ReadRegister
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	S2LP_ReadRegister:
 531              	.LFB73:
 157:S2LP_Driver/s2lp_mcu_interface.c **** 
 158:S2LP_Driver/s2lp_mcu_interface.c **** uint8_t S2LP_ReadRegister(S2LP_Handle* handle, S2LP_Register address) {
 532              		.loc 1 158 71
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 8
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 82B0     		sub	sp, sp, #8
 541              		.cfi_def_cfa_offset 16
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 7860     		str	r0, [r7, #4]
 545 0008 0B46     		mov	r3, r1
 546 000a FB70     		strb	r3, [r7, #3]
 159:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Select(handle);
ARM GAS  /tmp/ccyedYby.s 			page 13


 547              		.loc 1 159 2
 548 000c 7868     		ldr	r0, [r7, #4]
 549 000e FFF7FEFF 		bl	S2LP_Select
 160:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Read(handle, address, 1);
 550              		.loc 1 160 2
 551 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 552 0014 0122     		movs	r2, #1
 553 0016 1946     		mov	r1, r3
 554 0018 7868     		ldr	r0, [r7, #4]
 555 001a FFF7FEFF 		bl	S2LP_Read
 161:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Deselect(handle);
 556              		.loc 1 161 2
 557 001e 7868     		ldr	r0, [r7, #4]
 558 0020 FFF7FEFF 		bl	S2LP_Deselect
 162:S2LP_Driver/s2lp_mcu_interface.c **** 	return handle->rx_buffer_start[0];
 559              		.loc 1 162 15
 560 0024 7B68     		ldr	r3, [r7, #4]
 561 0026 D3F80C31 		ldr	r3, [r3, #268]
 562              		.loc 1 162 32
 563 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 163:S2LP_Driver/s2lp_mcu_interface.c **** }
 564              		.loc 1 163 1
 565 002c 1846     		mov	r0, r3
 566 002e 0837     		adds	r7, r7, #8
 567              		.cfi_def_cfa_offset 8
 568 0030 BD46     		mov	sp, r7
 569              		.cfi_def_cfa_register 13
 570              		@ sp needed
 571 0032 80BD     		pop	{r7, pc}
 572              		.cfi_endproc
 573              	.LFE73:
 575              		.section	.text.S2LP_WriteRegister,"ax",%progbits
 576              		.align	1
 577              		.global	S2LP_WriteRegister
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 582              	S2LP_WriteRegister:
 583              	.LFB74:
 164:S2LP_Driver/s2lp_mcu_interface.c **** 
 165:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_WriteRegister(S2LP_Handle* handle, S2LP_Register address, uint8_t new_value) {
 584              		.loc 1 165 88
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 8
 587              		@ frame_needed = 1, uses_anonymous_args = 0
 588 0000 80B5     		push	{r7, lr}
 589              		.cfi_def_cfa_offset 8
 590              		.cfi_offset 7, -8
 591              		.cfi_offset 14, -4
 592 0002 82B0     		sub	sp, sp, #8
 593              		.cfi_def_cfa_offset 16
 594 0004 00AF     		add	r7, sp, #0
 595              		.cfi_def_cfa_register 7
 596 0006 7860     		str	r0, [r7, #4]
 597 0008 0B46     		mov	r3, r1
 598 000a FB70     		strb	r3, [r7, #3]
 599 000c 1346     		mov	r3, r2
ARM GAS  /tmp/ccyedYby.s 			page 14


 600 000e BB70     		strb	r3, [r7, #2]
 166:S2LP_Driver/s2lp_mcu_interface.c **** 	handle->tx_buffer_start[0] = new_value;
 601              		.loc 1 166 8
 602 0010 7B68     		ldr	r3, [r7, #4]
 603 0012 D3F80831 		ldr	r3, [r3, #264]
 604              		.loc 1 166 29
 605 0016 BA78     		ldrb	r2, [r7, #2]
 606 0018 1A70     		strb	r2, [r3]
 167:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Select(handle);
 607              		.loc 1 167 2
 608 001a 7868     		ldr	r0, [r7, #4]
 609 001c FFF7FEFF 		bl	S2LP_Select
 168:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Write(handle, address, 1);
 610              		.loc 1 168 2
 611 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 612 0022 0122     		movs	r2, #1
 613 0024 1946     		mov	r1, r3
 614 0026 7868     		ldr	r0, [r7, #4]
 615 0028 FFF7FEFF 		bl	S2LP_Write
 169:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Deselect(handle);
 616              		.loc 1 169 2
 617 002c 7868     		ldr	r0, [r7, #4]
 618 002e FFF7FEFF 		bl	S2LP_Deselect
 170:S2LP_Driver/s2lp_mcu_interface.c **** }
 619              		.loc 1 170 1
 620 0032 00BF     		nop
 621 0034 0837     		adds	r7, r7, #8
 622              		.cfi_def_cfa_offset 8
 623 0036 BD46     		mov	sp, r7
 624              		.cfi_def_cfa_register 13
 625              		@ sp needed
 626 0038 80BD     		pop	{r7, pc}
 627              		.cfi_endproc
 628              	.LFE74:
 630              		.section	.text.S2LP_BatchReadRegisters,"ax",%progbits
 631              		.align	1
 632              		.global	S2LP_BatchReadRegisters
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 637              	S2LP_BatchReadRegisters:
 638              	.LFB75:
 171:S2LP_Driver/s2lp_mcu_interface.c **** 
 172:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_BatchReadRegisters(S2LP_Handle* handle, S2LP_Register start_address, uint8_t* output, siz
 639              		.loc 1 172 112
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 16
 642              		@ frame_needed = 1, uses_anonymous_args = 0
 643 0000 80B5     		push	{r7, lr}
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 7, -8
 646              		.cfi_offset 14, -4
 647 0002 84B0     		sub	sp, sp, #16
 648              		.cfi_def_cfa_offset 24
 649 0004 00AF     		add	r7, sp, #0
 650              		.cfi_def_cfa_register 7
 651 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccyedYby.s 			page 15


 652 0008 7A60     		str	r2, [r7, #4]
 653 000a 3B60     		str	r3, [r7]
 654 000c 0B46     		mov	r3, r1
 655 000e FB72     		strb	r3, [r7, #11]
 173:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Select(handle);
 656              		.loc 1 173 2
 657 0010 F868     		ldr	r0, [r7, #12]
 658 0012 FFF7FEFF 		bl	S2LP_Select
 174:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Read(handle, start_address, amount);
 659              		.loc 1 174 2
 660 0016 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 661 0018 3A68     		ldr	r2, [r7]
 662 001a 1946     		mov	r1, r3
 663 001c F868     		ldr	r0, [r7, #12]
 664 001e FFF7FEFF 		bl	S2LP_Read
 175:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Deselect(handle);
 665              		.loc 1 175 2
 666 0022 F868     		ldr	r0, [r7, #12]
 667 0024 FFF7FEFF 		bl	S2LP_Deselect
 176:S2LP_Driver/s2lp_mcu_interface.c **** 	memcpy(output, handle->rx_buffer_start, amount);
 668              		.loc 1 176 23
 669 0028 FB68     		ldr	r3, [r7, #12]
 670 002a D3F80C31 		ldr	r3, [r3, #268]
 671              		.loc 1 176 2
 672 002e 3A68     		ldr	r2, [r7]
 673 0030 1946     		mov	r1, r3
 674 0032 7868     		ldr	r0, [r7, #4]
 675 0034 FFF7FEFF 		bl	memcpy
 177:S2LP_Driver/s2lp_mcu_interface.c **** }
 676              		.loc 1 177 1
 677 0038 00BF     		nop
 678 003a 1037     		adds	r7, r7, #16
 679              		.cfi_def_cfa_offset 8
 680 003c BD46     		mov	sp, r7
 681              		.cfi_def_cfa_register 13
 682              		@ sp needed
 683 003e 80BD     		pop	{r7, pc}
 684              		.cfi_endproc
 685              	.LFE75:
 687              		.section	.text.S2LP_BatchWriteRegisters,"ax",%progbits
 688              		.align	1
 689              		.global	S2LP_BatchWriteRegisters
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 694              	S2LP_BatchWriteRegisters:
 695              	.LFB76:
 178:S2LP_Driver/s2lp_mcu_interface.c **** 
 179:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_BatchWriteRegisters(S2LP_Handle* handle, S2LP_Register start_address, uint8_t* data, size
 696              		.loc 1 179 111
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 16
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700 0000 80B5     		push	{r7, lr}
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 7, -8
 703              		.cfi_offset 14, -4
ARM GAS  /tmp/ccyedYby.s 			page 16


 704 0002 84B0     		sub	sp, sp, #16
 705              		.cfi_def_cfa_offset 24
 706 0004 00AF     		add	r7, sp, #0
 707              		.cfi_def_cfa_register 7
 708 0006 F860     		str	r0, [r7, #12]
 709 0008 7A60     		str	r2, [r7, #4]
 710 000a 3B60     		str	r3, [r7]
 711 000c 0B46     		mov	r3, r1
 712 000e FB72     		strb	r3, [r7, #11]
 180:S2LP_Driver/s2lp_mcu_interface.c **** 	memcpy(handle->tx_buffer_start, data, amount);
 713              		.loc 1 180 15
 714 0010 FB68     		ldr	r3, [r7, #12]
 715 0012 D3F80831 		ldr	r3, [r3, #264]
 716              		.loc 1 180 2
 717 0016 3A68     		ldr	r2, [r7]
 718 0018 7968     		ldr	r1, [r7, #4]
 719 001a 1846     		mov	r0, r3
 720 001c FFF7FEFF 		bl	memcpy
 181:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Select(handle);
 721              		.loc 1 181 2
 722 0020 F868     		ldr	r0, [r7, #12]
 723 0022 FFF7FEFF 		bl	S2LP_Select
 182:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Write(handle, start_address, amount);
 724              		.loc 1 182 2
 725 0026 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 726 0028 3A68     		ldr	r2, [r7]
 727 002a 1946     		mov	r1, r3
 728 002c F868     		ldr	r0, [r7, #12]
 729 002e FFF7FEFF 		bl	S2LP_Write
 183:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Deselect(handle);
 730              		.loc 1 183 2
 731 0032 F868     		ldr	r0, [r7, #12]
 732 0034 FFF7FEFF 		bl	S2LP_Deselect
 184:S2LP_Driver/s2lp_mcu_interface.c **** }
 733              		.loc 1 184 1
 734 0038 00BF     		nop
 735 003a 1037     		adds	r7, r7, #16
 736              		.cfi_def_cfa_offset 8
 737 003c BD46     		mov	sp, r7
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 003e 80BD     		pop	{r7, pc}
 741              		.cfi_endproc
 742              	.LFE76:
 744              		.section	.text.S2LP_Select,"ax",%progbits
 745              		.align	1
 746              		.global	S2LP_Select
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 751              	S2LP_Select:
 752              	.LFB77:
 185:S2LP_Driver/s2lp_mcu_interface.c **** 
 186:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_Select(S2LP_Handle* handle) {
 753              		.loc 1 186 39
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccyedYby.s 			page 17


 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757 0000 80B5     		push	{r7, lr}
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 82B0     		sub	sp, sp, #8
 762              		.cfi_def_cfa_offset 16
 763 0004 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 765 0006 7860     		str	r0, [r7, #4]
 187:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_WritePin(handle, S2LP_PIN_CSN, false);
 766              		.loc 1 187 2
 767 0008 0022     		movs	r2, #0
 768 000a 0521     		movs	r1, #5
 769 000c 7868     		ldr	r0, [r7, #4]
 770 000e FFF7FEFF 		bl	S2LP_WritePin
 188:S2LP_Driver/s2lp_mcu_interface.c **** }
 771              		.loc 1 188 1
 772 0012 00BF     		nop
 773 0014 0837     		adds	r7, r7, #8
 774              		.cfi_def_cfa_offset 8
 775 0016 BD46     		mov	sp, r7
 776              		.cfi_def_cfa_register 13
 777              		@ sp needed
 778 0018 80BD     		pop	{r7, pc}
 779              		.cfi_endproc
 780              	.LFE77:
 782              		.section	.text.S2LP_Deselect,"ax",%progbits
 783              		.align	1
 784              		.global	S2LP_Deselect
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 789              	S2LP_Deselect:
 790              	.LFB78:
 189:S2LP_Driver/s2lp_mcu_interface.c **** 
 190:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_Deselect(S2LP_Handle* handle) {
 791              		.loc 1 190 41
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 8
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795 0000 80B5     		push	{r7, lr}
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 82B0     		sub	sp, sp, #8
 800              		.cfi_def_cfa_offset 16
 801 0004 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
 803 0006 7860     		str	r0, [r7, #4]
 191:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_WritePin(handle, S2LP_PIN_CSN, true);
 804              		.loc 1 191 2
 805 0008 0122     		movs	r2, #1
 806 000a 0521     		movs	r1, #5
 807 000c 7868     		ldr	r0, [r7, #4]
 808 000e FFF7FEFF 		bl	S2LP_WritePin
 192:S2LP_Driver/s2lp_mcu_interface.c **** }
ARM GAS  /tmp/ccyedYby.s 			page 18


 809              		.loc 1 192 1
 810 0012 00BF     		nop
 811 0014 0837     		adds	r7, r7, #8
 812              		.cfi_def_cfa_offset 8
 813 0016 BD46     		mov	sp, r7
 814              		.cfi_def_cfa_register 13
 815              		@ sp needed
 816 0018 80BD     		pop	{r7, pc}
 817              		.cfi_endproc
 818              	.LFE78:
 820              		.section	.text.S2LP_Reset,"ax",%progbits
 821              		.align	1
 822              		.global	S2LP_Reset
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 827              	S2LP_Reset:
 828              	.LFB79:
 193:S2LP_Driver/s2lp_mcu_interface.c **** 
 194:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_Reset(S2LP_Handle* handle) {
 829              		.loc 1 194 38
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 8
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 82B0     		sub	sp, sp, #8
 838              		.cfi_def_cfa_offset 16
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 841 0006 7860     		str	r0, [r7, #4]
 195:S2LP_Driver/s2lp_mcu_interface.c **** #ifndef S2LP_SOFTWARE_RESET
 196:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Shutdown(handle);
 197:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Delay(S2LP_RESET_TIMEOUT);
 198:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Wakeup(handle);
 199:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_Delay(S2LP_RESET_TIMEOUT);
 200:S2LP_Driver/s2lp_mcu_interface.c **** #else
 201:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_SendCommand(handle, S2LP_CMD_SRES);
 842              		.loc 1 201 2
 843 0008 7021     		movs	r1, #112
 844 000a 7868     		ldr	r0, [r7, #4]
 845 000c FFF7FEFF 		bl	S2LP_SendCommand
 202:S2LP_Driver/s2lp_mcu_interface.c **** #endif
 203:S2LP_Driver/s2lp_mcu_interface.c **** }
 846              		.loc 1 203 1
 847 0010 00BF     		nop
 848 0012 0837     		adds	r7, r7, #8
 849              		.cfi_def_cfa_offset 8
 850 0014 BD46     		mov	sp, r7
 851              		.cfi_def_cfa_register 13
 852              		@ sp needed
 853 0016 80BD     		pop	{r7, pc}
 854              		.cfi_endproc
 855              	.LFE79:
 857              		.section	.text.S2LP_Delay,"ax",%progbits
ARM GAS  /tmp/ccyedYby.s 			page 19


 858              		.align	1
 859              		.global	S2LP_Delay
 860              		.syntax unified
 861              		.thumb
 862              		.thumb_func
 864              	S2LP_Delay:
 865              	.LFB80:
 204:S2LP_Driver/s2lp_mcu_interface.c **** 
 205:S2LP_Driver/s2lp_mcu_interface.c **** #ifndef S2LP_SOFTWARE_RESET
 206:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_Shutdown(S2LP_Handle* handle) {
 207:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_WritePin(handle, S2LP_PIN_SDN, true);
 208:S2LP_Driver/s2lp_mcu_interface.c **** }
 209:S2LP_Driver/s2lp_mcu_interface.c **** 
 210:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_Wakeup(S2LP_Handle* handle) {
 211:S2LP_Driver/s2lp_mcu_interface.c **** 	S2LP_WritePin(handle, S2LP_PIN_SDN, false);
 212:S2LP_Driver/s2lp_mcu_interface.c **** }
 213:S2LP_Driver/s2lp_mcu_interface.c **** #endif
 214:S2LP_Driver/s2lp_mcu_interface.c **** 
 215:S2LP_Driver/s2lp_mcu_interface.c **** void S2LP_Delay(uint32_t milliseconds) {
 866              		.loc 1 215 40
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 8
 869              		@ frame_needed = 1, uses_anonymous_args = 0
 870 0000 80B5     		push	{r7, lr}
 871              		.cfi_def_cfa_offset 8
 872              		.cfi_offset 7, -8
 873              		.cfi_offset 14, -4
 874 0002 82B0     		sub	sp, sp, #8
 875              		.cfi_def_cfa_offset 16
 876 0004 00AF     		add	r7, sp, #0
 877              		.cfi_def_cfa_register 7
 878 0006 7860     		str	r0, [r7, #4]
 216:S2LP_Driver/s2lp_mcu_interface.c **** 	bshal_delay_ms(milliseconds);
 879              		.loc 1 216 2
 880 0008 7868     		ldr	r0, [r7, #4]
 881 000a FFF7FEFF 		bl	bshal_delay_ms
 217:S2LP_Driver/s2lp_mcu_interface.c **** }
 882              		.loc 1 217 1
 883 000e 00BF     		nop
 884 0010 0837     		adds	r7, r7, #8
 885              		.cfi_def_cfa_offset 8
 886 0012 BD46     		mov	sp, r7
 887              		.cfi_def_cfa_register 13
 888              		@ sp needed
 889 0014 80BD     		pop	{r7, pc}
 890              		.cfi_endproc
 891              	.LFE80:
 893              		.text
 894              	.Letext0:
 895              		.file 2 "S2LP_Driver/s2lp_constants.h"
 896              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 897              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 898              		.file 5 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 899              		.file 6 "../../../ext/stm32/cmsis_device_f1/Include/stm32f103xb.h"
 900              		.file 7 "../../../lib/libhalglue/bshal/bshal_spim.h"
 901              		.file 8 "S2LP_Driver/s2lp_mcu_interface.h"
 902              		.file 9 "/usr/arm-none-eabi/include/string.h"
ARM GAS  /tmp/ccyedYby.s 			page 20


 903              		.file 10 "../../../lib/libhalglue/common/bshal_delay.h"
ARM GAS  /tmp/ccyedYby.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 s2lp_mcu_interface.c
     /tmp/ccyedYby.s:22     .rodata.S2LP_HEADER_BYTE_WRITE:0000000000000000 S2LP_HEADER_BYTE_WRITE
     /tmp/ccyedYby.s:23     .rodata.S2LP_HEADER_BYTE_WRITE:0000000000000000 $d
     /tmp/ccyedYby.s:28     .rodata.S2LP_HEADER_BYTE_READ:0000000000000000 S2LP_HEADER_BYTE_READ
     /tmp/ccyedYby.s:34     .rodata.S2LP_HEADER_BYTE_COMMAND:0000000000000000 S2LP_HEADER_BYTE_COMMAND
     /tmp/ccyedYby.s:41     .rodata.S2LP_RESET_TIMEOUT:0000000000000000 S2LP_RESET_TIMEOUT
     /tmp/ccyedYby.s:38     .rodata.S2LP_RESET_TIMEOUT:0000000000000000 $d
     /tmp/ccyedYby.s:44     .text.S2LP_InitHandle:0000000000000000 $t
     /tmp/ccyedYby.s:50     .text.S2LP_InitHandle:0000000000000000 S2LP_InitHandle
     /tmp/ccyedYby.s:185    .text.S2LP_InitHandle:00000000000000e8 $d
     /tmp/ccyedYby.s:192    .text.S2LP_GetPin:0000000000000000 $t
     /tmp/ccyedYby.s:198    .text.S2LP_GetPin:0000000000000000 S2LP_GetPin
     /tmp/ccyedYby.s:248    .text.S2LP_WritePin:0000000000000000 $t
     /tmp/ccyedYby.s:254    .text.S2LP_WritePin:0000000000000000 S2LP_WritePin
     /tmp/ccyedYby.s:305    .text.S2LP_Write:0000000000000000 $t
     /tmp/ccyedYby.s:311    .text.S2LP_Write:0000000000000000 S2LP_Write
     /tmp/ccyedYby.s:377    .text.S2LP_Read:0000000000000000 $t
     /tmp/ccyedYby.s:383    .text.S2LP_Read:0000000000000000 S2LP_Read
     /tmp/ccyedYby.s:449    .text.S2LP_SendCommand:0000000000000000 $t
     /tmp/ccyedYby.s:455    .text.S2LP_SendCommand:0000000000000000 S2LP_SendCommand
     /tmp/ccyedYby.s:751    .text.S2LP_Select:0000000000000000 S2LP_Select
     /tmp/ccyedYby.s:789    .text.S2LP_Deselect:0000000000000000 S2LP_Deselect
     /tmp/ccyedYby.s:524    .text.S2LP_ReadRegister:0000000000000000 $t
     /tmp/ccyedYby.s:530    .text.S2LP_ReadRegister:0000000000000000 S2LP_ReadRegister
     /tmp/ccyedYby.s:576    .text.S2LP_WriteRegister:0000000000000000 $t
     /tmp/ccyedYby.s:582    .text.S2LP_WriteRegister:0000000000000000 S2LP_WriteRegister
     /tmp/ccyedYby.s:631    .text.S2LP_BatchReadRegisters:0000000000000000 $t
     /tmp/ccyedYby.s:637    .text.S2LP_BatchReadRegisters:0000000000000000 S2LP_BatchReadRegisters
     /tmp/ccyedYby.s:688    .text.S2LP_BatchWriteRegisters:0000000000000000 $t
     /tmp/ccyedYby.s:694    .text.S2LP_BatchWriteRegisters:0000000000000000 S2LP_BatchWriteRegisters
     /tmp/ccyedYby.s:745    .text.S2LP_Select:0000000000000000 $t
     /tmp/ccyedYby.s:783    .text.S2LP_Deselect:0000000000000000 $t
     /tmp/ccyedYby.s:821    .text.S2LP_Reset:0000000000000000 $t
     /tmp/ccyedYby.s:827    .text.S2LP_Reset:0000000000000000 S2LP_Reset
     /tmp/ccyedYby.s:858    .text.S2LP_Delay:0000000000000000 $t
     /tmp/ccyedYby.s:864    .text.S2LP_Delay:0000000000000000 S2LP_Delay
                           .group:0000000000000000 wm4.0.2a10468dd89b593cd64cc189d36e5bb7
                           .group:0000000000000000 wm4.s2lp_mcu_interface.h.9.9eeee19d530c6ae696c504e7de7f49cd
                           .group:0000000000000000 wm4.s2lp_constants.h.9.b7f616e3835971b5021c80c1c98c29b7
                           .group:0000000000000000 wm4.stdbool.h.29.4a1c88fe569adb8d03217dd16982ca34
                           .group:0000000000000000 wm4._newlib_version.h.4.529115dae5e4f67702b1de0b6e841f38
                           .group:0000000000000000 wm4.features.h.33.3e67abe6fb64142d4f6fa9496796153c
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.stddef.h.39.3e0425629195acf083c9561151306b4d
                           .group:0000000000000000 wm4.stm32f1xx.h.39.e8c98c5ce2cd95856eed179966374e12
                           .group:0000000000000000 wm4.stm32f103xb.h.38.ec967d5ad9d3269cb0788eebda048e38
                           .group:0000000000000000 wm4.cmsis_version.h.32.0f826810625204eca22a19868bdc7586
                           .group:0000000000000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.549e8fd988111c6b396c357ef98aeb59
                           .group:0000000000000000 wm4.core_cm3.h.127.aaed3d1df272b0aa79c526153017805c
                           .group:0000000000000000 wm4.stm32f103xb.h.573.10249aa7473ca93be896fed94046a725
                           .group:0000000000000000 wm4.stm32f1xx.h.162.96b09079a093c34dbd7f0b85cbd0ddee
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.24.fb218a6cd2ee35d840b3eac0f5fb4119
ARM GAS  /tmp/ccyedYby.s 			page 22


                           .group:0000000000000000 wm4.stm32_hal_legacy.h.22.3d81dc02d9b9459e9eac6fdca7f8f18e
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.56.d1c3014f99fce17329ff5ab2921c0923
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.94.78ba4ec8cedd7ba94683a5fabb61b31e
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.21.8406672c8a3f21f71eb8441fb8ecb4bd
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1201.89d14cbb1b46fba2de70512ccfd8d5ce
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.21.0099da253a68660e916195d3e8928be3
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.21.93f1f3ec7660fa76375def81b976f73c
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.262.7df79220ec7519ba80c1763e6b4854a6
                           .group:0000000000000000 wm4.stm32f1xx_hal_exti.h.21.a7f1b393a0c9b2b56b72ccdbb8dee508
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.21.11e5a204ed6aa790b1cdae2e4192bc9d
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.21.d438f745b4c04dc23f9f569190526864
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.408.14794a3f8621230c9ac7fca0cacf3e57
                           .group:0000000000000000 wm4.stm32f1xx_hal_can.h.21.d1dd4a884a3983bc975efc64fbbd5748
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.21.6ab92041a8778f53d2d2d96b3825535a
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc.h.21.8ae5a06b46334619d54b2469802d6db6
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc_ex.h.21.f5c9ba15472af26c826d75096ae3e02a
                           .group:0000000000000000 wm4.stm32f1xx_hal_crc.h.21.b5b5d61856236c32a5704a7db1b8c77f
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.21.6df147ac02cc6dec8c4706cc1a34879c
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.21.33e24ce7a8607e16d5a38297454fd963
                           .group:0000000000000000 wm4.stm32f1xx_hal_i2c.h.21.6a947c870feb456d84d10dd871ee01bd
                           .group:0000000000000000 wm4.stm32f1xx_hal_iwdg.h.21.14afe1e30714751a311b81d0791714c2
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.21.ec3e2cfd4c26fffa32fc4ff0a8ac7390
                           .group:0000000000000000 wm4.stm32f1xx_hal_rtc.h.21.833c91cab3eef49edc59fd371d3c1ce0
                           .group:0000000000000000 wm4.stm32f1xx_hal_rtc_ex.h.21.b671683f6728965b6d8404d04009ed32
                           .group:0000000000000000 wm4.stm32f1xx_hal_spi.h.21.59f3c581a47a8dea5d070b46998af27e
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.21.76f9d96f76cba41ae3b6e27311c6f5ff
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.21.ffd6508e5e0a88f651472e5c80a9d587
                           .group:0000000000000000 wm4.stm32f1xx_hal_usart.h.21.0b32d58c93817e5f10bce7603c316c1e
                           .group:0000000000000000 wm4.stm32f1xx_hal_irda.h.21.b44168150ccb55c331f6e6afe3cf4b88
                           .group:0000000000000000 wm4.stm32f1xx_hal_smartcard.h.21.d256a98de9ec7b58600da5aa4b29abdb
                           .group:0000000000000000 wm4.stm32f1xx_hal_wwdg.h.21.ac611fc4089566604f02b81297147d50
                           .group:0000000000000000 wm4.stm32f1xx_ll_usb.h.21.4cb0f3c145693f977427d01b787de0c7
                           .group:0000000000000000 wm4.stm32f1xx_hal_pcd.h.160.b1d545af3cea9ada15575c2dedd78cdc
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.87.60093b86a987865736d7cddecce3c235
                           .group:0000000000000000 wm4.ieeefp.h.77.25247dc27dbe3b23bfe98c2dc18f6ac5
                           .group:0000000000000000 wm4.newlib.h.8.e83e89ee5a2baa7686bbb3d2021a9409
                           .group:0000000000000000 wm4.config.h.224.18dfb280c62ae4ee788eb67b451eb1a6
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.158.bfed30416c9480cd13bc4a25427d538f
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.158.5f30652bb2ea05b142c1bbee9108c999
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:0000000000000000 wm4.bshal_i2cm.h.11.09ce5fde9ee09ba50563c37b9993575a
                           .group:0000000000000000 wm4.inttypes.h.14.b28deb26920e51e0da310220ef0f9003
                           .group:0000000000000000 wm4.inttypes.h.28.684aa7736e7ecc9a6ffc44acc61c7a90
                           .group:0000000000000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd

UNDEFINED SYMBOLS
memset
bshal_gpio_encode_pin
ARM GAS  /tmp/ccyedYby.s 			page 23


bshal_spim_init
bshal_gpio_write_pin
bshal_spim_transceive_split
memcpy
bshal_delay_ms

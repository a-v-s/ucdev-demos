ARM GAS  /tmp/ccsXq0gm.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"s2lp_packet.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "S2LP_Driver/s2lp_packet.c"
  18              		.section	.text.S2LP_PCKT_SetPacketFormat,"ax",%progbits
  19              		.align	1
  20              		.global	S2LP_PCKT_SetPacketFormat
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	S2LP_PCKT_SetPacketFormat:
  26              	.LFB67:
   1:S2LP_Driver/s2lp_packet.c **** /*
   2:S2LP_Driver/s2lp_packet.c ****  * s2lp_packet.c
   3:S2LP_Driver/s2lp_packet.c ****  *
   4:S2LP_Driver/s2lp_packet.c ****  *  Created on: 21 wrz 2021
   5:S2LP_Driver/s2lp_packet.c ****  *      Author: steelph0enix
   6:S2LP_Driver/s2lp_packet.c ****  */
   7:S2LP_Driver/s2lp_packet.c **** 
   8:S2LP_Driver/s2lp_packet.c **** #include "bit_helpers.h"
   9:S2LP_Driver/s2lp_packet.c **** #include "s2lp_packet.h"
  10:S2LP_Driver/s2lp_packet.c **** 
  11:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetPacketFormat(S2LP_Handle* handle, S2LP_Packet_Format format) {
  27              		.loc 1 11 80
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 84B0     		sub	sp, sp, #16
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  40 0008 0B46     		mov	r3, r1
  41 000a FB70     		strb	r3, [r7, #3]
  12:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL3);
  42              		.loc 1 12 20
  43 000c 2E21     		movs	r1, #46
  44 000e 7868     		ldr	r0, [r7, #4]
  45 0010 FFF7FEFF 		bl	S2LP_ReadRegister
  46 0014 0346     		mov	r3, r0
ARM GAS  /tmp/ccsXq0gm.s 			page 2


  47 0016 FB73     		strb	r3, [r7, #15]
  13:S2LP_Driver/s2lp_packet.c **** 
  14:S2LP_Driver/s2lp_packet.c **** 	CLEARBITS(reg_val, 0b11, 6);
  48              		.loc 1 14 2
  49 0018 FB7B     		ldrb	r3, [r7, #15]
  50 001a 03F03F03 		and	r3, r3, #63
  51 001e FB73     		strb	r3, [r7, #15]
  15:S2LP_Driver/s2lp_packet.c **** 	SETBITS(reg_val, (uint8_t )format, 0b11, 6);
  52              		.loc 1 15 2
  53 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  54 0022 9B01     		lsls	r3, r3, #6
  55 0024 5AB2     		sxtb	r2, r3
  56 0026 97F90F30 		ldrsb	r3, [r7, #15]
  57 002a 1343     		orrs	r3, r3, r2
  58 002c 5BB2     		sxtb	r3, r3
  59 002e FB73     		strb	r3, [r7, #15]
  16:S2LP_Driver/s2lp_packet.c **** 
  17:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL3, reg_val);
  60              		.loc 1 17 2
  61 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  62 0032 1A46     		mov	r2, r3
  63 0034 2E21     		movs	r1, #46
  64 0036 7868     		ldr	r0, [r7, #4]
  65 0038 FFF7FEFF 		bl	S2LP_WriteRegister
  18:S2LP_Driver/s2lp_packet.c **** }
  66              		.loc 1 18 1
  67 003c 00BF     		nop
  68 003e 1037     		adds	r7, r7, #16
  69              		.cfi_def_cfa_offset 8
  70 0040 BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0042 80BD     		pop	{r7, pc}
  74              		.cfi_endproc
  75              	.LFE67:
  77              		.section	.text.S2LP_PCKT_SetPreambleType,"ax",%progbits
  78              		.align	1
  79              		.global	S2LP_PCKT_SetPreambleType
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  84              	S2LP_PCKT_SetPreambleType:
  85              	.LFB68:
  19:S2LP_Driver/s2lp_packet.c **** 
  20:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetPreambleType(S2LP_Handle* handle, S2LP_Preamble preamble) {
  86              		.loc 1 20 77
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 16
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 80B5     		push	{r7, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 84B0     		sub	sp, sp, #16
  95              		.cfi_def_cfa_offset 24
  96 0004 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccsXq0gm.s 			page 3


  98 0006 7860     		str	r0, [r7, #4]
  99 0008 0B46     		mov	r3, r1
 100 000a FB70     		strb	r3, [r7, #3]
  21:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL3);
 101              		.loc 1 21 20
 102 000c 2E21     		movs	r1, #46
 103 000e 7868     		ldr	r0, [r7, #4]
 104 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 105 0014 0346     		mov	r3, r0
 106 0016 FB73     		strb	r3, [r7, #15]
  22:S2LP_Driver/s2lp_packet.c **** 
  23:S2LP_Driver/s2lp_packet.c **** 	CLEARBITS(reg_val, 0b11, 0);
 107              		.loc 1 23 2
 108 0018 FB7B     		ldrb	r3, [r7, #15]
 109 001a 23F00303 		bic	r3, r3, #3
 110 001e FB73     		strb	r3, [r7, #15]
  24:S2LP_Driver/s2lp_packet.c **** 	SETBITS(reg_val, (uint8_t )preamble, 0b11, 0);
 111              		.loc 1 24 2
 112 0020 97F90330 		ldrsb	r3, [r7, #3]
 113 0024 03F00303 		and	r3, r3, #3
 114 0028 5AB2     		sxtb	r2, r3
 115 002a 97F90F30 		ldrsb	r3, [r7, #15]
 116 002e 1343     		orrs	r3, r3, r2
 117 0030 5BB2     		sxtb	r3, r3
 118 0032 FB73     		strb	r3, [r7, #15]
  25:S2LP_Driver/s2lp_packet.c **** 
  26:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL3, reg_val);
 119              		.loc 1 26 2
 120 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 121 0036 1A46     		mov	r2, r3
 122 0038 2E21     		movs	r1, #46
 123 003a 7868     		ldr	r0, [r7, #4]
 124 003c FFF7FEFF 		bl	S2LP_WriteRegister
  27:S2LP_Driver/s2lp_packet.c **** }
 125              		.loc 1 27 1
 126 0040 00BF     		nop
 127 0042 1037     		adds	r7, r7, #16
 128              		.cfi_def_cfa_offset 8
 129 0044 BD46     		mov	sp, r7
 130              		.cfi_def_cfa_register 13
 131              		@ sp needed
 132 0046 80BD     		pop	{r7, pc}
 133              		.cfi_endproc
 134              	.LFE68:
 136              		.section	.text.S2LP_PCKT_SetPreambleLength,"ax",%progbits
 137              		.align	1
 138              		.global	S2LP_PCKT_SetPreambleLength
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	S2LP_PCKT_SetPreambleLength:
 144              	.LFB69:
  28:S2LP_Driver/s2lp_packet.c **** 
  29:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetPreambleLength(S2LP_Handle* handle, size_t length) {
 145              		.loc 1 29 70
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccsXq0gm.s 			page 4


 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 7, -8
 152              		.cfi_offset 14, -4
 153 0002 84B0     		sub	sp, sp, #16
 154              		.cfi_def_cfa_offset 24
 155 0004 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 157 0006 7860     		str	r0, [r7, #4]
 158 0008 3960     		str	r1, [r7]
  30:S2LP_Driver/s2lp_packet.c **** 	if (length > 1024) {
 159              		.loc 1 30 5
 160 000a 3B68     		ldr	r3, [r7]
 161 000c B3F5806F 		cmp	r3, #1024
 162 0010 27D8     		bhi	.L6
  31:S2LP_Driver/s2lp_packet.c **** 		return;
  32:S2LP_Driver/s2lp_packet.c **** 	}
  33:S2LP_Driver/s2lp_packet.c **** 
  34:S2LP_Driver/s2lp_packet.c **** 	uint8_t regs_val[2] = { 0 };
 163              		.loc 1 34 10
 164 0012 0023     		movs	r3, #0
 165 0014 BB81     		strh	r3, [r7, #12]	@ movhi
  35:S2LP_Driver/s2lp_packet.c **** 	S2LP_BatchReadRegisters(handle, S2LP_REG_PCKTCTRL6, regs_val, 2);
 166              		.loc 1 35 2
 167 0016 07F10C02 		add	r2, r7, #12
 168 001a 0223     		movs	r3, #2
 169 001c 2B21     		movs	r1, #43
 170 001e 7868     		ldr	r0, [r7, #4]
 171 0020 FFF7FEFF 		bl	S2LP_BatchReadRegisters
  36:S2LP_Driver/s2lp_packet.c **** 
  37:S2LP_Driver/s2lp_packet.c **** 	CLEARBITS(regs_val[0], 0b11, 0);
 172              		.loc 1 37 2
 173 0024 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 174 0026 23F00303 		bic	r3, r3, #3
 175 002a DBB2     		uxtb	r3, r3
 176 002c 3B73     		strb	r3, [r7, #12]
  38:S2LP_Driver/s2lp_packet.c **** 	CLEARBITS(regs_val[1], 0xFF, 0);
 177              		.loc 1 38 2
 178 002e 0023     		movs	r3, #0
 179 0030 7B73     		strb	r3, [r7, #13]
  39:S2LP_Driver/s2lp_packet.c **** 	SETBITS(regs_val[0], GETBITS(length, 0b11, 8), 0b11, 0);
 180              		.loc 1 39 2
 181 0032 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 182 0034 3B68     		ldr	r3, [r7]
 183 0036 1B0A     		lsrs	r3, r3, #8
 184 0038 DBB2     		uxtb	r3, r3
 185 003a 03F00303 		and	r3, r3, #3
 186 003e DBB2     		uxtb	r3, r3
 187 0040 1343     		orrs	r3, r3, r2
 188 0042 DBB2     		uxtb	r3, r3
 189 0044 3B73     		strb	r3, [r7, #12]
  40:S2LP_Driver/s2lp_packet.c **** 	SETBITS(regs_val[1], GETBITS(length, 0xFF, 0), 0xFF, 0);
 190              		.loc 1 40 2
 191 0046 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 192 0048 3B68     		ldr	r3, [r7]
 193 004a DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccsXq0gm.s 			page 5


 194 004c 1343     		orrs	r3, r3, r2
 195 004e DBB2     		uxtb	r3, r3
 196 0050 7B73     		strb	r3, [r7, #13]
  41:S2LP_Driver/s2lp_packet.c **** 
  42:S2LP_Driver/s2lp_packet.c **** 	S2LP_BatchWriteRegisters(handle, S2LP_REG_PCKTCTRL6, regs_val, 2);
 197              		.loc 1 42 2
 198 0052 07F10C02 		add	r2, r7, #12
 199 0056 0223     		movs	r3, #2
 200 0058 2B21     		movs	r1, #43
 201 005a 7868     		ldr	r0, [r7, #4]
 202 005c FFF7FEFF 		bl	S2LP_BatchWriteRegisters
 203 0060 00E0     		b	.L3
 204              	.L6:
  31:S2LP_Driver/s2lp_packet.c **** 	}
 205              		.loc 1 31 3
 206 0062 00BF     		nop
 207              	.L3:
  43:S2LP_Driver/s2lp_packet.c **** }
 208              		.loc 1 43 1
 209 0064 1037     		adds	r7, r7, #16
 210              		.cfi_def_cfa_offset 8
 211 0066 BD46     		mov	sp, r7
 212              		.cfi_def_cfa_register 13
 213              		@ sp needed
 214 0068 80BD     		pop	{r7, pc}
 215              		.cfi_endproc
 216              	.LFE69:
 218              		.section	.text.S2LP_PCKT_SetSyncLength,"ax",%progbits
 219              		.align	1
 220              		.global	S2LP_PCKT_SetSyncLength
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 225              	S2LP_PCKT_SetSyncLength:
 226              	.LFB70:
  44:S2LP_Driver/s2lp_packet.c **** 
  45:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetSyncLength(S2LP_Handle* handle, size_t length) {
 227              		.loc 1 45 66
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 16
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              		.cfi_def_cfa_offset 24
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 239 0006 7860     		str	r0, [r7, #4]
 240 0008 3960     		str	r1, [r7]
  46:S2LP_Driver/s2lp_packet.c **** 	if (length > 32) {
 241              		.loc 1 46 5
 242 000a 3B68     		ldr	r3, [r7]
 243 000c 202B     		cmp	r3, #32
 244 000e 17D8     		bhi	.L10
  47:S2LP_Driver/s2lp_packet.c **** 		return;
ARM GAS  /tmp/ccsXq0gm.s 			page 6


  48:S2LP_Driver/s2lp_packet.c **** 	}
  49:S2LP_Driver/s2lp_packet.c **** 
  50:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL6);
 245              		.loc 1 50 20
 246 0010 2B21     		movs	r1, #43
 247 0012 7868     		ldr	r0, [r7, #4]
 248 0014 FFF7FEFF 		bl	S2LP_ReadRegister
 249 0018 0346     		mov	r3, r0
 250 001a FB73     		strb	r3, [r7, #15]
  51:S2LP_Driver/s2lp_packet.c **** 	CLEARBITS(reg_val, 0b111111, 2);
 251              		.loc 1 51 2
 252 001c FB7B     		ldrb	r3, [r7, #15]
 253 001e 03F00303 		and	r3, r3, #3
 254 0022 FB73     		strb	r3, [r7, #15]
  52:S2LP_Driver/s2lp_packet.c **** 	SETBITS(reg_val, length, 0b111111, 2);
 255              		.loc 1 52 2
 256 0024 3B68     		ldr	r3, [r7]
 257 0026 DBB2     		uxtb	r3, r3
 258 0028 9B00     		lsls	r3, r3, #2
 259 002a DAB2     		uxtb	r2, r3
 260 002c FB7B     		ldrb	r3, [r7, #15]
 261 002e 1343     		orrs	r3, r3, r2
 262 0030 FB73     		strb	r3, [r7, #15]
  53:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL6, reg_val);
 263              		.loc 1 53 2
 264 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 265 0034 1A46     		mov	r2, r3
 266 0036 2B21     		movs	r1, #43
 267 0038 7868     		ldr	r0, [r7, #4]
 268 003a FFF7FEFF 		bl	S2LP_WriteRegister
 269 003e 00E0     		b	.L7
 270              	.L10:
  47:S2LP_Driver/s2lp_packet.c **** 	}
 271              		.loc 1 47 3
 272 0040 00BF     		nop
 273              	.L7:
  54:S2LP_Driver/s2lp_packet.c **** }
 274              		.loc 1 54 1
 275 0042 1037     		adds	r7, r7, #16
 276              		.cfi_def_cfa_offset 8
 277 0044 BD46     		mov	sp, r7
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 0046 80BD     		pop	{r7, pc}
 281              		.cfi_endproc
 282              	.LFE70:
 284              		.section	.text.S2LP_PCKT_SetPacketLength,"ax",%progbits
 285              		.align	1
 286              		.global	S2LP_PCKT_SetPacketLength
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 291              	S2LP_PCKT_SetPacketLength:
 292              	.LFB71:
  55:S2LP_Driver/s2lp_packet.c **** 
  56:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetPacketLength(S2LP_Handle* handle, size_t length) {
 293              		.loc 1 56 68
ARM GAS  /tmp/ccsXq0gm.s 			page 7


 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 16
 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297 0000 80B5     		push	{r7, lr}
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 7, -8
 300              		.cfi_offset 14, -4
 301 0002 84B0     		sub	sp, sp, #16
 302              		.cfi_def_cfa_offset 24
 303 0004 00AF     		add	r7, sp, #0
 304              		.cfi_def_cfa_register 7
 305 0006 7860     		str	r0, [r7, #4]
 306 0008 3960     		str	r1, [r7]
  57:S2LP_Driver/s2lp_packet.c **** 	if (length > 65535) {
 307              		.loc 1 57 5
 308 000a 3B68     		ldr	r3, [r7]
 309 000c B3F5803F 		cmp	r3, #65536
 310 0010 10D2     		bcs	.L14
  58:S2LP_Driver/s2lp_packet.c **** 		return;
  59:S2LP_Driver/s2lp_packet.c **** 	}
  60:S2LP_Driver/s2lp_packet.c **** 
  61:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_vals[2] = { 0 };
 311              		.loc 1 61 10
 312 0012 0023     		movs	r3, #0
 313 0014 BB81     		strh	r3, [r7, #12]	@ movhi
  62:S2LP_Driver/s2lp_packet.c **** 
  63:S2LP_Driver/s2lp_packet.c **** 	reg_vals[0] = GETBITS(length, 0xFF, 8); // MSB
 314              		.loc 1 63 16
 315 0016 3B68     		ldr	r3, [r7]
 316 0018 1B0A     		lsrs	r3, r3, #8
 317              		.loc 1 63 14
 318 001a DBB2     		uxtb	r3, r3
 319 001c 3B73     		strb	r3, [r7, #12]
  64:S2LP_Driver/s2lp_packet.c **** 	reg_vals[1] = GETBITS(length, 0xFF, 0); // LSB
 320              		.loc 1 64 14
 321 001e 3B68     		ldr	r3, [r7]
 322 0020 DBB2     		uxtb	r3, r3
 323 0022 7B73     		strb	r3, [r7, #13]
  65:S2LP_Driver/s2lp_packet.c **** 
  66:S2LP_Driver/s2lp_packet.c **** 	S2LP_BatchWriteRegisters(handle, S2LP_REG_PCKTLEN1, reg_vals, 2);
 324              		.loc 1 66 2
 325 0024 07F10C02 		add	r2, r7, #12
 326 0028 0223     		movs	r3, #2
 327 002a 3121     		movs	r1, #49
 328 002c 7868     		ldr	r0, [r7, #4]
 329 002e FFF7FEFF 		bl	S2LP_BatchWriteRegisters
 330 0032 00E0     		b	.L11
 331              	.L14:
  58:S2LP_Driver/s2lp_packet.c **** 	}
 332              		.loc 1 58 3
 333 0034 00BF     		nop
 334              	.L11:
  67:S2LP_Driver/s2lp_packet.c **** }
 335              		.loc 1 67 1
 336 0036 1037     		adds	r7, r7, #16
 337              		.cfi_def_cfa_offset 8
 338 0038 BD46     		mov	sp, r7
ARM GAS  /tmp/ccsXq0gm.s 			page 8


 339              		.cfi_def_cfa_register 13
 340              		@ sp needed
 341 003a 80BD     		pop	{r7, pc}
 342              		.cfi_endproc
 343              	.LFE71:
 345              		.section	.text.S2LP_PCKT_SetVariablePacketLengthState,"ax",%progbits
 346              		.align	1
 347              		.global	S2LP_PCKT_SetVariablePacketLengthState
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	S2LP_PCKT_SetVariablePacketLengthState:
 353              	.LFB72:
  68:S2LP_Driver/s2lp_packet.c **** 
  69:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetVariablePacketLengthState(S2LP_Handle* handle, bool enabled) {
 354              		.loc 1 69 80
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 16
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 84B0     		sub	sp, sp, #16
 363              		.cfi_def_cfa_offset 24
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 366 0006 7860     		str	r0, [r7, #4]
 367 0008 0B46     		mov	r3, r1
 368 000a FB70     		strb	r3, [r7, #3]
  70:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL2);
 369              		.loc 1 70 20
 370 000c 2F21     		movs	r1, #47
 371 000e 7868     		ldr	r0, [r7, #4]
 372 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 373 0014 0346     		mov	r3, r0
 374 0016 FB73     		strb	r3, [r7, #15]
  71:S2LP_Driver/s2lp_packet.c **** 
  72:S2LP_Driver/s2lp_packet.c **** 	if (enabled) {
 375              		.loc 1 72 5
 376 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 377 001a 002B     		cmp	r3, #0
 378 001c 04D0     		beq	.L16
  73:S2LP_Driver/s2lp_packet.c **** 		SETBIT(reg_val, 0);
 379              		.loc 1 73 3
 380 001e FB7B     		ldrb	r3, [r7, #15]
 381 0020 43F00103 		orr	r3, r3, #1
 382 0024 FB73     		strb	r3, [r7, #15]
 383 0026 03E0     		b	.L17
 384              	.L16:
  74:S2LP_Driver/s2lp_packet.c **** 	} else {
  75:S2LP_Driver/s2lp_packet.c **** 		CLEARBIT(reg_val, 0);
 385              		.loc 1 75 3
 386 0028 FB7B     		ldrb	r3, [r7, #15]
 387 002a 23F00103 		bic	r3, r3, #1
 388 002e FB73     		strb	r3, [r7, #15]
 389              	.L17:
ARM GAS  /tmp/ccsXq0gm.s 			page 9


  76:S2LP_Driver/s2lp_packet.c **** 	}
  77:S2LP_Driver/s2lp_packet.c **** 
  78:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL2, reg_val);
 390              		.loc 1 78 2
 391 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 392 0032 1A46     		mov	r2, r3
 393 0034 2F21     		movs	r1, #47
 394 0036 7868     		ldr	r0, [r7, #4]
 395 0038 FFF7FEFF 		bl	S2LP_WriteRegister
  79:S2LP_Driver/s2lp_packet.c **** }
 396              		.loc 1 79 1
 397 003c 00BF     		nop
 398 003e 1037     		adds	r7, r7, #16
 399              		.cfi_def_cfa_offset 8
 400 0040 BD46     		mov	sp, r7
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0042 80BD     		pop	{r7, pc}
 404              		.cfi_endproc
 405              	.LFE72:
 407              		.section	.text.S2LP_PCKT_SetLengthFieldSize,"ax",%progbits
 408              		.align	1
 409              		.global	S2LP_PCKT_SetLengthFieldSize
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 414              	S2LP_PCKT_SetLengthFieldSize:
 415              	.LFB73:
  80:S2LP_Driver/s2lp_packet.c **** 
  81:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetLengthFieldSize(S2LP_Handle* handle, S2LP_Length_Field_Size size) {
 416              		.loc 1 81 85
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 16
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420 0000 80B5     		push	{r7, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 84B0     		sub	sp, sp, #16
 425              		.cfi_def_cfa_offset 24
 426 0004 00AF     		add	r7, sp, #0
 427              		.cfi_def_cfa_register 7
 428 0006 7860     		str	r0, [r7, #4]
 429 0008 0B46     		mov	r3, r1
 430 000a FB70     		strb	r3, [r7, #3]
  82:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL4);
 431              		.loc 1 82 20
 432 000c 2D21     		movs	r1, #45
 433 000e 7868     		ldr	r0, [r7, #4]
 434 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 435 0014 0346     		mov	r3, r0
 436 0016 FB73     		strb	r3, [r7, #15]
  83:S2LP_Driver/s2lp_packet.c **** 
  84:S2LP_Driver/s2lp_packet.c **** 	switch (size) {
 437              		.loc 1 84 2
 438 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 439 001a 012B     		cmp	r3, #1
ARM GAS  /tmp/ccsXq0gm.s 			page 10


 440 001c 02D0     		beq	.L19
 441 001e 022B     		cmp	r3, #2
 442 0020 05D0     		beq	.L20
 443 0022 09E0     		b	.L21
 444              	.L19:
  85:S2LP_Driver/s2lp_packet.c **** 		case S2LP_PAYLOAD_LENGTH_1B:
  86:S2LP_Driver/s2lp_packet.c **** 			CLEARBIT(reg_val, 7);
 445              		.loc 1 86 4
 446 0024 FB7B     		ldrb	r3, [r7, #15]
 447 0026 03F07F03 		and	r3, r3, #127
 448 002a FB73     		strb	r3, [r7, #15]
  87:S2LP_Driver/s2lp_packet.c **** 			break;
 449              		.loc 1 87 4
 450 002c 04E0     		b	.L21
 451              	.L20:
  88:S2LP_Driver/s2lp_packet.c **** 		case S2LP_PAYLOAD_LENGTH_2B:
  89:S2LP_Driver/s2lp_packet.c **** 			SETBIT(reg_val, 7);
 452              		.loc 1 89 4
 453 002e FB7B     		ldrb	r3, [r7, #15]
 454 0030 63F07F03 		orn	r3, r3, #127
 455 0034 FB73     		strb	r3, [r7, #15]
  90:S2LP_Driver/s2lp_packet.c **** 			break;
 456              		.loc 1 90 4
 457 0036 00BF     		nop
 458              	.L21:
  91:S2LP_Driver/s2lp_packet.c **** 	}
  92:S2LP_Driver/s2lp_packet.c **** 
  93:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL4, reg_val);
 459              		.loc 1 93 2
 460 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 461 003a 1A46     		mov	r2, r3
 462 003c 2D21     		movs	r1, #45
 463 003e 7868     		ldr	r0, [r7, #4]
 464 0040 FFF7FEFF 		bl	S2LP_WriteRegister
  94:S2LP_Driver/s2lp_packet.c **** }
 465              		.loc 1 94 1
 466 0044 00BF     		nop
 467 0046 1037     		adds	r7, r7, #16
 468              		.cfi_def_cfa_offset 8
 469 0048 BD46     		mov	sp, r7
 470              		.cfi_def_cfa_register 13
 471              		@ sp needed
 472 004a 80BD     		pop	{r7, pc}
 473              		.cfi_endproc
 474              	.LFE73:
 476              		.section	.text.S2LP_PCKT_SetDestinationAddressState,"ax",%progbits
 477              		.align	1
 478              		.global	S2LP_PCKT_SetDestinationAddressState
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	S2LP_PCKT_SetDestinationAddressState:
 484              	.LFB74:
  95:S2LP_Driver/s2lp_packet.c **** 
  96:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetDestinationAddressState(S2LP_Handle* handle, bool enabled) {
 485              		.loc 1 96 78
 486              		.cfi_startproc
ARM GAS  /tmp/ccsXq0gm.s 			page 11


 487              		@ args = 0, pretend = 0, frame = 16
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 84B0     		sub	sp, sp, #16
 494              		.cfi_def_cfa_offset 24
 495 0004 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 497 0006 7860     		str	r0, [r7, #4]
 498 0008 0B46     		mov	r3, r1
 499 000a FB70     		strb	r3, [r7, #3]
  97:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL4);
 500              		.loc 1 97 20
 501 000c 2D21     		movs	r1, #45
 502 000e 7868     		ldr	r0, [r7, #4]
 503 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 504 0014 0346     		mov	r3, r0
 505 0016 FB73     		strb	r3, [r7, #15]
  98:S2LP_Driver/s2lp_packet.c **** 
  99:S2LP_Driver/s2lp_packet.c **** 	if (enabled) {
 506              		.loc 1 99 5
 507 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 508 001a 002B     		cmp	r3, #0
 509 001c 04D0     		beq	.L23
 100:S2LP_Driver/s2lp_packet.c **** 		SETBIT(reg_val, 3);
 510              		.loc 1 100 3
 511 001e FB7B     		ldrb	r3, [r7, #15]
 512 0020 43F00803 		orr	r3, r3, #8
 513 0024 FB73     		strb	r3, [r7, #15]
 514 0026 03E0     		b	.L24
 515              	.L23:
 101:S2LP_Driver/s2lp_packet.c **** 	} else {
 102:S2LP_Driver/s2lp_packet.c **** 		CLEARBIT(reg_val, 3);
 516              		.loc 1 102 3
 517 0028 FB7B     		ldrb	r3, [r7, #15]
 518 002a 23F00803 		bic	r3, r3, #8
 519 002e FB73     		strb	r3, [r7, #15]
 520              	.L24:
 103:S2LP_Driver/s2lp_packet.c **** 	}
 104:S2LP_Driver/s2lp_packet.c **** 
 105:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL4, reg_val);
 521              		.loc 1 105 2
 522 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 523 0032 1A46     		mov	r2, r3
 524 0034 2D21     		movs	r1, #45
 525 0036 7868     		ldr	r0, [r7, #4]
 526 0038 FFF7FEFF 		bl	S2LP_WriteRegister
 106:S2LP_Driver/s2lp_packet.c **** }
 527              		.loc 1 106 1
 528 003c 00BF     		nop
 529 003e 1037     		adds	r7, r7, #16
 530              		.cfi_def_cfa_offset 8
 531 0040 BD46     		mov	sp, r7
 532              		.cfi_def_cfa_register 13
 533              		@ sp needed
ARM GAS  /tmp/ccsXq0gm.s 			page 12


 534 0042 80BD     		pop	{r7, pc}
 535              		.cfi_endproc
 536              	.LFE74:
 538              		.section	.text.S2LP_PCKT_SetDestinationAddress,"ax",%progbits
 539              		.align	1
 540              		.global	S2LP_PCKT_SetDestinationAddress
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 545              	S2LP_PCKT_SetDestinationAddress:
 546              	.LFB75:
 107:S2LP_Driver/s2lp_packet.c **** 
 108:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetDestinationAddress(S2LP_Handle* handle, uint8_t address) {
 547              		.loc 1 108 76
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 8
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 80B5     		push	{r7, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 82B0     		sub	sp, sp, #8
 556              		.cfi_def_cfa_offset 16
 557 0004 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 559 0006 7860     		str	r0, [r7, #4]
 560 0008 0B46     		mov	r3, r1
 561 000a FB70     		strb	r3, [r7, #3]
 109:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKT_FLT_GOALS3, address);
 562              		.loc 1 109 2
 563 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 564 000e 1A46     		mov	r2, r3
 565 0010 4221     		movs	r1, #66
 566 0012 7868     		ldr	r0, [r7, #4]
 567 0014 FFF7FEFF 		bl	S2LP_WriteRegister
 110:S2LP_Driver/s2lp_packet.c **** }
 568              		.loc 1 110 1
 569 0018 00BF     		nop
 570 001a 0837     		adds	r7, r7, #8
 571              		.cfi_def_cfa_offset 8
 572 001c BD46     		mov	sp, r7
 573              		.cfi_def_cfa_register 13
 574              		@ sp needed
 575 001e 80BD     		pop	{r7, pc}
 576              		.cfi_endproc
 577              	.LFE75:
 579              		.section	.text.S2LP_PCKT_SetSourceAddress,"ax",%progbits
 580              		.align	1
 581              		.global	S2LP_PCKT_SetSourceAddress
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 586              	S2LP_PCKT_SetSourceAddress:
 587              	.LFB76:
 111:S2LP_Driver/s2lp_packet.c **** 
 112:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetSourceAddress(S2LP_Handle* handle, uint8_t address) {
 588              		.loc 1 112 71
ARM GAS  /tmp/ccsXq0gm.s 			page 13


 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 8
 591              		@ frame_needed = 1, uses_anonymous_args = 0
 592 0000 80B5     		push	{r7, lr}
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 7, -8
 595              		.cfi_offset 14, -4
 596 0002 82B0     		sub	sp, sp, #8
 597              		.cfi_def_cfa_offset 16
 598 0004 00AF     		add	r7, sp, #0
 599              		.cfi_def_cfa_register 7
 600 0006 7860     		str	r0, [r7, #4]
 601 0008 0B46     		mov	r3, r1
 602 000a FB70     		strb	r3, [r7, #3]
 113:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKT_FLT_GOALS0, address);
 603              		.loc 1 113 2
 604 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 605 000e 1A46     		mov	r2, r3
 606 0010 4521     		movs	r1, #69
 607 0012 7868     		ldr	r0, [r7, #4]
 608 0014 FFF7FEFF 		bl	S2LP_WriteRegister
 114:S2LP_Driver/s2lp_packet.c **** }
 609              		.loc 1 114 1
 610 0018 00BF     		nop
 611 001a 0837     		adds	r7, r7, #8
 612              		.cfi_def_cfa_offset 8
 613 001c BD46     		mov	sp, r7
 614              		.cfi_def_cfa_register 13
 615              		@ sp needed
 616 001e 80BD     		pop	{r7, pc}
 617              		.cfi_endproc
 618              	.LFE76:
 620              		.section	.text.S2LP_PCKT_SetPostambleLength,"ax",%progbits
 621              		.align	1
 622              		.global	S2LP_PCKT_SetPostambleLength
 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 627              	S2LP_PCKT_SetPostambleLength:
 628              	.LFB77:
 115:S2LP_Driver/s2lp_packet.c **** 
 116:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetPostambleLength(S2LP_Handle* handle, size_t length) {
 629              		.loc 1 116 71
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 8
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633 0000 80B5     		push	{r7, lr}
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 82B0     		sub	sp, sp, #8
 638              		.cfi_def_cfa_offset 16
 639 0004 00AF     		add	r7, sp, #0
 640              		.cfi_def_cfa_register 7
 641 0006 7860     		str	r0, [r7, #4]
 642 0008 3960     		str	r1, [r7]
 117:S2LP_Driver/s2lp_packet.c **** 	if (length > 255) {
ARM GAS  /tmp/ccsXq0gm.s 			page 14


 643              		.loc 1 117 5
 644 000a 3B68     		ldr	r3, [r7]
 645 000c FF2B     		cmp	r3, #255
 646 000e 07D8     		bhi	.L30
 118:S2LP_Driver/s2lp_packet.c **** 		return;
 119:S2LP_Driver/s2lp_packet.c **** 	}
 120:S2LP_Driver/s2lp_packet.c **** 
 121:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKT_PSTMBL, (uint8_t) length);
 647              		.loc 1 121 2
 648 0010 3B68     		ldr	r3, [r7]
 649 0012 DBB2     		uxtb	r3, r3
 650 0014 1A46     		mov	r2, r3
 651 0016 3821     		movs	r1, #56
 652 0018 7868     		ldr	r0, [r7, #4]
 653 001a FFF7FEFF 		bl	S2LP_WriteRegister
 654 001e 00E0     		b	.L27
 655              	.L30:
 118:S2LP_Driver/s2lp_packet.c **** 		return;
 656              		.loc 1 118 3
 657 0020 00BF     		nop
 658              	.L27:
 122:S2LP_Driver/s2lp_packet.c **** }
 659              		.loc 1 122 1
 660 0022 0837     		adds	r7, r7, #8
 661              		.cfi_def_cfa_offset 8
 662 0024 BD46     		mov	sp, r7
 663              		.cfi_def_cfa_register 13
 664              		@ sp needed
 665 0026 80BD     		pop	{r7, pc}
 666              		.cfi_endproc
 667              	.LFE77:
 669              		.section	.text.S2LP_PCKT_SetCRCMode,"ax",%progbits
 670              		.align	1
 671              		.global	S2LP_PCKT_SetCRCMode
 672              		.syntax unified
 673              		.thumb
 674              		.thumb_func
 676              	S2LP_PCKT_SetCRCMode:
 677              	.LFB78:
 123:S2LP_Driver/s2lp_packet.c **** 
 124:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetCRCMode(S2LP_Handle* handle, S2LP_CRC_Mode mode) {
 678              		.loc 1 124 68
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 16
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 80B5     		push	{r7, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 84B0     		sub	sp, sp, #16
 687              		.cfi_def_cfa_offset 24
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 7860     		str	r0, [r7, #4]
 691 0008 0B46     		mov	r3, r1
 692 000a FB70     		strb	r3, [r7, #3]
 125:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL1);
ARM GAS  /tmp/ccsXq0gm.s 			page 15


 693              		.loc 1 125 20
 694 000c 3021     		movs	r1, #48
 695 000e 7868     		ldr	r0, [r7, #4]
 696 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 697 0014 0346     		mov	r3, r0
 698 0016 FB73     		strb	r3, [r7, #15]
 126:S2LP_Driver/s2lp_packet.c **** 
 127:S2LP_Driver/s2lp_packet.c **** 	CLEARBITS(reg_val, 0b111, 5);
 699              		.loc 1 127 2
 700 0018 FB7B     		ldrb	r3, [r7, #15]
 701 001a 03F01F03 		and	r3, r3, #31
 702 001e FB73     		strb	r3, [r7, #15]
 128:S2LP_Driver/s2lp_packet.c **** 	SETBITS(reg_val, (uint8_t )mode, 0b111, 5);
 703              		.loc 1 128 2
 704 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 705 0022 5B01     		lsls	r3, r3, #5
 706 0024 5AB2     		sxtb	r2, r3
 707 0026 97F90F30 		ldrsb	r3, [r7, #15]
 708 002a 1343     		orrs	r3, r3, r2
 709 002c 5BB2     		sxtb	r3, r3
 710 002e FB73     		strb	r3, [r7, #15]
 129:S2LP_Driver/s2lp_packet.c **** 
 130:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL1, reg_val);
 711              		.loc 1 130 2
 712 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 713 0032 1A46     		mov	r2, r3
 714 0034 3021     		movs	r1, #48
 715 0036 7868     		ldr	r0, [r7, #4]
 716 0038 FFF7FEFF 		bl	S2LP_WriteRegister
 131:S2LP_Driver/s2lp_packet.c **** }
 717              		.loc 1 131 1
 718 003c 00BF     		nop
 719 003e 1037     		adds	r7, r7, #16
 720              		.cfi_def_cfa_offset 8
 721 0040 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 0042 80BD     		pop	{r7, pc}
 725              		.cfi_endproc
 726              	.LFE78:
 728              		.section	.text.S2LP_PCKT_DisableDataCoding,"ax",%progbits
 729              		.align	1
 730              		.global	S2LP_PCKT_DisableDataCoding
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	S2LP_PCKT_DisableDataCoding:
 736              	.LFB79:
 132:S2LP_Driver/s2lp_packet.c **** 
 133:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_DisableDataCoding(S2LP_Handle* handle) {
 737              		.loc 1 133 55
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 16
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741 0000 80B5     		push	{r7, lr}
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 7, -8
ARM GAS  /tmp/ccsXq0gm.s 			page 16


 744              		.cfi_offset 14, -4
 745 0002 84B0     		sub	sp, sp, #16
 746              		.cfi_def_cfa_offset 24
 747 0004 00AF     		add	r7, sp, #0
 748              		.cfi_def_cfa_register 7
 749 0006 7860     		str	r0, [r7, #4]
 134:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_vals[2] = { 0 };
 750              		.loc 1 134 10
 751 0008 0023     		movs	r3, #0
 752 000a BB81     		strh	r3, [r7, #12]	@ movhi
 135:S2LP_Driver/s2lp_packet.c **** 	S2LP_BatchReadRegisters(handle, S2LP_REG_PCKTCTRL2, reg_vals, 2);
 753              		.loc 1 135 2
 754 000c 07F10C02 		add	r2, r7, #12
 755 0010 0223     		movs	r3, #2
 756 0012 2F21     		movs	r1, #47
 757 0014 7868     		ldr	r0, [r7, #4]
 758 0016 FFF7FEFF 		bl	S2LP_BatchReadRegisters
 136:S2LP_Driver/s2lp_packet.c **** 
 137:S2LP_Driver/s2lp_packet.c **** 	CLEARBIT(reg_vals[0], 2); // disable 3of6
 759              		.loc 1 137 2
 760 001a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 761 001c 23F00403 		bic	r3, r3, #4
 762 0020 DBB2     		uxtb	r3, r3
 763 0022 3B73     		strb	r3, [r7, #12]
 138:S2LP_Driver/s2lp_packet.c **** 	CLEARBIT(reg_vals[0], 1); // disable manchester
 764              		.loc 1 138 2
 765 0024 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 766 0026 23F00203 		bic	r3, r3, #2
 767 002a DBB2     		uxtb	r3, r3
 768 002c 3B73     		strb	r3, [r7, #12]
 139:S2LP_Driver/s2lp_packet.c **** 	CLEARBIT(reg_vals[1], 0); // disable fec
 769              		.loc 1 139 2
 770 002e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 771 0030 23F00103 		bic	r3, r3, #1
 772 0034 DBB2     		uxtb	r3, r3
 773 0036 7B73     		strb	r3, [r7, #13]
 140:S2LP_Driver/s2lp_packet.c **** 
 141:S2LP_Driver/s2lp_packet.c **** 	S2LP_BatchWriteRegisters(handle, S2LP_REG_PCKTCTRL2, reg_vals, 2);
 774              		.loc 1 141 2
 775 0038 07F10C02 		add	r2, r7, #12
 776 003c 0223     		movs	r3, #2
 777 003e 2F21     		movs	r1, #47
 778 0040 7868     		ldr	r0, [r7, #4]
 779 0042 FFF7FEFF 		bl	S2LP_BatchWriteRegisters
 142:S2LP_Driver/s2lp_packet.c **** }
 780              		.loc 1 142 1
 781 0046 00BF     		nop
 782 0048 1037     		adds	r7, r7, #16
 783              		.cfi_def_cfa_offset 8
 784 004a BD46     		mov	sp, r7
 785              		.cfi_def_cfa_register 13
 786              		@ sp needed
 787 004c 80BD     		pop	{r7, pc}
 788              		.cfi_endproc
 789              	.LFE79:
 791              		.section	.text.S2LP_PCKT_SetDataCoding,"ax",%progbits
 792              		.align	1
ARM GAS  /tmp/ccsXq0gm.s 			page 17


 793              		.global	S2LP_PCKT_SetDataCoding
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 798              	S2LP_PCKT_SetDataCoding:
 799              	.LFB80:
 143:S2LP_Driver/s2lp_packet.c **** 
 144:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetDataCoding(S2LP_Handle* handle, S2LP_Data_Coding mode) {
 800              		.loc 1 144 74
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 16
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804 0000 80B5     		push	{r7, lr}
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 7, -8
 807              		.cfi_offset 14, -4
 808 0002 84B0     		sub	sp, sp, #16
 809              		.cfi_def_cfa_offset 24
 810 0004 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 812 0006 7860     		str	r0, [r7, #4]
 813 0008 0B46     		mov	r3, r1
 814 000a FB70     		strb	r3, [r7, #3]
 145:S2LP_Driver/s2lp_packet.c **** 	S2LP_PCKT_DisableDataCoding(handle);
 815              		.loc 1 145 2
 816 000c 7868     		ldr	r0, [r7, #4]
 817 000e FFF7FEFF 		bl	S2LP_PCKT_DisableDataCoding
 146:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = 0;
 818              		.loc 1 146 10
 819 0012 0023     		movs	r3, #0
 820 0014 FB73     		strb	r3, [r7, #15]
 147:S2LP_Driver/s2lp_packet.c **** 
 148:S2LP_Driver/s2lp_packet.c **** 	switch (mode) {
 821              		.loc 1 148 2
 822 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 823 0018 032B     		cmp	r3, #3
 824 001a 28D0     		beq	.L34
 825 001c 032B     		cmp	r3, #3
 826 001e 37DC     		bgt	.L38
 827 0020 012B     		cmp	r3, #1
 828 0022 02D0     		beq	.L36
 829 0024 022B     		cmp	r3, #2
 830 0026 11D0     		beq	.L37
 149:S2LP_Driver/s2lp_packet.c **** 		case S2LP_CODING_FEC: {
 150:S2LP_Driver/s2lp_packet.c **** 			reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL1);
 151:S2LP_Driver/s2lp_packet.c **** 			SETBIT(reg_val, 0);
 152:S2LP_Driver/s2lp_packet.c **** 			S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL1, reg_val);
 153:S2LP_Driver/s2lp_packet.c **** 			break;
 154:S2LP_Driver/s2lp_packet.c **** 		}
 155:S2LP_Driver/s2lp_packet.c **** 		case S2LP_CODING_MANCHESTER: {
 156:S2LP_Driver/s2lp_packet.c **** 			reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL2);
 157:S2LP_Driver/s2lp_packet.c **** 			SETBIT(reg_val, 1);
 158:S2LP_Driver/s2lp_packet.c **** 			S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL2, reg_val);
 159:S2LP_Driver/s2lp_packet.c **** 			break;
 160:S2LP_Driver/s2lp_packet.c **** 		}
 161:S2LP_Driver/s2lp_packet.c **** 		case S2LP_CODING_3_OUT_OF_6: {
 162:S2LP_Driver/s2lp_packet.c **** 			reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL2);
ARM GAS  /tmp/ccsXq0gm.s 			page 18


 163:S2LP_Driver/s2lp_packet.c **** 			SETBIT(reg_val, 2);
 164:S2LP_Driver/s2lp_packet.c **** 			S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL2, reg_val);
 165:S2LP_Driver/s2lp_packet.c **** 			break;
 166:S2LP_Driver/s2lp_packet.c **** 		}
 167:S2LP_Driver/s2lp_packet.c **** 		default: {
 168:S2LP_Driver/s2lp_packet.c **** 		}
 169:S2LP_Driver/s2lp_packet.c **** 	}
 170:S2LP_Driver/s2lp_packet.c **** }
 831              		.loc 1 170 1
 832 0028 32E0     		b	.L38
 833              	.L36:
 150:S2LP_Driver/s2lp_packet.c **** 			SETBIT(reg_val, 0);
 834              		.loc 1 150 14
 835 002a 3021     		movs	r1, #48
 836 002c 7868     		ldr	r0, [r7, #4]
 837 002e FFF7FEFF 		bl	S2LP_ReadRegister
 838 0032 0346     		mov	r3, r0
 839 0034 FB73     		strb	r3, [r7, #15]
 151:S2LP_Driver/s2lp_packet.c **** 			S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL1, reg_val);
 840              		.loc 1 151 4
 841 0036 FB7B     		ldrb	r3, [r7, #15]
 842 0038 43F00103 		orr	r3, r3, #1
 843 003c FB73     		strb	r3, [r7, #15]
 152:S2LP_Driver/s2lp_packet.c **** 			break;
 844              		.loc 1 152 4
 845 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 846 0040 1A46     		mov	r2, r3
 847 0042 3021     		movs	r1, #48
 848 0044 7868     		ldr	r0, [r7, #4]
 849 0046 FFF7FEFF 		bl	S2LP_WriteRegister
 153:S2LP_Driver/s2lp_packet.c **** 		}
 850              		.loc 1 153 4
 851 004a 21E0     		b	.L35
 852              	.L37:
 156:S2LP_Driver/s2lp_packet.c **** 			SETBIT(reg_val, 1);
 853              		.loc 1 156 14
 854 004c 2F21     		movs	r1, #47
 855 004e 7868     		ldr	r0, [r7, #4]
 856 0050 FFF7FEFF 		bl	S2LP_ReadRegister
 857 0054 0346     		mov	r3, r0
 858 0056 FB73     		strb	r3, [r7, #15]
 157:S2LP_Driver/s2lp_packet.c **** 			S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL2, reg_val);
 859              		.loc 1 157 4
 860 0058 FB7B     		ldrb	r3, [r7, #15]
 861 005a 43F00203 		orr	r3, r3, #2
 862 005e FB73     		strb	r3, [r7, #15]
 158:S2LP_Driver/s2lp_packet.c **** 			break;
 863              		.loc 1 158 4
 864 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 865 0062 1A46     		mov	r2, r3
 866 0064 2F21     		movs	r1, #47
 867 0066 7868     		ldr	r0, [r7, #4]
 868 0068 FFF7FEFF 		bl	S2LP_WriteRegister
 159:S2LP_Driver/s2lp_packet.c **** 		}
 869              		.loc 1 159 4
 870 006c 10E0     		b	.L35
 871              	.L34:
ARM GAS  /tmp/ccsXq0gm.s 			page 19


 162:S2LP_Driver/s2lp_packet.c **** 			SETBIT(reg_val, 2);
 872              		.loc 1 162 14
 873 006e 2F21     		movs	r1, #47
 874 0070 7868     		ldr	r0, [r7, #4]
 875 0072 FFF7FEFF 		bl	S2LP_ReadRegister
 876 0076 0346     		mov	r3, r0
 877 0078 FB73     		strb	r3, [r7, #15]
 163:S2LP_Driver/s2lp_packet.c **** 			S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL2, reg_val);
 878              		.loc 1 163 4
 879 007a FB7B     		ldrb	r3, [r7, #15]
 880 007c 43F00403 		orr	r3, r3, #4
 881 0080 FB73     		strb	r3, [r7, #15]
 164:S2LP_Driver/s2lp_packet.c **** 			break;
 882              		.loc 1 164 4
 883 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 884 0084 1A46     		mov	r2, r3
 885 0086 2F21     		movs	r1, #47
 886 0088 7868     		ldr	r0, [r7, #4]
 887 008a FFF7FEFF 		bl	S2LP_WriteRegister
 165:S2LP_Driver/s2lp_packet.c **** 		}
 888              		.loc 1 165 4
 889 008e 00BF     		nop
 890              	.L35:
 891              	.L38:
 892              		.loc 1 170 1
 893 0090 00BF     		nop
 894 0092 1037     		adds	r7, r7, #16
 895              		.cfi_def_cfa_offset 8
 896 0094 BD46     		mov	sp, r7
 897              		.cfi_def_cfa_register 13
 898              		@ sp needed
 899 0096 80BD     		pop	{r7, pc}
 900              		.cfi_endproc
 901              	.LFE80:
 903              		.section	.text.S2LP_PCKT_SetDataWhiteningState,"ax",%progbits
 904              		.align	1
 905              		.global	S2LP_PCKT_SetDataWhiteningState
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 910              	S2LP_PCKT_SetDataWhiteningState:
 911              	.LFB81:
 171:S2LP_Driver/s2lp_packet.c **** 
 172:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetDataWhiteningState(S2LP_Handle* handle, bool enabled) {
 912              		.loc 1 172 73
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 16
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916 0000 80B5     		push	{r7, lr}
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 7, -8
 919              		.cfi_offset 14, -4
 920 0002 84B0     		sub	sp, sp, #16
 921              		.cfi_def_cfa_offset 24
 922 0004 00AF     		add	r7, sp, #0
 923              		.cfi_def_cfa_register 7
 924 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccsXq0gm.s 			page 20


 925 0008 0B46     		mov	r3, r1
 926 000a FB70     		strb	r3, [r7, #3]
 173:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL1);
 927              		.loc 1 173 20
 928 000c 3021     		movs	r1, #48
 929 000e 7868     		ldr	r0, [r7, #4]
 930 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 931 0014 0346     		mov	r3, r0
 932 0016 FB73     		strb	r3, [r7, #15]
 174:S2LP_Driver/s2lp_packet.c **** 
 175:S2LP_Driver/s2lp_packet.c **** 	if (enabled) {
 933              		.loc 1 175 5
 934 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 935 001a 002B     		cmp	r3, #0
 936 001c 04D0     		beq	.L40
 176:S2LP_Driver/s2lp_packet.c **** 		SETBIT(reg_val, 4);
 937              		.loc 1 176 3
 938 001e FB7B     		ldrb	r3, [r7, #15]
 939 0020 43F01003 		orr	r3, r3, #16
 940 0024 FB73     		strb	r3, [r7, #15]
 941 0026 03E0     		b	.L41
 942              	.L40:
 177:S2LP_Driver/s2lp_packet.c **** 	} else {
 178:S2LP_Driver/s2lp_packet.c **** 		CLEARBIT(reg_val, 4);
 943              		.loc 1 178 3
 944 0028 FB7B     		ldrb	r3, [r7, #15]
 945 002a 23F01003 		bic	r3, r3, #16
 946 002e FB73     		strb	r3, [r7, #15]
 947              	.L41:
 179:S2LP_Driver/s2lp_packet.c **** 	}
 180:S2LP_Driver/s2lp_packet.c **** 
 181:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKTCTRL1, reg_val);
 948              		.loc 1 181 2
 949 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 950 0032 1A46     		mov	r2, r3
 951 0034 3021     		movs	r1, #48
 952 0036 7868     		ldr	r0, [r7, #4]
 953 0038 FFF7FEFF 		bl	S2LP_WriteRegister
 182:S2LP_Driver/s2lp_packet.c **** }
 954              		.loc 1 182 1
 955 003c 00BF     		nop
 956 003e 1037     		adds	r7, r7, #16
 957              		.cfi_def_cfa_offset 8
 958 0040 BD46     		mov	sp, r7
 959              		.cfi_def_cfa_register 13
 960              		@ sp needed
 961 0042 80BD     		pop	{r7, pc}
 962              		.cfi_endproc
 963              	.LFE81:
 965              		.section	.text.S2LP_PCKT_SetCRCFilteringState,"ax",%progbits
 966              		.align	1
 967              		.global	S2LP_PCKT_SetCRCFilteringState
 968              		.syntax unified
 969              		.thumb
 970              		.thumb_func
 972              	S2LP_PCKT_SetCRCFilteringState:
 973              	.LFB82:
ARM GAS  /tmp/ccsXq0gm.s 			page 21


 183:S2LP_Driver/s2lp_packet.c **** 
 184:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetCRCFilteringState(S2LP_Handle* handle, bool enabled) {
 974              		.loc 1 184 72
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 16
 977              		@ frame_needed = 1, uses_anonymous_args = 0
 978 0000 80B5     		push	{r7, lr}
 979              		.cfi_def_cfa_offset 8
 980              		.cfi_offset 7, -8
 981              		.cfi_offset 14, -4
 982 0002 84B0     		sub	sp, sp, #16
 983              		.cfi_def_cfa_offset 24
 984 0004 00AF     		add	r7, sp, #0
 985              		.cfi_def_cfa_register 7
 986 0006 7860     		str	r0, [r7, #4]
 987 0008 0B46     		mov	r3, r1
 988 000a FB70     		strb	r3, [r7, #3]
 185:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKT_FLT_OPTIONS);
 989              		.loc 1 185 20
 990 000c 4021     		movs	r1, #64
 991 000e 7868     		ldr	r0, [r7, #4]
 992 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 993 0014 0346     		mov	r3, r0
 994 0016 FB73     		strb	r3, [r7, #15]
 186:S2LP_Driver/s2lp_packet.c **** 
 187:S2LP_Driver/s2lp_packet.c **** 	if (enabled) {
 995              		.loc 1 187 5
 996 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 997 001a 002B     		cmp	r3, #0
 998 001c 04D0     		beq	.L43
 188:S2LP_Driver/s2lp_packet.c **** 		SETBIT(reg_val, 0);
 999              		.loc 1 188 3
 1000 001e FB7B     		ldrb	r3, [r7, #15]
 1001 0020 43F00103 		orr	r3, r3, #1
 1002 0024 FB73     		strb	r3, [r7, #15]
 1003 0026 03E0     		b	.L44
 1004              	.L43:
 189:S2LP_Driver/s2lp_packet.c **** 	} else {
 190:S2LP_Driver/s2lp_packet.c **** 		CLEARBIT(reg_val, 0);
 1005              		.loc 1 190 3
 1006 0028 FB7B     		ldrb	r3, [r7, #15]
 1007 002a 23F00103 		bic	r3, r3, #1
 1008 002e FB73     		strb	r3, [r7, #15]
 1009              	.L44:
 191:S2LP_Driver/s2lp_packet.c **** 	}
 192:S2LP_Driver/s2lp_packet.c **** 
 193:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKT_FLT_OPTIONS, reg_val);
 1010              		.loc 1 193 2
 1011 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1012 0032 1A46     		mov	r2, r3
 1013 0034 4021     		movs	r1, #64
 1014 0036 7868     		ldr	r0, [r7, #4]
 1015 0038 FFF7FEFF 		bl	S2LP_WriteRegister
 194:S2LP_Driver/s2lp_packet.c **** }
 1016              		.loc 1 194 1
 1017 003c 00BF     		nop
 1018 003e 1037     		adds	r7, r7, #16
ARM GAS  /tmp/ccsXq0gm.s 			page 22


 1019              		.cfi_def_cfa_offset 8
 1020 0040 BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 0042 80BD     		pop	{r7, pc}
 1024              		.cfi_endproc
 1025              	.LFE82:
 1027              		.section	.text.S2LP_PCKT_SetAutoPacketFilteringState,"ax",%progbits
 1028              		.align	1
 1029              		.global	S2LP_PCKT_SetAutoPacketFilteringState
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1034              	S2LP_PCKT_SetAutoPacketFilteringState:
 1035              	.LFB83:
 195:S2LP_Driver/s2lp_packet.c **** 
 196:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetAutoPacketFilteringState(S2LP_Handle* handle, bool enabled) {
 1036              		.loc 1 196 79
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 16
 1039              		@ frame_needed = 1, uses_anonymous_args = 0
 1040 0000 80B5     		push	{r7, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 7, -8
 1043              		.cfi_offset 14, -4
 1044 0002 84B0     		sub	sp, sp, #16
 1045              		.cfi_def_cfa_offset 24
 1046 0004 00AF     		add	r7, sp, #0
 1047              		.cfi_def_cfa_register 7
 1048 0006 7860     		str	r0, [r7, #4]
 1049 0008 0B46     		mov	r3, r1
 1050 000a FB70     		strb	r3, [r7, #3]
 197:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PROTOCOL1);
 1051              		.loc 1 197 20
 1052 000c 3A21     		movs	r1, #58
 1053 000e 7868     		ldr	r0, [r7, #4]
 1054 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 1055 0014 0346     		mov	r3, r0
 1056 0016 FB73     		strb	r3, [r7, #15]
 198:S2LP_Driver/s2lp_packet.c **** 
 199:S2LP_Driver/s2lp_packet.c **** 	if (enabled) {
 1057              		.loc 1 199 5
 1058 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1059 001a 002B     		cmp	r3, #0
 1060 001c 04D0     		beq	.L46
 200:S2LP_Driver/s2lp_packet.c **** 		SETBIT(reg_val, 0);
 1061              		.loc 1 200 3
 1062 001e FB7B     		ldrb	r3, [r7, #15]
 1063 0020 43F00103 		orr	r3, r3, #1
 1064 0024 FB73     		strb	r3, [r7, #15]
 1065 0026 03E0     		b	.L47
 1066              	.L46:
 201:S2LP_Driver/s2lp_packet.c **** 	} else {
 202:S2LP_Driver/s2lp_packet.c **** 		CLEARBIT(reg_val, 0);
 1067              		.loc 1 202 3
 1068 0028 FB7B     		ldrb	r3, [r7, #15]
 1069 002a 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/ccsXq0gm.s 			page 23


 1070 002e FB73     		strb	r3, [r7, #15]
 1071              	.L47:
 203:S2LP_Driver/s2lp_packet.c **** 	}
 204:S2LP_Driver/s2lp_packet.c **** 
 205:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PROTOCOL1, reg_val);
 1072              		.loc 1 205 2
 1073 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1074 0032 1A46     		mov	r2, r3
 1075 0034 3A21     		movs	r1, #58
 1076 0036 7868     		ldr	r0, [r7, #4]
 1077 0038 FFF7FEFF 		bl	S2LP_WriteRegister
 206:S2LP_Driver/s2lp_packet.c **** }
 1078              		.loc 1 206 1
 1079 003c 00BF     		nop
 1080 003e 1037     		adds	r7, r7, #16
 1081              		.cfi_def_cfa_offset 8
 1082 0040 BD46     		mov	sp, r7
 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 0042 80BD     		pop	{r7, pc}
 1086              		.cfi_endproc
 1087              	.LFE83:
 1089              		.section	.text.S2LP_PCKT_SetDestinationAddressFilteringState,"ax",%progbits
 1090              		.align	1
 1091              		.global	S2LP_PCKT_SetDestinationAddressFilteringState
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1096              	S2LP_PCKT_SetDestinationAddressFilteringState:
 1097              	.LFB84:
 207:S2LP_Driver/s2lp_packet.c **** 
 208:S2LP_Driver/s2lp_packet.c **** void S2LP_PCKT_SetDestinationAddressFilteringState(S2LP_Handle* handle, bool enabled) {
 1098              		.loc 1 208 87
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 16
 1101              		@ frame_needed = 1, uses_anonymous_args = 0
 1102 0000 80B5     		push	{r7, lr}
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 7, -8
 1105              		.cfi_offset 14, -4
 1106 0002 84B0     		sub	sp, sp, #16
 1107              		.cfi_def_cfa_offset 24
 1108 0004 00AF     		add	r7, sp, #0
 1109              		.cfi_def_cfa_register 7
 1110 0006 7860     		str	r0, [r7, #4]
 1111 0008 0B46     		mov	r3, r1
 1112 000a FB70     		strb	r3, [r7, #3]
 209:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKT_FLT_OPTIONS);
 1113              		.loc 1 209 20
 1114 000c 4021     		movs	r1, #64
 1115 000e 7868     		ldr	r0, [r7, #4]
 1116 0010 FFF7FEFF 		bl	S2LP_ReadRegister
 1117 0014 0346     		mov	r3, r0
 1118 0016 FB73     		strb	r3, [r7, #15]
 210:S2LP_Driver/s2lp_packet.c **** 
 211:S2LP_Driver/s2lp_packet.c **** 	if (enabled) {
 1119              		.loc 1 211 5
ARM GAS  /tmp/ccsXq0gm.s 			page 24


 1120 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1121 001a 002B     		cmp	r3, #0
 1122 001c 04D0     		beq	.L49
 212:S2LP_Driver/s2lp_packet.c **** 		SETBIT(reg_val, 1);
 1123              		.loc 1 212 3
 1124 001e FB7B     		ldrb	r3, [r7, #15]
 1125 0020 43F00203 		orr	r3, r3, #2
 1126 0024 FB73     		strb	r3, [r7, #15]
 1127 0026 03E0     		b	.L50
 1128              	.L49:
 213:S2LP_Driver/s2lp_packet.c **** 	} else {
 214:S2LP_Driver/s2lp_packet.c **** 		CLEARBIT(reg_val, 1);
 1129              		.loc 1 214 3
 1130 0028 FB7B     		ldrb	r3, [r7, #15]
 1131 002a 23F00203 		bic	r3, r3, #2
 1132 002e FB73     		strb	r3, [r7, #15]
 1133              	.L50:
 215:S2LP_Driver/s2lp_packet.c **** 	}
 216:S2LP_Driver/s2lp_packet.c **** 
 217:S2LP_Driver/s2lp_packet.c **** 	S2LP_WriteRegister(handle, S2LP_REG_PCKT_FLT_OPTIONS, reg_val);
 1134              		.loc 1 217 2
 1135 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1136 0032 1A46     		mov	r2, r3
 1137 0034 4021     		movs	r1, #64
 1138 0036 7868     		ldr	r0, [r7, #4]
 1139 0038 FFF7FEFF 		bl	S2LP_WriteRegister
 218:S2LP_Driver/s2lp_packet.c **** }
 1140              		.loc 1 218 1
 1141 003c 00BF     		nop
 1142 003e 1037     		adds	r7, r7, #16
 1143              		.cfi_def_cfa_offset 8
 1144 0040 BD46     		mov	sp, r7
 1145              		.cfi_def_cfa_register 13
 1146              		@ sp needed
 1147 0042 80BD     		pop	{r7, pc}
 1148              		.cfi_endproc
 1149              	.LFE84:
 1151              		.section	.text.S2LP_PCKT_GetPacketFormat,"ax",%progbits
 1152              		.align	1
 1153              		.global	S2LP_PCKT_GetPacketFormat
 1154              		.syntax unified
 1155              		.thumb
 1156              		.thumb_func
 1158              	S2LP_PCKT_GetPacketFormat:
 1159              	.LFB85:
 219:S2LP_Driver/s2lp_packet.c **** 
 220:S2LP_Driver/s2lp_packet.c **** S2LP_Packet_Format S2LP_PCKT_GetPacketFormat(S2LP_Handle* handle) {
 1160              		.loc 1 220 67
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 16
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164 0000 80B5     		push	{r7, lr}
 1165              		.cfi_def_cfa_offset 8
 1166              		.cfi_offset 7, -8
 1167              		.cfi_offset 14, -4
 1168 0002 84B0     		sub	sp, sp, #16
 1169              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccsXq0gm.s 			page 25


 1170 0004 00AF     		add	r7, sp, #0
 1171              		.cfi_def_cfa_register 7
 1172 0006 7860     		str	r0, [r7, #4]
 221:S2LP_Driver/s2lp_packet.c **** 	uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL3);
 1173              		.loc 1 221 26
 1174 0008 2E21     		movs	r1, #46
 1175 000a 7868     		ldr	r0, [r7, #4]
 1176 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1177 0010 0346     		mov	r3, r0
 1178 0012 FB73     		strb	r3, [r7, #15]
 222:S2LP_Driver/s2lp_packet.c **** 	return (S2LP_Packet_Format) GETBITS(reg_val, 0b11, 6);
 1179              		.loc 1 222 9
 1180 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1181 0016 9B09     		lsrs	r3, r3, #6
 1182 0018 DBB2     		uxtb	r3, r3
 223:S2LP_Driver/s2lp_packet.c **** }
 1183              		.loc 1 223 1
 1184 001a 1846     		mov	r0, r3
 1185 001c 1037     		adds	r7, r7, #16
 1186              		.cfi_def_cfa_offset 8
 1187 001e BD46     		mov	sp, r7
 1188              		.cfi_def_cfa_register 13
 1189              		@ sp needed
 1190 0020 80BD     		pop	{r7, pc}
 1191              		.cfi_endproc
 1192              	.LFE85:
 1194              		.section	.text.S2LP_PCKT_GetPreambleType,"ax",%progbits
 1195              		.align	1
 1196              		.global	S2LP_PCKT_GetPreambleType
 1197              		.syntax unified
 1198              		.thumb
 1199              		.thumb_func
 1201              	S2LP_PCKT_GetPreambleType:
 1202              	.LFB86:
 224:S2LP_Driver/s2lp_packet.c **** 
 225:S2LP_Driver/s2lp_packet.c **** S2LP_Preamble S2LP_PCKT_GetPreambleType(S2LP_Handle* handle) {
 1203              		.loc 1 225 62
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 16
 1206              		@ frame_needed = 1, uses_anonymous_args = 0
 1207 0000 80B5     		push	{r7, lr}
 1208              		.cfi_def_cfa_offset 8
 1209              		.cfi_offset 7, -8
 1210              		.cfi_offset 14, -4
 1211 0002 84B0     		sub	sp, sp, #16
 1212              		.cfi_def_cfa_offset 24
 1213 0004 00AF     		add	r7, sp, #0
 1214              		.cfi_def_cfa_register 7
 1215 0006 7860     		str	r0, [r7, #4]
 226:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL3);
 1216              		.loc 1 226 20
 1217 0008 2E21     		movs	r1, #46
 1218 000a 7868     		ldr	r0, [r7, #4]
 1219 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1220 0010 0346     		mov	r3, r0
 1221 0012 FB73     		strb	r3, [r7, #15]
 227:S2LP_Driver/s2lp_packet.c **** 	return (S2LP_Preamble) GETBITS(reg_val, 0b11, 0);
ARM GAS  /tmp/ccsXq0gm.s 			page 26


 1222              		.loc 1 227 9
 1223 0014 FB7B     		ldrb	r3, [r7, #15]
 1224 0016 03F00303 		and	r3, r3, #3
 1225 001a DBB2     		uxtb	r3, r3
 228:S2LP_Driver/s2lp_packet.c **** }
 1226              		.loc 1 228 1
 1227 001c 1846     		mov	r0, r3
 1228 001e 1037     		adds	r7, r7, #16
 1229              		.cfi_def_cfa_offset 8
 1230 0020 BD46     		mov	sp, r7
 1231              		.cfi_def_cfa_register 13
 1232              		@ sp needed
 1233 0022 80BD     		pop	{r7, pc}
 1234              		.cfi_endproc
 1235              	.LFE86:
 1237              		.section	.text.S2LP_PCKT_GetPreambleLength,"ax",%progbits
 1238              		.align	1
 1239              		.global	S2LP_PCKT_GetPreambleLength
 1240              		.syntax unified
 1241              		.thumb
 1242              		.thumb_func
 1244              	S2LP_PCKT_GetPreambleLength:
 1245              	.LFB87:
 229:S2LP_Driver/s2lp_packet.c **** 
 230:S2LP_Driver/s2lp_packet.c **** size_t S2LP_PCKT_GetPreambleLength(S2LP_Handle* handle) {
 1246              		.loc 1 230 57
 1247              		.cfi_startproc
 1248              		@ args = 0, pretend = 0, frame = 16
 1249              		@ frame_needed = 1, uses_anonymous_args = 0
 1250 0000 80B5     		push	{r7, lr}
 1251              		.cfi_def_cfa_offset 8
 1252              		.cfi_offset 7, -8
 1253              		.cfi_offset 14, -4
 1254 0002 84B0     		sub	sp, sp, #16
 1255              		.cfi_def_cfa_offset 24
 1256 0004 00AF     		add	r7, sp, #0
 1257              		.cfi_def_cfa_register 7
 1258 0006 7860     		str	r0, [r7, #4]
 231:S2LP_Driver/s2lp_packet.c **** 	uint8_t regs_val[2] = { 0 };
 1259              		.loc 1 231 10
 1260 0008 0023     		movs	r3, #0
 1261 000a 3B81     		strh	r3, [r7, #8]	@ movhi
 232:S2LP_Driver/s2lp_packet.c **** 	S2LP_BatchReadRegisters(handle, S2LP_REG_PCKTCTRL6, regs_val, 2);
 1262              		.loc 1 232 2
 1263 000c 07F10802 		add	r2, r7, #8
 1264 0010 0223     		movs	r3, #2
 1265 0012 2B21     		movs	r1, #43
 1266 0014 7868     		ldr	r0, [r7, #4]
 1267 0016 FFF7FEFF 		bl	S2LP_BatchReadRegisters
 233:S2LP_Driver/s2lp_packet.c **** 
 234:S2LP_Driver/s2lp_packet.c **** 	size_t length = 0;
 1268              		.loc 1 234 9
 1269 001a 0023     		movs	r3, #0
 1270 001c FB60     		str	r3, [r7, #12]
 235:S2LP_Driver/s2lp_packet.c **** 	SETBITS(length, GETBITS(regs_val[0], 0b11, 0), 0b11, 8);
 1271              		.loc 1 235 2
 1272 001e 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
ARM GAS  /tmp/ccsXq0gm.s 			page 27


 1273 0020 1B02     		lsls	r3, r3, #8
 1274 0022 03F44073 		and	r3, r3, #768
 1275 0026 FA68     		ldr	r2, [r7, #12]
 1276 0028 1343     		orrs	r3, r3, r2
 1277 002a FB60     		str	r3, [r7, #12]
 236:S2LP_Driver/s2lp_packet.c **** 	SETBITS(length, regs_val[1], 0xFF, 0);
 1278              		.loc 1 236 2
 1279 002c 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 1280 002e 1A46     		mov	r2, r3
 1281 0030 FB68     		ldr	r3, [r7, #12]
 1282 0032 1343     		orrs	r3, r3, r2
 1283 0034 FB60     		str	r3, [r7, #12]
 237:S2LP_Driver/s2lp_packet.c **** 
 238:S2LP_Driver/s2lp_packet.c **** 	return length;
 1284              		.loc 1 238 9
 1285 0036 FB68     		ldr	r3, [r7, #12]
 239:S2LP_Driver/s2lp_packet.c **** }
 1286              		.loc 1 239 1
 1287 0038 1846     		mov	r0, r3
 1288 003a 1037     		adds	r7, r7, #16
 1289              		.cfi_def_cfa_offset 8
 1290 003c BD46     		mov	sp, r7
 1291              		.cfi_def_cfa_register 13
 1292              		@ sp needed
 1293 003e 80BD     		pop	{r7, pc}
 1294              		.cfi_endproc
 1295              	.LFE87:
 1297              		.section	.text.S2LP_PCKT_GetSyncLength,"ax",%progbits
 1298              		.align	1
 1299              		.global	S2LP_PCKT_GetSyncLength
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1304              	S2LP_PCKT_GetSyncLength:
 1305              	.LFB88:
 240:S2LP_Driver/s2lp_packet.c **** 
 241:S2LP_Driver/s2lp_packet.c **** size_t S2LP_PCKT_GetSyncLength(S2LP_Handle* handle) {
 1306              		.loc 1 241 53
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 16
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310 0000 80B5     		push	{r7, lr}
 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 84B0     		sub	sp, sp, #16
 1315              		.cfi_def_cfa_offset 24
 1316 0004 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
 1318 0006 7860     		str	r0, [r7, #4]
 242:S2LP_Driver/s2lp_packet.c **** 	uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL6);
 1319              		.loc 1 242 26
 1320 0008 2B21     		movs	r1, #43
 1321 000a 7868     		ldr	r0, [r7, #4]
 1322 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1323 0010 0346     		mov	r3, r0
 1324 0012 FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccsXq0gm.s 			page 28


 243:S2LP_Driver/s2lp_packet.c **** 	return (size_t) GETBITS(reg_val, 0b111111, 2);
 1325              		.loc 1 243 18
 1326 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1327 0016 9B08     		lsrs	r3, r3, #2
 1328 0018 DBB2     		uxtb	r3, r3
 244:S2LP_Driver/s2lp_packet.c **** }
 1329              		.loc 1 244 1
 1330 001a 1846     		mov	r0, r3
 1331 001c 1037     		adds	r7, r7, #16
 1332              		.cfi_def_cfa_offset 8
 1333 001e BD46     		mov	sp, r7
 1334              		.cfi_def_cfa_register 13
 1335              		@ sp needed
 1336 0020 80BD     		pop	{r7, pc}
 1337              		.cfi_endproc
 1338              	.LFE88:
 1340              		.section	.text.S2LP_PCKT_GetTxPacketLength,"ax",%progbits
 1341              		.align	1
 1342              		.global	S2LP_PCKT_GetTxPacketLength
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1347              	S2LP_PCKT_GetTxPacketLength:
 1348              	.LFB89:
 245:S2LP_Driver/s2lp_packet.c **** 
 246:S2LP_Driver/s2lp_packet.c **** size_t S2LP_PCKT_GetTxPacketLength(S2LP_Handle* handle) {
 1349              		.loc 1 246 57
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 16
 1352              		@ frame_needed = 1, uses_anonymous_args = 0
 1353 0000 80B5     		push	{r7, lr}
 1354              		.cfi_def_cfa_offset 8
 1355              		.cfi_offset 7, -8
 1356              		.cfi_offset 14, -4
 1357 0002 84B0     		sub	sp, sp, #16
 1358              		.cfi_def_cfa_offset 24
 1359 0004 00AF     		add	r7, sp, #0
 1360              		.cfi_def_cfa_register 7
 1361 0006 7860     		str	r0, [r7, #4]
 247:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_vals[2] = { 0 };
 1362              		.loc 1 247 10
 1363 0008 0023     		movs	r3, #0
 1364 000a BB81     		strh	r3, [r7, #12]	@ movhi
 248:S2LP_Driver/s2lp_packet.c **** 	S2LP_BatchReadRegisters(handle, S2LP_REG_PCKTLEN1, reg_vals, 2);
 1365              		.loc 1 248 2
 1366 000c 07F10C02 		add	r2, r7, #12
 1367 0010 0223     		movs	r3, #2
 1368 0012 3121     		movs	r1, #49
 1369 0014 7868     		ldr	r0, [r7, #4]
 1370 0016 FFF7FEFF 		bl	S2LP_BatchReadRegisters
 249:S2LP_Driver/s2lp_packet.c **** 	return (size_t) reg_vals[1] + (((size_t) reg_vals[0]) << 8);
 1371              		.loc 1 249 26
 1372 001a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1373              		.loc 1 249 9
 1374 001c 1A46     		mov	r2, r3
 1375              		.loc 1 249 51
 1376 001e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
ARM GAS  /tmp/ccsXq0gm.s 			page 29


 1377              		.loc 1 249 56
 1378 0020 1B02     		lsls	r3, r3, #8
 1379              		.loc 1 249 30
 1380 0022 1344     		add	r3, r3, r2
 250:S2LP_Driver/s2lp_packet.c **** }
 1381              		.loc 1 250 1
 1382 0024 1846     		mov	r0, r3
 1383 0026 1037     		adds	r7, r7, #16
 1384              		.cfi_def_cfa_offset 8
 1385 0028 BD46     		mov	sp, r7
 1386              		.cfi_def_cfa_register 13
 1387              		@ sp needed
 1388 002a 80BD     		pop	{r7, pc}
 1389              		.cfi_endproc
 1390              	.LFE89:
 1392              		.section	.text.S2LP_PCKT_GetRxPacketLength,"ax",%progbits
 1393              		.align	1
 1394              		.global	S2LP_PCKT_GetRxPacketLength
 1395              		.syntax unified
 1396              		.thumb
 1397              		.thumb_func
 1399              	S2LP_PCKT_GetRxPacketLength:
 1400              	.LFB90:
 251:S2LP_Driver/s2lp_packet.c **** 
 252:S2LP_Driver/s2lp_packet.c **** size_t S2LP_PCKT_GetRxPacketLength(S2LP_Handle* handle) {
 1401              		.loc 1 252 57
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 16
 1404              		@ frame_needed = 1, uses_anonymous_args = 0
 1405 0000 80B5     		push	{r7, lr}
 1406              		.cfi_def_cfa_offset 8
 1407              		.cfi_offset 7, -8
 1408              		.cfi_offset 14, -4
 1409 0002 84B0     		sub	sp, sp, #16
 1410              		.cfi_def_cfa_offset 24
 1411 0004 00AF     		add	r7, sp, #0
 1412              		.cfi_def_cfa_register 7
 1413 0006 7860     		str	r0, [r7, #4]
 253:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_vals[2] = { 0 };
 1414              		.loc 1 253 10
 1415 0008 0023     		movs	r3, #0
 1416 000a BB81     		strh	r3, [r7, #12]	@ movhi
 254:S2LP_Driver/s2lp_packet.c **** 	S2LP_BatchReadRegisters(handle, S2LP_REG_RX_PCKT_LEN1, reg_vals, 2);
 1417              		.loc 1 254 2
 1418 000c 07F10C02 		add	r2, r7, #12
 1419 0010 0223     		movs	r3, #2
 1420 0012 A421     		movs	r1, #164
 1421 0014 7868     		ldr	r0, [r7, #4]
 1422 0016 FFF7FEFF 		bl	S2LP_BatchReadRegisters
 255:S2LP_Driver/s2lp_packet.c **** 
 256:S2LP_Driver/s2lp_packet.c **** 	return (size_t) reg_vals[1] + (((size_t) reg_vals[0]) << 8);
 1423              		.loc 1 256 26
 1424 001a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1425              		.loc 1 256 9
 1426 001c 1A46     		mov	r2, r3
 1427              		.loc 1 256 51
 1428 001e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
ARM GAS  /tmp/ccsXq0gm.s 			page 30


 1429              		.loc 1 256 56
 1430 0020 1B02     		lsls	r3, r3, #8
 1431              		.loc 1 256 30
 1432 0022 1344     		add	r3, r3, r2
 257:S2LP_Driver/s2lp_packet.c **** }
 1433              		.loc 1 257 1
 1434 0024 1846     		mov	r0, r3
 1435 0026 1037     		adds	r7, r7, #16
 1436              		.cfi_def_cfa_offset 8
 1437 0028 BD46     		mov	sp, r7
 1438              		.cfi_def_cfa_register 13
 1439              		@ sp needed
 1440 002a 80BD     		pop	{r7, pc}
 1441              		.cfi_endproc
 1442              	.LFE90:
 1444              		.section	.text.S2LP_PCKT_GetVariablePacketLengthState,"ax",%progbits
 1445              		.align	1
 1446              		.global	S2LP_PCKT_GetVariablePacketLengthState
 1447              		.syntax unified
 1448              		.thumb
 1449              		.thumb_func
 1451              	S2LP_PCKT_GetVariablePacketLengthState:
 1452              	.LFB91:
 258:S2LP_Driver/s2lp_packet.c **** 
 259:S2LP_Driver/s2lp_packet.c **** bool S2LP_PCKT_GetVariablePacketLengthState(S2LP_Handle* handle) {
 1453              		.loc 1 259 66
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 16
 1456              		@ frame_needed = 1, uses_anonymous_args = 0
 1457 0000 80B5     		push	{r7, lr}
 1458              		.cfi_def_cfa_offset 8
 1459              		.cfi_offset 7, -8
 1460              		.cfi_offset 14, -4
 1461 0002 84B0     		sub	sp, sp, #16
 1462              		.cfi_def_cfa_offset 24
 1463 0004 00AF     		add	r7, sp, #0
 1464              		.cfi_def_cfa_register 7
 1465 0006 7860     		str	r0, [r7, #4]
 260:S2LP_Driver/s2lp_packet.c **** 	uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL2);
 1466              		.loc 1 260 26
 1467 0008 2F21     		movs	r1, #47
 1468 000a 7868     		ldr	r0, [r7, #4]
 1469 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1470 0010 0346     		mov	r3, r0
 1471 0012 FB73     		strb	r3, [r7, #15]
 261:S2LP_Driver/s2lp_packet.c **** 	return (bool) GETBIT(reg_val, 0);
 1472              		.loc 1 261 16
 1473 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1474 0016 03F00103 		and	r3, r3, #1
 1475              		.loc 1 261 9
 1476 001a 002B     		cmp	r3, #0
 1477 001c 14BF     		ite	ne
 1478 001e 0123     		movne	r3, #1
 1479 0020 0023     		moveq	r3, #0
 1480 0022 DBB2     		uxtb	r3, r3
 262:S2LP_Driver/s2lp_packet.c **** }
 1481              		.loc 1 262 1
ARM GAS  /tmp/ccsXq0gm.s 			page 31


 1482 0024 1846     		mov	r0, r3
 1483 0026 1037     		adds	r7, r7, #16
 1484              		.cfi_def_cfa_offset 8
 1485 0028 BD46     		mov	sp, r7
 1486              		.cfi_def_cfa_register 13
 1487              		@ sp needed
 1488 002a 80BD     		pop	{r7, pc}
 1489              		.cfi_endproc
 1490              	.LFE91:
 1492              		.section	.text.S2LP_PCKT_GetLengthFieldSize,"ax",%progbits
 1493              		.align	1
 1494              		.global	S2LP_PCKT_GetLengthFieldSize
 1495              		.syntax unified
 1496              		.thumb
 1497              		.thumb_func
 1499              	S2LP_PCKT_GetLengthFieldSize:
 1500              	.LFB92:
 263:S2LP_Driver/s2lp_packet.c **** 
 264:S2LP_Driver/s2lp_packet.c **** S2LP_Length_Field_Size S2LP_PCKT_GetLengthFieldSize(S2LP_Handle* handle) {
 1501              		.loc 1 264 74
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 16
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505 0000 80B5     		push	{r7, lr}
 1506              		.cfi_def_cfa_offset 8
 1507              		.cfi_offset 7, -8
 1508              		.cfi_offset 14, -4
 1509 0002 84B0     		sub	sp, sp, #16
 1510              		.cfi_def_cfa_offset 24
 1511 0004 00AF     		add	r7, sp, #0
 1512              		.cfi_def_cfa_register 7
 1513 0006 7860     		str	r0, [r7, #4]
 265:S2LP_Driver/s2lp_packet.c **** 	uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL4);
 1514              		.loc 1 265 26
 1515 0008 2D21     		movs	r1, #45
 1516 000a 7868     		ldr	r0, [r7, #4]
 1517 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1518 0010 0346     		mov	r3, r0
 1519 0012 FB73     		strb	r3, [r7, #15]
 266:S2LP_Driver/s2lp_packet.c **** 	bool const len_state = GETBIT(reg_val, 7);
 1520              		.loc 1 266 25
 1521 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1522 0016 DB09     		lsrs	r3, r3, #7
 1523 0018 DBB2     		uxtb	r3, r3
 1524              		.loc 1 266 13
 1525 001a 002B     		cmp	r3, #0
 1526 001c 14BF     		ite	ne
 1527 001e 0123     		movne	r3, #1
 1528 0020 0023     		moveq	r3, #0
 1529 0022 BB73     		strb	r3, [r7, #14]
 267:S2LP_Driver/s2lp_packet.c **** 
 268:S2LP_Driver/s2lp_packet.c **** 	if (len_state) {
 1530              		.loc 1 268 5
 1531 0024 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1532 0026 002B     		cmp	r3, #0
 1533 0028 01D0     		beq	.L66
 269:S2LP_Driver/s2lp_packet.c **** 		return S2LP_PAYLOAD_LENGTH_2B;
ARM GAS  /tmp/ccsXq0gm.s 			page 32


 1534              		.loc 1 269 10
 1535 002a 0223     		movs	r3, #2
 1536 002c 00E0     		b	.L67
 1537              	.L66:
 270:S2LP_Driver/s2lp_packet.c **** 	}
 271:S2LP_Driver/s2lp_packet.c **** 	return S2LP_PAYLOAD_LENGTH_1B;
 1538              		.loc 1 271 9
 1539 002e 0123     		movs	r3, #1
 1540              	.L67:
 272:S2LP_Driver/s2lp_packet.c **** }
 1541              		.loc 1 272 1
 1542 0030 1846     		mov	r0, r3
 1543 0032 1037     		adds	r7, r7, #16
 1544              		.cfi_def_cfa_offset 8
 1545 0034 BD46     		mov	sp, r7
 1546              		.cfi_def_cfa_register 13
 1547              		@ sp needed
 1548 0036 80BD     		pop	{r7, pc}
 1549              		.cfi_endproc
 1550              	.LFE92:
 1552              		.section	.text.S2LP_PCKT_GetDestinationAddressState,"ax",%progbits
 1553              		.align	1
 1554              		.global	S2LP_PCKT_GetDestinationAddressState
 1555              		.syntax unified
 1556              		.thumb
 1557              		.thumb_func
 1559              	S2LP_PCKT_GetDestinationAddressState:
 1560              	.LFB93:
 273:S2LP_Driver/s2lp_packet.c **** 
 274:S2LP_Driver/s2lp_packet.c **** bool S2LP_PCKT_GetDestinationAddressState(S2LP_Handle* handle) {
 1561              		.loc 1 274 64
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 16
 1564              		@ frame_needed = 1, uses_anonymous_args = 0
 1565 0000 80B5     		push	{r7, lr}
 1566              		.cfi_def_cfa_offset 8
 1567              		.cfi_offset 7, -8
 1568              		.cfi_offset 14, -4
 1569 0002 84B0     		sub	sp, sp, #16
 1570              		.cfi_def_cfa_offset 24
 1571 0004 00AF     		add	r7, sp, #0
 1572              		.cfi_def_cfa_register 7
 1573 0006 7860     		str	r0, [r7, #4]
 275:S2LP_Driver/s2lp_packet.c **** 	uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL4);
 1574              		.loc 1 275 26
 1575 0008 2D21     		movs	r1, #45
 1576 000a 7868     		ldr	r0, [r7, #4]
 1577 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1578 0010 0346     		mov	r3, r0
 1579 0012 FB73     		strb	r3, [r7, #15]
 276:S2LP_Driver/s2lp_packet.c **** 	return (bool) GETBIT(reg_val, 3);
 1580              		.loc 1 276 9
 1581 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1582 0016 03F00803 		and	r3, r3, #8
 1583 001a 002B     		cmp	r3, #0
 1584 001c 14BF     		ite	ne
 1585 001e 0123     		movne	r3, #1
ARM GAS  /tmp/ccsXq0gm.s 			page 33


 1586 0020 0023     		moveq	r3, #0
 1587 0022 DBB2     		uxtb	r3, r3
 277:S2LP_Driver/s2lp_packet.c **** }
 1588              		.loc 1 277 1
 1589 0024 1846     		mov	r0, r3
 1590 0026 1037     		adds	r7, r7, #16
 1591              		.cfi_def_cfa_offset 8
 1592 0028 BD46     		mov	sp, r7
 1593              		.cfi_def_cfa_register 13
 1594              		@ sp needed
 1595 002a 80BD     		pop	{r7, pc}
 1596              		.cfi_endproc
 1597              	.LFE93:
 1599              		.section	.text.S2LP_PCKT_GetDestinationAddress,"ax",%progbits
 1600              		.align	1
 1601              		.global	S2LP_PCKT_GetDestinationAddress
 1602              		.syntax unified
 1603              		.thumb
 1604              		.thumb_func
 1606              	S2LP_PCKT_GetDestinationAddress:
 1607              	.LFB94:
 278:S2LP_Driver/s2lp_packet.c **** 
 279:S2LP_Driver/s2lp_packet.c **** uint8_t S2LP_PCKT_GetDestinationAddress(S2LP_Handle* handle) {
 1608              		.loc 1 279 62
 1609              		.cfi_startproc
 1610              		@ args = 0, pretend = 0, frame = 8
 1611              		@ frame_needed = 1, uses_anonymous_args = 0
 1612 0000 80B5     		push	{r7, lr}
 1613              		.cfi_def_cfa_offset 8
 1614              		.cfi_offset 7, -8
 1615              		.cfi_offset 14, -4
 1616 0002 82B0     		sub	sp, sp, #8
 1617              		.cfi_def_cfa_offset 16
 1618 0004 00AF     		add	r7, sp, #0
 1619              		.cfi_def_cfa_register 7
 1620 0006 7860     		str	r0, [r7, #4]
 280:S2LP_Driver/s2lp_packet.c **** 	return S2LP_ReadRegister(handle, S2LP_REG_PCKT_FLT_GOALS3);
 1621              		.loc 1 280 9
 1622 0008 4221     		movs	r1, #66
 1623 000a 7868     		ldr	r0, [r7, #4]
 1624 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1625 0010 0346     		mov	r3, r0
 281:S2LP_Driver/s2lp_packet.c **** }
 1626              		.loc 1 281 1
 1627 0012 1846     		mov	r0, r3
 1628 0014 0837     		adds	r7, r7, #8
 1629              		.cfi_def_cfa_offset 8
 1630 0016 BD46     		mov	sp, r7
 1631              		.cfi_def_cfa_register 13
 1632              		@ sp needed
 1633 0018 80BD     		pop	{r7, pc}
 1634              		.cfi_endproc
 1635              	.LFE94:
 1637              		.section	.text.S2LP_PCKT_GetSourceAddress,"ax",%progbits
 1638              		.align	1
 1639              		.global	S2LP_PCKT_GetSourceAddress
 1640              		.syntax unified
ARM GAS  /tmp/ccsXq0gm.s 			page 34


 1641              		.thumb
 1642              		.thumb_func
 1644              	S2LP_PCKT_GetSourceAddress:
 1645              	.LFB95:
 282:S2LP_Driver/s2lp_packet.c **** 
 283:S2LP_Driver/s2lp_packet.c **** uint8_t S2LP_PCKT_GetSourceAddress(S2LP_Handle* handle) {
 1646              		.loc 1 283 57
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 8
 1649              		@ frame_needed = 1, uses_anonymous_args = 0
 1650 0000 80B5     		push	{r7, lr}
 1651              		.cfi_def_cfa_offset 8
 1652              		.cfi_offset 7, -8
 1653              		.cfi_offset 14, -4
 1654 0002 82B0     		sub	sp, sp, #8
 1655              		.cfi_def_cfa_offset 16
 1656 0004 00AF     		add	r7, sp, #0
 1657              		.cfi_def_cfa_register 7
 1658 0006 7860     		str	r0, [r7, #4]
 284:S2LP_Driver/s2lp_packet.c **** 	return S2LP_ReadRegister(handle, S2LP_REG_PCKT_FLT_GOALS0);
 1659              		.loc 1 284 9
 1660 0008 4521     		movs	r1, #69
 1661 000a 7868     		ldr	r0, [r7, #4]
 1662 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1663 0010 0346     		mov	r3, r0
 285:S2LP_Driver/s2lp_packet.c **** }
 1664              		.loc 1 285 1
 1665 0012 1846     		mov	r0, r3
 1666 0014 0837     		adds	r7, r7, #8
 1667              		.cfi_def_cfa_offset 8
 1668 0016 BD46     		mov	sp, r7
 1669              		.cfi_def_cfa_register 13
 1670              		@ sp needed
 1671 0018 80BD     		pop	{r7, pc}
 1672              		.cfi_endproc
 1673              	.LFE95:
 1675              		.section	.text.S2LP_PCKT_GetPostambleLength,"ax",%progbits
 1676              		.align	1
 1677              		.global	S2LP_PCKT_GetPostambleLength
 1678              		.syntax unified
 1679              		.thumb
 1680              		.thumb_func
 1682              	S2LP_PCKT_GetPostambleLength:
 1683              	.LFB96:
 286:S2LP_Driver/s2lp_packet.c **** 
 287:S2LP_Driver/s2lp_packet.c **** size_t S2LP_PCKT_GetPostambleLength(S2LP_Handle* handle) {
 1684              		.loc 1 287 58
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 8
 1687              		@ frame_needed = 1, uses_anonymous_args = 0
 1688 0000 80B5     		push	{r7, lr}
 1689              		.cfi_def_cfa_offset 8
 1690              		.cfi_offset 7, -8
 1691              		.cfi_offset 14, -4
 1692 0002 82B0     		sub	sp, sp, #8
 1693              		.cfi_def_cfa_offset 16
 1694 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccsXq0gm.s 			page 35


 1695              		.cfi_def_cfa_register 7
 1696 0006 7860     		str	r0, [r7, #4]
 288:S2LP_Driver/s2lp_packet.c **** 	return (size_t) S2LP_ReadRegister(handle, S2LP_REG_PCKT_PSTMBL);
 1697              		.loc 1 288 18
 1698 0008 3821     		movs	r1, #56
 1699 000a 7868     		ldr	r0, [r7, #4]
 1700 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1701 0010 0346     		mov	r3, r0
 289:S2LP_Driver/s2lp_packet.c **** }
 1702              		.loc 1 289 1
 1703 0012 1846     		mov	r0, r3
 1704 0014 0837     		adds	r7, r7, #8
 1705              		.cfi_def_cfa_offset 8
 1706 0016 BD46     		mov	sp, r7
 1707              		.cfi_def_cfa_register 13
 1708              		@ sp needed
 1709 0018 80BD     		pop	{r7, pc}
 1710              		.cfi_endproc
 1711              	.LFE96:
 1713              		.section	.text.S2LP_PCKT_GetCRCMode,"ax",%progbits
 1714              		.align	1
 1715              		.global	S2LP_PCKT_GetCRCMode
 1716              		.syntax unified
 1717              		.thumb
 1718              		.thumb_func
 1720              	S2LP_PCKT_GetCRCMode:
 1721              	.LFB97:
 290:S2LP_Driver/s2lp_packet.c **** 
 291:S2LP_Driver/s2lp_packet.c **** S2LP_CRC_Mode S2LP_PCKT_GetCRCMode(S2LP_Handle* handle) {
 1722              		.loc 1 291 57
 1723              		.cfi_startproc
 1724              		@ args = 0, pretend = 0, frame = 16
 1725              		@ frame_needed = 1, uses_anonymous_args = 0
 1726 0000 80B5     		push	{r7, lr}
 1727              		.cfi_def_cfa_offset 8
 1728              		.cfi_offset 7, -8
 1729              		.cfi_offset 14, -4
 1730 0002 84B0     		sub	sp, sp, #16
 1731              		.cfi_def_cfa_offset 24
 1732 0004 00AF     		add	r7, sp, #0
 1733              		.cfi_def_cfa_register 7
 1734 0006 7860     		str	r0, [r7, #4]
 292:S2LP_Driver/s2lp_packet.c **** 	uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL1);
 1735              		.loc 1 292 26
 1736 0008 3021     		movs	r1, #48
 1737 000a 7868     		ldr	r0, [r7, #4]
 1738 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1739 0010 0346     		mov	r3, r0
 1740 0012 FB73     		strb	r3, [r7, #15]
 293:S2LP_Driver/s2lp_packet.c **** 	return (S2LP_CRC_Mode) GETBITS(reg_val, 0b111, 5);
 1741              		.loc 1 293 9
 1742 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1743 0016 5B09     		lsrs	r3, r3, #5
 1744 0018 DBB2     		uxtb	r3, r3
 294:S2LP_Driver/s2lp_packet.c **** }
 1745              		.loc 1 294 1
 1746 001a 1846     		mov	r0, r3
ARM GAS  /tmp/ccsXq0gm.s 			page 36


 1747 001c 1037     		adds	r7, r7, #16
 1748              		.cfi_def_cfa_offset 8
 1749 001e BD46     		mov	sp, r7
 1750              		.cfi_def_cfa_register 13
 1751              		@ sp needed
 1752 0020 80BD     		pop	{r7, pc}
 1753              		.cfi_endproc
 1754              	.LFE97:
 1756              		.section	.text.S2LP_PCKT_GetDataCoding,"ax",%progbits
 1757              		.align	1
 1758              		.global	S2LP_PCKT_GetDataCoding
 1759              		.syntax unified
 1760              		.thumb
 1761              		.thumb_func
 1763              	S2LP_PCKT_GetDataCoding:
 1764              	.LFB98:
 295:S2LP_Driver/s2lp_packet.c **** 
 296:S2LP_Driver/s2lp_packet.c **** S2LP_Data_Coding S2LP_PCKT_GetDataCoding(S2LP_Handle* handle) {
 1765              		.loc 1 296 63
 1766              		.cfi_startproc
 1767              		@ args = 0, pretend = 0, frame = 16
 1768              		@ frame_needed = 1, uses_anonymous_args = 0
 1769 0000 80B5     		push	{r7, lr}
 1770              		.cfi_def_cfa_offset 8
 1771              		.cfi_offset 7, -8
 1772              		.cfi_offset 14, -4
 1773 0002 84B0     		sub	sp, sp, #16
 1774              		.cfi_def_cfa_offset 24
 1775 0004 00AF     		add	r7, sp, #0
 1776              		.cfi_def_cfa_register 7
 1777 0006 7860     		str	r0, [r7, #4]
 297:S2LP_Driver/s2lp_packet.c **** 	uint8_t reg_vals[2] = { 0 };
 1778              		.loc 1 297 10
 1779 0008 0023     		movs	r3, #0
 1780 000a BB81     		strh	r3, [r7, #12]	@ movhi
 298:S2LP_Driver/s2lp_packet.c **** 	S2LP_BatchReadRegisters(handle, S2LP_REG_PCKTCTRL2, reg_vals, 2);
 1781              		.loc 1 298 2
 1782 000c 07F10C02 		add	r2, r7, #12
 1783 0010 0223     		movs	r3, #2
 1784 0012 2F21     		movs	r1, #47
 1785 0014 7868     		ldr	r0, [r7, #4]
 1786 0016 FFF7FEFF 		bl	S2LP_BatchReadRegisters
 299:S2LP_Driver/s2lp_packet.c **** 
 300:S2LP_Driver/s2lp_packet.c **** 	if (GETBIT(reg_vals[0], 2)) {
 1787              		.loc 1 300 6
 1788 001a 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1789 001c 03F00403 		and	r3, r3, #4
 1790              		.loc 1 300 5
 1791 0020 002B     		cmp	r3, #0
 1792 0022 01D0     		beq	.L79
 301:S2LP_Driver/s2lp_packet.c **** 		return S2LP_CODING_3_OUT_OF_6;
 1793              		.loc 1 301 10
 1794 0024 0323     		movs	r3, #3
 1795 0026 0EE0     		b	.L83
 1796              	.L79:
 302:S2LP_Driver/s2lp_packet.c **** 	} else if (GETBIT(reg_vals[0], 1)) {
 1797              		.loc 1 302 13
ARM GAS  /tmp/ccsXq0gm.s 			page 37


 1798 0028 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1799 002a 03F00203 		and	r3, r3, #2
 1800              		.loc 1 302 12
 1801 002e 002B     		cmp	r3, #0
 1802 0030 01D0     		beq	.L81
 303:S2LP_Driver/s2lp_packet.c **** 		return S2LP_CODING_MANCHESTER;
 1803              		.loc 1 303 10
 1804 0032 0223     		movs	r3, #2
 1805 0034 07E0     		b	.L83
 1806              	.L81:
 304:S2LP_Driver/s2lp_packet.c **** 	} else if (GETBIT(reg_vals[1], 0)) {
 1807              		.loc 1 304 13
 1808 0036 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1809 0038 03F00103 		and	r3, r3, #1
 1810              		.loc 1 304 12
 1811 003c 002B     		cmp	r3, #0
 1812 003e 01D0     		beq	.L82
 305:S2LP_Driver/s2lp_packet.c **** 		return S2LP_CODING_FEC;
 1813              		.loc 1 305 10
 1814 0040 0123     		movs	r3, #1
 1815 0042 00E0     		b	.L83
 1816              	.L82:
 306:S2LP_Driver/s2lp_packet.c **** 	}
 307:S2LP_Driver/s2lp_packet.c **** 
 308:S2LP_Driver/s2lp_packet.c **** 	return S2LP_CODING_NONE;
 1817              		.loc 1 308 9
 1818 0044 0023     		movs	r3, #0
 1819              	.L83:
 309:S2LP_Driver/s2lp_packet.c **** }
 1820              		.loc 1 309 1 discriminator 1
 1821 0046 1846     		mov	r0, r3
 1822 0048 1037     		adds	r7, r7, #16
 1823              		.cfi_def_cfa_offset 8
 1824 004a BD46     		mov	sp, r7
 1825              		.cfi_def_cfa_register 13
 1826              		@ sp needed
 1827 004c 80BD     		pop	{r7, pc}
 1828              		.cfi_endproc
 1829              	.LFE98:
 1831              		.section	.text.S2LP_PCKT_GetDataWhiteningState,"ax",%progbits
 1832              		.align	1
 1833              		.global	S2LP_PCKT_GetDataWhiteningState
 1834              		.syntax unified
 1835              		.thumb
 1836              		.thumb_func
 1838              	S2LP_PCKT_GetDataWhiteningState:
 1839              	.LFB99:
 310:S2LP_Driver/s2lp_packet.c **** 
 311:S2LP_Driver/s2lp_packet.c **** bool S2LP_PCKT_GetDataWhiteningState(S2LP_Handle* handle) {
 1840              		.loc 1 311 59
 1841              		.cfi_startproc
 1842              		@ args = 0, pretend = 0, frame = 16
 1843              		@ frame_needed = 1, uses_anonymous_args = 0
 1844 0000 80B5     		push	{r7, lr}
 1845              		.cfi_def_cfa_offset 8
 1846              		.cfi_offset 7, -8
 1847              		.cfi_offset 14, -4
ARM GAS  /tmp/ccsXq0gm.s 			page 38


 1848 0002 84B0     		sub	sp, sp, #16
 1849              		.cfi_def_cfa_offset 24
 1850 0004 00AF     		add	r7, sp, #0
 1851              		.cfi_def_cfa_register 7
 1852 0006 7860     		str	r0, [r7, #4]
 312:S2LP_Driver/s2lp_packet.c **** 	uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKTCTRL1);
 1853              		.loc 1 312 26
 1854 0008 3021     		movs	r1, #48
 1855 000a 7868     		ldr	r0, [r7, #4]
 1856 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1857 0010 0346     		mov	r3, r0
 1858 0012 FB73     		strb	r3, [r7, #15]
 313:S2LP_Driver/s2lp_packet.c **** 	return (bool) GETBIT(reg_val, 4);
 1859              		.loc 1 313 9
 1860 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1861 0016 03F01003 		and	r3, r3, #16
 1862 001a 002B     		cmp	r3, #0
 1863 001c 14BF     		ite	ne
 1864 001e 0123     		movne	r3, #1
 1865 0020 0023     		moveq	r3, #0
 1866 0022 DBB2     		uxtb	r3, r3
 314:S2LP_Driver/s2lp_packet.c **** }
 1867              		.loc 1 314 1
 1868 0024 1846     		mov	r0, r3
 1869 0026 1037     		adds	r7, r7, #16
 1870              		.cfi_def_cfa_offset 8
 1871 0028 BD46     		mov	sp, r7
 1872              		.cfi_def_cfa_register 13
 1873              		@ sp needed
 1874 002a 80BD     		pop	{r7, pc}
 1875              		.cfi_endproc
 1876              	.LFE99:
 1878              		.section	.text.S2LP_PCKT_GetCRCFilteringState,"ax",%progbits
 1879              		.align	1
 1880              		.global	S2LP_PCKT_GetCRCFilteringState
 1881              		.syntax unified
 1882              		.thumb
 1883              		.thumb_func
 1885              	S2LP_PCKT_GetCRCFilteringState:
 1886              	.LFB100:
 315:S2LP_Driver/s2lp_packet.c **** 
 316:S2LP_Driver/s2lp_packet.c **** bool S2LP_PCKT_GetCRCFilteringState(S2LP_Handle* handle) {
 1887              		.loc 1 316 58
 1888              		.cfi_startproc
 1889              		@ args = 0, pretend = 0, frame = 16
 1890              		@ frame_needed = 1, uses_anonymous_args = 0
 1891 0000 80B5     		push	{r7, lr}
 1892              		.cfi_def_cfa_offset 8
 1893              		.cfi_offset 7, -8
 1894              		.cfi_offset 14, -4
 1895 0002 84B0     		sub	sp, sp, #16
 1896              		.cfi_def_cfa_offset 24
 1897 0004 00AF     		add	r7, sp, #0
 1898              		.cfi_def_cfa_register 7
 1899 0006 7860     		str	r0, [r7, #4]
 317:S2LP_Driver/s2lp_packet.c **** 	uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PCKT_FLT_OPTIONS);
 1900              		.loc 1 317 26
ARM GAS  /tmp/ccsXq0gm.s 			page 39


 1901 0008 4021     		movs	r1, #64
 1902 000a 7868     		ldr	r0, [r7, #4]
 1903 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1904 0010 0346     		mov	r3, r0
 1905 0012 FB73     		strb	r3, [r7, #15]
 318:S2LP_Driver/s2lp_packet.c **** 	return GETBIT(reg_val, 0);
 1906              		.loc 1 318 9
 1907 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1908 0016 03F00103 		and	r3, r3, #1
 1909 001a 002B     		cmp	r3, #0
 1910 001c 14BF     		ite	ne
 1911 001e 0123     		movne	r3, #1
 1912 0020 0023     		moveq	r3, #0
 1913 0022 DBB2     		uxtb	r3, r3
 319:S2LP_Driver/s2lp_packet.c **** }
 1914              		.loc 1 319 1
 1915 0024 1846     		mov	r0, r3
 1916 0026 1037     		adds	r7, r7, #16
 1917              		.cfi_def_cfa_offset 8
 1918 0028 BD46     		mov	sp, r7
 1919              		.cfi_def_cfa_register 13
 1920              		@ sp needed
 1921 002a 80BD     		pop	{r7, pc}
 1922              		.cfi_endproc
 1923              	.LFE100:
 1925              		.section	.text.S2LP_PCKT_GetAutoPacketFilteringState,"ax",%progbits
 1926              		.align	1
 1927              		.global	S2LP_PCKT_GetAutoPacketFilteringState
 1928              		.syntax unified
 1929              		.thumb
 1930              		.thumb_func
 1932              	S2LP_PCKT_GetAutoPacketFilteringState:
 1933              	.LFB101:
 320:S2LP_Driver/s2lp_packet.c **** 
 321:S2LP_Driver/s2lp_packet.c **** bool S2LP_PCKT_GetAutoPacketFilteringState(S2LP_Handle* handle) {
 1934              		.loc 1 321 65
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 16
 1937              		@ frame_needed = 1, uses_anonymous_args = 0
 1938 0000 80B5     		push	{r7, lr}
 1939              		.cfi_def_cfa_offset 8
 1940              		.cfi_offset 7, -8
 1941              		.cfi_offset 14, -4
 1942 0002 84B0     		sub	sp, sp, #16
 1943              		.cfi_def_cfa_offset 24
 1944 0004 00AF     		add	r7, sp, #0
 1945              		.cfi_def_cfa_register 7
 1946 0006 7860     		str	r0, [r7, #4]
 322:S2LP_Driver/s2lp_packet.c **** 	uint8_t const reg_val = S2LP_ReadRegister(handle, S2LP_REG_PROTOCOL1);
 1947              		.loc 1 322 26
 1948 0008 3A21     		movs	r1, #58
 1949 000a 7868     		ldr	r0, [r7, #4]
 1950 000c FFF7FEFF 		bl	S2LP_ReadRegister
 1951 0010 0346     		mov	r3, r0
 1952 0012 FB73     		strb	r3, [r7, #15]
 323:S2LP_Driver/s2lp_packet.c **** 	return GETBIT(reg_val, 0);
 1953              		.loc 1 323 9
ARM GAS  /tmp/ccsXq0gm.s 			page 40


 1954 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1955 0016 03F00103 		and	r3, r3, #1
 1956 001a 002B     		cmp	r3, #0
 1957 001c 14BF     		ite	ne
 1958 001e 0123     		movne	r3, #1
 1959 0020 0023     		moveq	r3, #0
 1960 0022 DBB2     		uxtb	r3, r3
 324:S2LP_Driver/s2lp_packet.c **** }
 1961              		.loc 1 324 1
 1962 0024 1846     		mov	r0, r3
 1963 0026 1037     		adds	r7, r7, #16
 1964              		.cfi_def_cfa_offset 8
 1965 0028 BD46     		mov	sp, r7
 1966              		.cfi_def_cfa_register 13
 1967              		@ sp needed
 1968 002a 80BD     		pop	{r7, pc}
 1969              		.cfi_endproc
 1970              	.LFE101:
 1972              		.text
 1973              	.Letext0:
 1974              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1975              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1976              		.file 4 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 1977              		.file 5 "S2LP_Driver/s2lp_constants.h"
 1978              		.file 6 "../../../lib/libhalglue/bshal/bshal_spim.h"
 1979              		.file 7 "S2LP_Driver/s2lp_mcu_interface.h"
ARM GAS  /tmp/ccsXq0gm.s 			page 41


DEFINED SYMBOLS
                            *ABS*:0000000000000000 s2lp_packet.c
     /tmp/ccsXq0gm.s:19     .text.S2LP_PCKT_SetPacketFormat:0000000000000000 $t
     /tmp/ccsXq0gm.s:25     .text.S2LP_PCKT_SetPacketFormat:0000000000000000 S2LP_PCKT_SetPacketFormat
     /tmp/ccsXq0gm.s:78     .text.S2LP_PCKT_SetPreambleType:0000000000000000 $t
     /tmp/ccsXq0gm.s:84     .text.S2LP_PCKT_SetPreambleType:0000000000000000 S2LP_PCKT_SetPreambleType
     /tmp/ccsXq0gm.s:137    .text.S2LP_PCKT_SetPreambleLength:0000000000000000 $t
     /tmp/ccsXq0gm.s:143    .text.S2LP_PCKT_SetPreambleLength:0000000000000000 S2LP_PCKT_SetPreambleLength
     /tmp/ccsXq0gm.s:219    .text.S2LP_PCKT_SetSyncLength:0000000000000000 $t
     /tmp/ccsXq0gm.s:225    .text.S2LP_PCKT_SetSyncLength:0000000000000000 S2LP_PCKT_SetSyncLength
     /tmp/ccsXq0gm.s:285    .text.S2LP_PCKT_SetPacketLength:0000000000000000 $t
     /tmp/ccsXq0gm.s:291    .text.S2LP_PCKT_SetPacketLength:0000000000000000 S2LP_PCKT_SetPacketLength
     /tmp/ccsXq0gm.s:346    .text.S2LP_PCKT_SetVariablePacketLengthState:0000000000000000 $t
     /tmp/ccsXq0gm.s:352    .text.S2LP_PCKT_SetVariablePacketLengthState:0000000000000000 S2LP_PCKT_SetVariablePacketLengthState
     /tmp/ccsXq0gm.s:408    .text.S2LP_PCKT_SetLengthFieldSize:0000000000000000 $t
     /tmp/ccsXq0gm.s:414    .text.S2LP_PCKT_SetLengthFieldSize:0000000000000000 S2LP_PCKT_SetLengthFieldSize
     /tmp/ccsXq0gm.s:477    .text.S2LP_PCKT_SetDestinationAddressState:0000000000000000 $t
     /tmp/ccsXq0gm.s:483    .text.S2LP_PCKT_SetDestinationAddressState:0000000000000000 S2LP_PCKT_SetDestinationAddressState
     /tmp/ccsXq0gm.s:539    .text.S2LP_PCKT_SetDestinationAddress:0000000000000000 $t
     /tmp/ccsXq0gm.s:545    .text.S2LP_PCKT_SetDestinationAddress:0000000000000000 S2LP_PCKT_SetDestinationAddress
     /tmp/ccsXq0gm.s:580    .text.S2LP_PCKT_SetSourceAddress:0000000000000000 $t
     /tmp/ccsXq0gm.s:586    .text.S2LP_PCKT_SetSourceAddress:0000000000000000 S2LP_PCKT_SetSourceAddress
     /tmp/ccsXq0gm.s:621    .text.S2LP_PCKT_SetPostambleLength:0000000000000000 $t
     /tmp/ccsXq0gm.s:627    .text.S2LP_PCKT_SetPostambleLength:0000000000000000 S2LP_PCKT_SetPostambleLength
     /tmp/ccsXq0gm.s:670    .text.S2LP_PCKT_SetCRCMode:0000000000000000 $t
     /tmp/ccsXq0gm.s:676    .text.S2LP_PCKT_SetCRCMode:0000000000000000 S2LP_PCKT_SetCRCMode
     /tmp/ccsXq0gm.s:729    .text.S2LP_PCKT_DisableDataCoding:0000000000000000 $t
     /tmp/ccsXq0gm.s:735    .text.S2LP_PCKT_DisableDataCoding:0000000000000000 S2LP_PCKT_DisableDataCoding
     /tmp/ccsXq0gm.s:792    .text.S2LP_PCKT_SetDataCoding:0000000000000000 $t
     /tmp/ccsXq0gm.s:798    .text.S2LP_PCKT_SetDataCoding:0000000000000000 S2LP_PCKT_SetDataCoding
     /tmp/ccsXq0gm.s:904    .text.S2LP_PCKT_SetDataWhiteningState:0000000000000000 $t
     /tmp/ccsXq0gm.s:910    .text.S2LP_PCKT_SetDataWhiteningState:0000000000000000 S2LP_PCKT_SetDataWhiteningState
     /tmp/ccsXq0gm.s:966    .text.S2LP_PCKT_SetCRCFilteringState:0000000000000000 $t
     /tmp/ccsXq0gm.s:972    .text.S2LP_PCKT_SetCRCFilteringState:0000000000000000 S2LP_PCKT_SetCRCFilteringState
     /tmp/ccsXq0gm.s:1028   .text.S2LP_PCKT_SetAutoPacketFilteringState:0000000000000000 $t
     /tmp/ccsXq0gm.s:1034   .text.S2LP_PCKT_SetAutoPacketFilteringState:0000000000000000 S2LP_PCKT_SetAutoPacketFilteringState
     /tmp/ccsXq0gm.s:1090   .text.S2LP_PCKT_SetDestinationAddressFilteringState:0000000000000000 $t
     /tmp/ccsXq0gm.s:1096   .text.S2LP_PCKT_SetDestinationAddressFilteringState:0000000000000000 S2LP_PCKT_SetDestinationAddressFilteringState
     /tmp/ccsXq0gm.s:1152   .text.S2LP_PCKT_GetPacketFormat:0000000000000000 $t
     /tmp/ccsXq0gm.s:1158   .text.S2LP_PCKT_GetPacketFormat:0000000000000000 S2LP_PCKT_GetPacketFormat
     /tmp/ccsXq0gm.s:1195   .text.S2LP_PCKT_GetPreambleType:0000000000000000 $t
     /tmp/ccsXq0gm.s:1201   .text.S2LP_PCKT_GetPreambleType:0000000000000000 S2LP_PCKT_GetPreambleType
     /tmp/ccsXq0gm.s:1238   .text.S2LP_PCKT_GetPreambleLength:0000000000000000 $t
     /tmp/ccsXq0gm.s:1244   .text.S2LP_PCKT_GetPreambleLength:0000000000000000 S2LP_PCKT_GetPreambleLength
     /tmp/ccsXq0gm.s:1298   .text.S2LP_PCKT_GetSyncLength:0000000000000000 $t
     /tmp/ccsXq0gm.s:1304   .text.S2LP_PCKT_GetSyncLength:0000000000000000 S2LP_PCKT_GetSyncLength
     /tmp/ccsXq0gm.s:1341   .text.S2LP_PCKT_GetTxPacketLength:0000000000000000 $t
     /tmp/ccsXq0gm.s:1347   .text.S2LP_PCKT_GetTxPacketLength:0000000000000000 S2LP_PCKT_GetTxPacketLength
     /tmp/ccsXq0gm.s:1393   .text.S2LP_PCKT_GetRxPacketLength:0000000000000000 $t
     /tmp/ccsXq0gm.s:1399   .text.S2LP_PCKT_GetRxPacketLength:0000000000000000 S2LP_PCKT_GetRxPacketLength
     /tmp/ccsXq0gm.s:1445   .text.S2LP_PCKT_GetVariablePacketLengthState:0000000000000000 $t
     /tmp/ccsXq0gm.s:1451   .text.S2LP_PCKT_GetVariablePacketLengthState:0000000000000000 S2LP_PCKT_GetVariablePacketLengthState
     /tmp/ccsXq0gm.s:1493   .text.S2LP_PCKT_GetLengthFieldSize:0000000000000000 $t
     /tmp/ccsXq0gm.s:1499   .text.S2LP_PCKT_GetLengthFieldSize:0000000000000000 S2LP_PCKT_GetLengthFieldSize
     /tmp/ccsXq0gm.s:1553   .text.S2LP_PCKT_GetDestinationAddressState:0000000000000000 $t
     /tmp/ccsXq0gm.s:1559   .text.S2LP_PCKT_GetDestinationAddressState:0000000000000000 S2LP_PCKT_GetDestinationAddressState
     /tmp/ccsXq0gm.s:1600   .text.S2LP_PCKT_GetDestinationAddress:0000000000000000 $t
ARM GAS  /tmp/ccsXq0gm.s 			page 42


     /tmp/ccsXq0gm.s:1606   .text.S2LP_PCKT_GetDestinationAddress:0000000000000000 S2LP_PCKT_GetDestinationAddress
     /tmp/ccsXq0gm.s:1638   .text.S2LP_PCKT_GetSourceAddress:0000000000000000 $t
     /tmp/ccsXq0gm.s:1644   .text.S2LP_PCKT_GetSourceAddress:0000000000000000 S2LP_PCKT_GetSourceAddress
     /tmp/ccsXq0gm.s:1676   .text.S2LP_PCKT_GetPostambleLength:0000000000000000 $t
     /tmp/ccsXq0gm.s:1682   .text.S2LP_PCKT_GetPostambleLength:0000000000000000 S2LP_PCKT_GetPostambleLength
     /tmp/ccsXq0gm.s:1714   .text.S2LP_PCKT_GetCRCMode:0000000000000000 $t
     /tmp/ccsXq0gm.s:1720   .text.S2LP_PCKT_GetCRCMode:0000000000000000 S2LP_PCKT_GetCRCMode
     /tmp/ccsXq0gm.s:1757   .text.S2LP_PCKT_GetDataCoding:0000000000000000 $t
     /tmp/ccsXq0gm.s:1763   .text.S2LP_PCKT_GetDataCoding:0000000000000000 S2LP_PCKT_GetDataCoding
     /tmp/ccsXq0gm.s:1832   .text.S2LP_PCKT_GetDataWhiteningState:0000000000000000 $t
     /tmp/ccsXq0gm.s:1838   .text.S2LP_PCKT_GetDataWhiteningState:0000000000000000 S2LP_PCKT_GetDataWhiteningState
     /tmp/ccsXq0gm.s:1879   .text.S2LP_PCKT_GetCRCFilteringState:0000000000000000 $t
     /tmp/ccsXq0gm.s:1885   .text.S2LP_PCKT_GetCRCFilteringState:0000000000000000 S2LP_PCKT_GetCRCFilteringState
     /tmp/ccsXq0gm.s:1926   .text.S2LP_PCKT_GetAutoPacketFilteringState:0000000000000000 $t
     /tmp/ccsXq0gm.s:1932   .text.S2LP_PCKT_GetAutoPacketFilteringState:0000000000000000 S2LP_PCKT_GetAutoPacketFilteringState
                           .group:0000000000000000 wm4.0.2a10468dd89b593cd64cc189d36e5bb7
                           .group:0000000000000000 wm4._newlib_version.h.4.529115dae5e4f67702b1de0b6e841f38
                           .group:0000000000000000 wm4.newlib.h.18.a58e9e86397e11d140a508f2e0db40b7
                           .group:0000000000000000 wm4.ieeefp.h.77.25247dc27dbe3b23bfe98c2dc18f6ac5
                           .group:0000000000000000 wm4.features.h.22.7877b139107948f7dadcf3660cc79cfd
                           .group:0000000000000000 wm4.config.h.224.18dfb280c62ae4ee788eb67b451eb1a6
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._ansi.h.8.aeadd4934928258a76627d21910677e3
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.stddef.h.267.6dda48f8b0edf141523347999dd9ec79
                           .group:0000000000000000 wm4.inttypes.h.28.684aa7736e7ecc9a6ffc44acc61c7a90
                           .group:0000000000000000 wm4.bit_helpers.h.13.f2975869ef099390daf1922e17c656db
                           .group:0000000000000000 wm4.stddef.h.39.82585dd3f3d03c4909f3d30d8739f57e
                           .group:0000000000000000 wm4.s2lp_mcu_interface.h.9.9eeee19d530c6ae696c504e7de7f49cd
                           .group:0000000000000000 wm4.s2lp_constants.h.9.b7f616e3835971b5021c80c1c98c29b7
                           .group:0000000000000000 wm4.stdbool.h.29.4a1c88fe569adb8d03217dd16982ca34
                           .group:0000000000000000 wm4.stm32f1xx.h.39.e8c98c5ce2cd95856eed179966374e12
                           .group:0000000000000000 wm4.stm32f103xb.h.38.ec967d5ad9d3269cb0788eebda048e38
                           .group:0000000000000000 wm4.cmsis_version.h.32.0f826810625204eca22a19868bdc7586
                           .group:0000000000000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.549e8fd988111c6b396c357ef98aeb59
                           .group:0000000000000000 wm4.core_cm3.h.127.aaed3d1df272b0aa79c526153017805c
                           .group:0000000000000000 wm4.stm32f103xb.h.573.10249aa7473ca93be896fed94046a725
                           .group:0000000000000000 wm4.stm32f1xx.h.162.96b09079a093c34dbd7f0b85cbd0ddee
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.24.fb218a6cd2ee35d840b3eac0f5fb4119
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.22.3d81dc02d9b9459e9eac6fdca7f8f18e
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.56.d1c3014f99fce17329ff5ab2921c0923
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.94.78ba4ec8cedd7ba94683a5fabb61b31e
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.21.8406672c8a3f21f71eb8441fb8ecb4bd
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1201.89d14cbb1b46fba2de70512ccfd8d5ce
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.21.0099da253a68660e916195d3e8928be3
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.21.93f1f3ec7660fa76375def81b976f73c
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.262.7df79220ec7519ba80c1763e6b4854a6
                           .group:0000000000000000 wm4.stm32f1xx_hal_exti.h.21.a7f1b393a0c9b2b56b72ccdbb8dee508
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.21.11e5a204ed6aa790b1cdae2e4192bc9d
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.21.d438f745b4c04dc23f9f569190526864
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.408.14794a3f8621230c9ac7fca0cacf3e57
                           .group:0000000000000000 wm4.stm32f1xx_hal_can.h.21.d1dd4a884a3983bc975efc64fbbd5748
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.21.6ab92041a8778f53d2d2d96b3825535a
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc.h.21.8ae5a06b46334619d54b2469802d6db6
ARM GAS  /tmp/ccsXq0gm.s 			page 43


                           .group:0000000000000000 wm4.stm32f1xx_hal_adc_ex.h.21.f5c9ba15472af26c826d75096ae3e02a
                           .group:0000000000000000 wm4.stm32f1xx_hal_crc.h.21.b5b5d61856236c32a5704a7db1b8c77f
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.21.6df147ac02cc6dec8c4706cc1a34879c
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.21.33e24ce7a8607e16d5a38297454fd963
                           .group:0000000000000000 wm4.stm32f1xx_hal_i2c.h.21.6a947c870feb456d84d10dd871ee01bd
                           .group:0000000000000000 wm4.stm32f1xx_hal_iwdg.h.21.14afe1e30714751a311b81d0791714c2
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.21.ec3e2cfd4c26fffa32fc4ff0a8ac7390
                           .group:0000000000000000 wm4.stm32f1xx_hal_rtc.h.21.833c91cab3eef49edc59fd371d3c1ce0
                           .group:0000000000000000 wm4.stm32f1xx_hal_rtc_ex.h.21.b671683f6728965b6d8404d04009ed32
                           .group:0000000000000000 wm4.stm32f1xx_hal_spi.h.21.59f3c581a47a8dea5d070b46998af27e
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.21.76f9d96f76cba41ae3b6e27311c6f5ff
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.21.ffd6508e5e0a88f651472e5c80a9d587
                           .group:0000000000000000 wm4.stm32f1xx_hal_usart.h.21.0b32d58c93817e5f10bce7603c316c1e
                           .group:0000000000000000 wm4.stm32f1xx_hal_irda.h.21.b44168150ccb55c331f6e6afe3cf4b88
                           .group:0000000000000000 wm4.stm32f1xx_hal_smartcard.h.21.d256a98de9ec7b58600da5aa4b29abdb
                           .group:0000000000000000 wm4.stm32f1xx_hal_wwdg.h.21.ac611fc4089566604f02b81297147d50
                           .group:0000000000000000 wm4.stm32f1xx_ll_usb.h.21.4cb0f3c145693f977427d01b787de0c7
                           .group:0000000000000000 wm4.stm32f1xx_hal_pcd.h.160.b1d545af3cea9ada15575c2dedd78cdc
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.87.60093b86a987865736d7cddecce3c235
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.158.bfed30416c9480cd13bc4a25427d538f
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.158.5f30652bb2ea05b142c1bbee9108c999
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18
                           .group:0000000000000000 wm4.bshal_i2cm.h.11.09ce5fde9ee09ba50563c37b9993575a

UNDEFINED SYMBOLS
S2LP_ReadRegister
S2LP_WriteRegister
S2LP_BatchReadRegisters
S2LP_BatchWriteRegisters

ARM GAS  /tmp/ccQ8G5Xf.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"arm_cpuid.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata
  16              		.align	2
  17              	.LC0:
  18 0000 436F7274 		.ascii	"Cortex-M%d r%dp%d\000"
  18      65782D4D 
  18      25642072 
  18      25647025 
  18      6400
  19              		.section	.text.cpuid,"ax",%progbits
  20              		.align	1
  21              		.global	cpuid
  22              		.arch armv7-m
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu softvfp
  28              	cpuid:
  29              	.LFB68:
  30              		.file 1 "../../lib/libhalglue/common/arm_cpuid.c"
   1:../../lib/libhalglue/common/arm_cpuid.c **** /*
   2:../../lib/libhalglue/common/arm_cpuid.c ****  File:		arm_cpuid.c
   3:../../lib/libhalglue/common/arm_cpuid.c ****  License: 	MIT
   4:../../lib/libhalglue/common/arm_cpuid.c **** 
   5:../../lib/libhalglue/common/arm_cpuid.c ****  Copyright (c) 2020 Andr√© van Schoubroeck
   6:../../lib/libhalglue/common/arm_cpuid.c **** 
   7:../../lib/libhalglue/common/arm_cpuid.c ****  Permission is hereby granted, free of charge, to any person obtaining a copy
   8:../../lib/libhalglue/common/arm_cpuid.c ****  of this software and associated documentation files (the "Software"), to deal
   9:../../lib/libhalglue/common/arm_cpuid.c ****  in the Software without restriction, including without limitation the rights
  10:../../lib/libhalglue/common/arm_cpuid.c ****  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:../../lib/libhalglue/common/arm_cpuid.c ****  copies of the Software, and to permit persons to whom the Software is
  12:../../lib/libhalglue/common/arm_cpuid.c ****  furnished to do so, subject to the following conditions:
  13:../../lib/libhalglue/common/arm_cpuid.c **** 
  14:../../lib/libhalglue/common/arm_cpuid.c ****  The above copyright notice and this permission notice shall be included in all
  15:../../lib/libhalglue/common/arm_cpuid.c ****  copies or substantial portions of the Software.
  16:../../lib/libhalglue/common/arm_cpuid.c **** 
  17:../../lib/libhalglue/common/arm_cpuid.c ****  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:../../lib/libhalglue/common/arm_cpuid.c ****  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:../../lib/libhalglue/common/arm_cpuid.c ****  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:../../lib/libhalglue/common/arm_cpuid.c ****  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:../../lib/libhalglue/common/arm_cpuid.c ****  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:../../lib/libhalglue/common/arm_cpuid.c ****  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  23:../../lib/libhalglue/common/arm_cpuid.c ****  SOFTWARE.
  24:../../lib/libhalglue/common/arm_cpuid.c ****  */
ARM GAS  /tmp/ccQ8G5Xf.s 			page 2


  25:../../lib/libhalglue/common/arm_cpuid.c **** 
  26:../../lib/libhalglue/common/arm_cpuid.c **** #include <stdint.h>
  27:../../lib/libhalglue/common/arm_cpuid.c **** #include <stdio.h>
  28:../../lib/libhalglue/common/arm_cpuid.c **** 
  29:../../lib/libhalglue/common/arm_cpuid.c **** #include "system.h"
  30:../../lib/libhalglue/common/arm_cpuid.c **** #include "arm_cpuid.h"
  31:../../lib/libhalglue/common/arm_cpuid.c **** #include <inttypes.h>
  32:../../lib/libhalglue/common/arm_cpuid.c **** 
  33:../../lib/libhalglue/common/arm_cpuid.c **** char* cpuid() {
  31              		.loc 1 33 15
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              		.cfi_def_cfa_offset 24
  41 0004 02AF     		add	r7, sp, #8
  42              		.cfi_def_cfa 7, 16
  34:../../lib/libhalglue/common/arm_cpuid.c **** 	static char buff[64] = "Unknown";
  35:../../lib/libhalglue/common/arm_cpuid.c **** 	// ARM v7m manual,page 702, section B4.1.2.
  36:../../lib/libhalglue/common/arm_cpuid.c **** 	// 0xE000ED00 // CPUID
  37:../../lib/libhalglue/common/arm_cpuid.c **** 	SCB->CPUID;
  43              		.loc 1 37 5
  44 0006 1A4B     		ldr	r3, .L4
  45 0008 1B68     		ldr	r3, [r3]
  38:../../lib/libhalglue/common/arm_cpuid.c **** 	cpuid_t *cpuid = (cpuid_t*) (&SCB->CPUID);
  46              		.loc 1 38 11
  47 000a 194B     		ldr	r3, .L4
  48 000c 7B60     		str	r3, [r7, #4]
  39:../../lib/libhalglue/common/arm_cpuid.c **** 	//
  40:../../lib/libhalglue/common/arm_cpuid.c **** 	if ((cpuid->PartNo & (0b11 << 10)) == (0b11 << 10)) {
  49              		.loc 1 40 12
  50 000e 7B68     		ldr	r3, [r7, #4]
  51 0010 1B88     		ldrh	r3, [r3]	@ movhi
  52 0012 C3F30B13 		ubfx	r3, r3, #4, #12
  53 0016 9BB2     		uxth	r3, r3
  54              		.loc 1 40 21
  55 0018 03F44063 		and	r3, r3, #3072
  56              		.loc 1 40 5
  57 001c B3F5406F 		cmp	r3, #3072
  58 0020 20D1     		bne	.L2
  41:../../lib/libhalglue/common/arm_cpuid.c **** 		// Cortex family
  42:../../lib/libhalglue/common/arm_cpuid.c **** 		if ((cpuid->PartNo & (0b10 << 4)) == (0b10 << 4)) {
  59              		.loc 1 42 13
  60 0022 7B68     		ldr	r3, [r7, #4]
  61 0024 1B88     		ldrh	r3, [r3]	@ movhi
  62 0026 C3F30B13 		ubfx	r3, r3, #4, #12
  63 002a 9BB2     		uxth	r3, r3
  64              		.loc 1 42 22
  65 002c 03F02003 		and	r3, r3, #32
  66              		.loc 1 42 6
  67 0030 002B     		cmp	r3, #0
  68 0032 17D0     		beq	.L2
  43:../../lib/libhalglue/common/arm_cpuid.c **** 			// Cortex M
ARM GAS  /tmp/ccQ8G5Xf.s 			page 3


  44:../../lib/libhalglue/common/arm_cpuid.c **** 			sprintf(buff, "Cortex-M%d r%dp%d", cpuid->PartNo & 0xF,
  69              		.loc 1 44 44
  70 0034 7B68     		ldr	r3, [r7, #4]
  71 0036 1B88     		ldrh	r3, [r3]	@ movhi
  72 0038 C3F30B13 		ubfx	r3, r3, #4, #12
  73 003c 9BB2     		uxth	r3, r3
  74              		.loc 1 44 4
  75 003e 03F00F02 		and	r2, r3, #15
  45:../../lib/libhalglue/common/arm_cpuid.c **** 					cpuid->Variant, cpuid->Revision);
  76              		.loc 1 45 11
  77 0042 7B68     		ldr	r3, [r7, #4]
  78 0044 9B78     		ldrb	r3, [r3, #2]
  79 0046 C3F30313 		ubfx	r3, r3, #4, #4
  80 004a DBB2     		uxtb	r3, r3
  44:../../lib/libhalglue/common/arm_cpuid.c **** 					cpuid->Variant, cpuid->Revision);
  81              		.loc 1 44 4
  82 004c 1946     		mov	r1, r3
  83              		.loc 1 45 27
  84 004e 7B68     		ldr	r3, [r7, #4]
  85 0050 1B78     		ldrb	r3, [r3]
  86 0052 C3F30303 		ubfx	r3, r3, #0, #4
  87 0056 DBB2     		uxtb	r3, r3
  44:../../lib/libhalglue/common/arm_cpuid.c **** 					cpuid->Variant, cpuid->Revision);
  88              		.loc 1 44 4
  89 0058 0093     		str	r3, [sp]
  90 005a 0B46     		mov	r3, r1
  91 005c 0549     		ldr	r1, .L4+4
  92 005e 0648     		ldr	r0, .L4+8
  93 0060 FFF7FEFF 		bl	sprintf
  94              	.L2:
  46:../../lib/libhalglue/common/arm_cpuid.c **** 		}
  47:../../lib/libhalglue/common/arm_cpuid.c **** 	}
  48:../../lib/libhalglue/common/arm_cpuid.c **** 	return buff;
  95              		.loc 1 48 9
  96 0064 044B     		ldr	r3, .L4+8
  49:../../lib/libhalglue/common/arm_cpuid.c **** 	// But the interesting part comes at 0xE000ED40 // ID_PFR0 (Processor Feature Register) and follow
  50:../../lib/libhalglue/common/arm_cpuid.c **** 	// We should be able to access it through
  51:../../lib/libhalglue/common/arm_cpuid.c **** 	SCB->PFR[0];
  52:../../lib/libhalglue/common/arm_cpuid.c **** 	SCB->PFR[1];
  53:../../lib/libhalglue/common/arm_cpuid.c **** 	/*
  54:../../lib/libhalglue/common/arm_cpuid.c **** 	 __IM  uint32_t PFR[2U];         		 //< Offset: 0x040 (R/ )  Processor Feature Register
  55:../../lib/libhalglue/common/arm_cpuid.c **** 	 __IM  uint32_t DFR;                    //< Offset: 0x048 (R/ )  Debug Feature Register
  56:../../lib/libhalglue/common/arm_cpuid.c **** 	 __IM  uint32_t ADR;                    //< Offset: 0x04C (R/ )  Auxiliary Feature Register
  57:../../lib/libhalglue/common/arm_cpuid.c **** 	 __IM  uint32_t MMFR[4U];               //< Offset: 0x050 (R/ )  Memory Model Feature Register
  58:../../lib/libhalglue/common/arm_cpuid.c **** 	 __IM  uint32_t ISAR[5U];               //< Offset: 0x060 (R/ )  Instruction Set Attributes Regist
  59:../../lib/libhalglue/common/arm_cpuid.c **** 	 */
  60:../../lib/libhalglue/common/arm_cpuid.c **** 
  61:../../lib/libhalglue/common/arm_cpuid.c **** }
  97              		.loc 1 61 1
  98 0066 1846     		mov	r0, r3
  99 0068 0837     		adds	r7, r7, #8
 100              		.cfi_def_cfa_offset 8
 101 006a BD46     		mov	sp, r7
 102              		.cfi_def_cfa_register 13
 103              		@ sp needed
 104 006c 80BD     		pop	{r7, pc}
 105              	.L5:
ARM GAS  /tmp/ccQ8G5Xf.s 			page 4


 106 006e 00BF     		.align	2
 107              	.L4:
 108 0070 00ED00E0 		.word	-536810240
 109 0074 00000000 		.word	.LC0
 110 0078 00000000 		.word	buff.0
 111              		.cfi_endproc
 112              	.LFE68:
 114              		.section	.text.extract_romtable_pid,"ax",%progbits
 115              		.align	1
 116              		.global	extract_romtable_pid
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 120              		.fpu softvfp
 122              	extract_romtable_pid:
 123              	.LFB69:
  62:../../lib/libhalglue/common/arm_cpuid.c **** 
  63:../../lib/libhalglue/common/arm_cpuid.c **** romtable_pid_t extract_romtable_pid(romtable_id_t *rid) {
 124              		.loc 1 63 57
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 56
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 2DE9B00F 		push	{r4, r5, r7, r8, r9, r10, fp}
 130              		.cfi_def_cfa_offset 28
 131              		.cfi_offset 4, -28
 132              		.cfi_offset 5, -24
 133              		.cfi_offset 7, -20
 134              		.cfi_offset 8, -16
 135              		.cfi_offset 9, -12
 136              		.cfi_offset 10, -8
 137              		.cfi_offset 11, -4
 138 0004 8FB0     		sub	sp, sp, #60
 139              		.cfi_def_cfa_offset 88
 140 0006 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
 142 0008 7863     		str	r0, [r7, #52]
 143 000a 3963     		str	r1, [r7, #48]
  64:../../lib/libhalglue/common/arm_cpuid.c **** 	return (romtable_pid_t ) { .pid = rid->pid0 << 0 | rid->pid1 << 8
 144              		.loc 1 64 46
 145 000c 3B6B     		ldr	r3, [r7, #48]
 146 000e 1A69     		ldr	r2, [r3, #16]
 147              		.loc 1 64 56
 148 0010 3B6B     		ldr	r3, [r7, #48]
 149 0012 5B69     		ldr	r3, [r3, #20]
 150              		.loc 1 64 63
 151 0014 1B02     		lsls	r3, r3, #8
 152              		.loc 1 64 51
 153 0016 1A43     		orrs	r2, r2, r3
  65:../../lib/libhalglue/common/arm_cpuid.c **** 					| rid->pid2 << 16 | rid->pid3 << 24
 154              		.loc 1 65 11
 155 0018 3B6B     		ldr	r3, [r7, #48]
 156 001a 9B69     		ldr	r3, [r3, #24]
 157              		.loc 1 65 18
 158 001c 1B04     		lsls	r3, r3, #16
 159              		.loc 1 65 6
 160 001e 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/ccQ8G5Xf.s 			page 5


 161              		.loc 1 65 29
 162 0020 3B6B     		ldr	r3, [r7, #48]
 163 0022 DB69     		ldr	r3, [r3, #28]
 164              		.loc 1 65 36
 165 0024 1B06     		lsls	r3, r3, #24
 166              		.loc 1 65 24
 167 0026 1343     		orrs	r3, r3, r2
 168 0028 0022     		movs	r2, #0
 169 002a BB62     		str	r3, [r7, #40]
 170 002c FA62     		str	r2, [r7, #44]
  66:../../lib/libhalglue/common/arm_cpuid.c **** 					| (uint64_t) rid->pid4 << 32 | (uint64_t) rid->pid5 << 40
 171              		.loc 1 66 22
 172 002e 3B6B     		ldr	r3, [r7, #48]
 173 0030 1B68     		ldr	r3, [r3]
 174              		.loc 1 66 8
 175 0032 0022     		movs	r2, #0
 176 0034 3B62     		str	r3, [r7, #32]
 177 0036 7A62     		str	r2, [r7, #36]
 178              		.loc 1 66 29
 179 0038 4FF00002 		mov	r2, #0
 180 003c 4FF00003 		mov	r3, #0
 181 0040 396A     		ldr	r1, [r7, #32]
 182 0042 0B00     		movs	r3, r1
 183 0044 0022     		movs	r2, #0
 184              		.loc 1 66 6
 185 0046 D7E90A01 		ldrd	r0, [r7, #40]
 186 004a 8446     		mov	ip, r0
 187 004c 4CEA020A 		orr	r10, ip, r2
 188 0050 41EA030B 		orr	fp, r1, r3
 189              		.loc 1 66 51
 190 0054 3B6B     		ldr	r3, [r7, #48]
 191 0056 5B68     		ldr	r3, [r3, #4]
 192              		.loc 1 66 37
 193 0058 0022     		movs	r2, #0
 194 005a BB61     		str	r3, [r7, #24]
 195 005c FA61     		str	r2, [r7, #28]
 196              		.loc 1 66 58
 197 005e 4FF00002 		mov	r2, #0
 198 0062 4FF00003 		mov	r3, #0
 199 0066 B969     		ldr	r1, [r7, #24]
 200 0068 0B02     		lsls	r3, r1, #8
 201 006a 0022     		movs	r2, #0
 202              		.loc 1 66 35
 203 006c 4AEA0208 		orr	r8, r10, r2
 204 0070 4BEA0309 		orr	r9, fp, r3
  67:../../lib/libhalglue/common/arm_cpuid.c **** 					| (uint64_t) rid->pid6 << 48 | (uint64_t) rid->pid7 << 56 } ;
 205              		.loc 1 67 22
 206 0074 3B6B     		ldr	r3, [r7, #48]
 207 0076 9B68     		ldr	r3, [r3, #8]
 208              		.loc 1 67 8
 209 0078 0022     		movs	r2, #0
 210 007a 3B61     		str	r3, [r7, #16]
 211 007c 7A61     		str	r2, [r7, #20]
 212              		.loc 1 67 29
 213 007e 4FF00002 		mov	r2, #0
 214 0082 4FF00003 		mov	r3, #0
 215 0086 3969     		ldr	r1, [r7, #16]
ARM GAS  /tmp/ccQ8G5Xf.s 			page 6


 216 0088 0B04     		lsls	r3, r1, #16
 217 008a 0022     		movs	r2, #0
 218              		.loc 1 67 6
 219 008c 48EA0204 		orr	r4, r8, r2
 220 0090 49EA0305 		orr	r5, r9, r3
 221              		.loc 1 67 51
 222 0094 3B6B     		ldr	r3, [r7, #48]
 223 0096 DB68     		ldr	r3, [r3, #12]
 224              		.loc 1 67 37
 225 0098 0022     		movs	r2, #0
 226 009a BB60     		str	r3, [r7, #8]
 227 009c FA60     		str	r2, [r7, #12]
 228              		.loc 1 67 58
 229 009e 4FF00002 		mov	r2, #0
 230 00a2 4FF00003 		mov	r3, #0
 231 00a6 B968     		ldr	r1, [r7, #8]
 232 00a8 0B06     		lsls	r3, r1, #24
 233 00aa 0022     		movs	r2, #0
 234              		.loc 1 67 35
 235 00ac 44EA0201 		orr	r1, r4, r2
 236 00b0 3960     		str	r1, [r7]
 237 00b2 2B43     		orrs	r3, r3, r5
 238 00b4 7B60     		str	r3, [r7, #4]
  64:../../lib/libhalglue/common/arm_cpuid.c **** 					| rid->pid2 << 16 | rid->pid3 << 24
 239              		.loc 1 64 9
 240 00b6 7B6B     		ldr	r3, [r7, #52]
 241 00b8 D7E90012 		ldrd	r1, [r7]
 242 00bc C3E90012 		strd	r1, [r3]
  68:../../lib/libhalglue/common/arm_cpuid.c **** 		}
 243              		.loc 1 68 3
 244 00c0 786B     		ldr	r0, [r7, #52]
 245 00c2 3C37     		adds	r7, r7, #60
 246              		.cfi_def_cfa_offset 28
 247 00c4 BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 00c6 BDE8B00F 		pop	{r4, r5, r7, r8, r9, r10, fp}
 251              		.cfi_restore 11
 252              		.cfi_restore 10
 253              		.cfi_restore 9
 254              		.cfi_restore 8
 255              		.cfi_restore 7
 256              		.cfi_restore 5
 257              		.cfi_restore 4
 258              		.cfi_def_cfa_offset 0
 259 00ca 7047     		bx	lr
 260              		.cfi_endproc
 261              	.LFE69:
 263              		.section	.data.buff.0,"aw"
 264              		.align	2
 267              	buff.0:
 268 0000 556E6B6E 		.ascii	"Unknown\000"
 268      6F776E00 
 269 0008 00000000 		.space	56
 269      00000000 
 269      00000000 
 269      00000000 
ARM GAS  /tmp/ccQ8G5Xf.s 			page 7


 269      00000000 
 270              		.text
 271              	.Letext0:
 272              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 273              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 274              		.file 4 "../../ext/STM32CubeF1/Drivers/CMSIS/Core/Include/core_cm3.h"
 275              		.file 5 "../../lib/libhalglue/common/arm_cpuid.h"
 276              		.file 6 "/usr/arm-none-eabi/include/stdio.h"
ARM GAS  /tmp/ccQ8G5Xf.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 arm_cpuid.c
     /tmp/ccQ8G5Xf.s:16     .rodata:0000000000000000 $d
     /tmp/ccQ8G5Xf.s:20     .text.cpuid:0000000000000000 $t
     /tmp/ccQ8G5Xf.s:28     .text.cpuid:0000000000000000 cpuid
     /tmp/ccQ8G5Xf.s:108    .text.cpuid:0000000000000070 $d
     /tmp/ccQ8G5Xf.s:267    .data.buff.0:0000000000000000 buff.0
     /tmp/ccQ8G5Xf.s:115    .text.extract_romtable_pid:0000000000000000 $t
     /tmp/ccQ8G5Xf.s:122    .text.extract_romtable_pid:0000000000000000 extract_romtable_pid
     /tmp/ccQ8G5Xf.s:264    .data.buff.0:0000000000000000 $d
                           .group:0000000000000000 wm4.0.1098e563ef56396ca346ad6c5e97276e
                           .group:0000000000000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:0000000000000000 wm4.ieeefp.h.77.af21f134a392aadc2c66139cb51ca3a9
                           .group:0000000000000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:0000000000000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
                           .group:0000000000000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.40cd3f2bfc456b193b790c2754690ebf
                           .group:0000000000000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:0000000000000000 wm4.stm32f1xx.h.39.e8c98c5ce2cd95856eed179966374e12
                           .group:0000000000000000 wm4.stm32f103xb.h.38.ec967d5ad9d3269cb0788eebda048e38
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.4f5798e999d5690b80e6ded3ecc94b37
                           .group:0000000000000000 wm4.core_cm3.h.127.f4474120f1a7524deb56f9d74ff175da
                           .group:0000000000000000 wm4.stm32f103xb.h.573.10249aa7473ca93be896fed94046a725
                           .group:0000000000000000 wm4.stm32f1xx.h.162.96b09079a093c34dbd7f0b85cbd0ddee
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.24.fb218a6cd2ee35d840b3eac0f5fb4119
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.91ba5b544a4c2be2620a1e7ff0049e10
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.57.41a4613fd5751fa2224a0bf945cee91b
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.95.21591bbc513aaa813c0b8640c3b32517
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.22.8763f99bc1e3e2dcf0febe9161d81b37
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1202.f8e5f9e0cf4eef7840facf5396029056
ARM GAS  /tmp/ccQ8G5Xf.s 			page 9


                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.22.fa638d688dcc57ca806fe6a7831b0d04
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.22.51a50ef3512cd78017ce666a32d364bf
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.263.f5ebf2f545ade59412ab9261c8e35dc4
                           .group:0000000000000000 wm4.stm32f1xx_hal_exti.h.22.e26491d042c8079c3ca67eca341af862
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.22.3c14338534886827bf3aeaa2a7f412a1
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.22.001ac4d7f81ccbdcae49bd65c13858c8
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.409.cafcd2cfe701091535636be537c18293
                           .group:0000000000000000 wm4.stm32f1xx_hal_can.h.22.9c5cbafab9070e25b2f93744f73f31d3
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.22.b5f4174bb6a50d95405567b8f50e0900
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc.h.23.7d9534ac2977bed50266ba8246ab0e90
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc_ex.h.22.3f3261b879b4e7059748d94dd89f7d18
                           .group:0000000000000000 wm4.stm32f1xx_hal_crc.h.22.87a86a55c6bcf304cab68a78bda4e4b0
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.22.5cea9a7210e6315b41724b47b5fdf203
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.22.d4e19c21f2a86fa2f8ec2c2d5f1ab2af
                           .group:0000000000000000 wm4.stm32f1xx_hal_i2c.h.22.ad52786857e2aa8ebdf15f14f11ce081
                           .group:0000000000000000 wm4.stm32f1xx_hal_iwdg.h.22.fb89d7d74008a11634b49f24b2a7251c
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.22.3438c476faafc3240bf146f143df3fcd
                           .group:0000000000000000 wm4.stm32f1xx_hal_rtc.h.22.2e6c4901b3fecdb0d30ea29b38e42312
                           .group:0000000000000000 wm4.stm32f1xx_hal_rtc_ex.h.22.7132215fff3c2f214804b30db0033252
                           .group:0000000000000000 wm4.stm32f1xx_hal_spi.h.22.b31d455e8b6e1263b36c3848e181fcd3
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.22.a16e206564e97dbace9faae59a0d6008
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.22.5f7992e497faa36aa98f09f7214f4dbb
                           .group:0000000000000000 wm4.stm32f1xx_hal_usart.h.22.2faa5f38db3b50ec6d148ec053db51df
                           .group:0000000000000000 wm4.stm32f1xx_hal_irda.h.22.d5842d01b8e511da8aab9dac5eab084d
                           .group:0000000000000000 wm4.stm32f1xx_hal_smartcard.h.22.910d31efb108bad068ed688d89837f4b
                           .group:0000000000000000 wm4.stm32f1xx_hal_wwdg.h.22.b35f34e70a149b77d65030a8695a70d2
                           .group:0000000000000000 wm4.stm32f1xx_ll_usb.h.22.573a89b5589ed8d93ea72c39c5d12974
                           .group:0000000000000000 wm4.stm32f1xx_hal_pcd.h.161.76733d98d42c8efa1b20a15947173729
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.88.91065c0692bed6019c34f1e9c00589fd
                           .group:0000000000000000 wm4.arm_cpuid.h.28.a837135f8fd99522010eba001d9b4220
                           .group:0000000000000000 wm4.inttypes.h.14.b28deb26920e51e0da310220ef0f9003
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.inttypes.h.28.684aa7736e7ecc9a6ffc44acc61c7a90

UNDEFINED SYMBOLS
sprintf

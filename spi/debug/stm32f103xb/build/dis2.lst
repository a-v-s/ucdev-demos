ARM GAS  /tmp/ccNNEMGL.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"dis2.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.bss.m_u8g2,"aw",%nobits
  16              		.align	2
  19              	m_u8g2:
  20 0000 00000000 		.space	152
  20      00000000 
  20      00000000 
  20      00000000 
  20      00000000 
  21              		.section	.text.display_init,"ax",%progbits
  22              		.align	1
  23              		.global	display_init
  24              		.arch armv7-m
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu softvfp
  30              	display_init:
  31              	.LFB65:
  32              		.file 1 "dis2.c"
   1:dis2.c        **** #include "system.h"
   2:dis2.c        **** 
   3:dis2.c        **** #include "u8x8_spi.h"
   4:dis2.c        **** #include "u8g2.h"
   5:dis2.c        **** #include "bshal_spim.h"
   6:dis2.c        **** 
   7:dis2.c        **** static u8g2_t m_u8g2;
   8:dis2.c        **** 
   9:dis2.c        **** 
  10:dis2.c        **** 
  11:dis2.c        **** void display_init(void) {
  33              		.loc 1 11 25
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 16
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 84B0     		sub	sp, sp, #16
  42              		.cfi_def_cfa_offset 24
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  12:dis2.c        **** 	static bshal_spim_t spi_config_screen;
ARM GAS  /tmp/ccNNEMGL.s 			page 2


  13:dis2.c        **** 	spi_config_screen.frequency = 10000000; 
  45              		.loc 1 13 30
  46 0006 2C4B     		ldr	r3, .L2
  47 0008 2C4A     		ldr	r2, .L2+4
  48 000a 1A61     		str	r2, [r3, #16]
  14:dis2.c        **** 	spi_config_screen.bit_order = 0; //MSB
  49              		.loc 1 14 30
  50 000c 2A4B     		ldr	r3, .L2
  51 000e 0022     		movs	r2, #0
  52 0010 1A73     		strb	r2, [r3, #12]
  15:dis2.c        **** 	spi_config_screen.mode = 0;
  53              		.loc 1 15 25
  54 0012 294B     		ldr	r3, .L2
  55 0014 0022     		movs	r2, #0
  56 0016 DA72     		strb	r2, [r3, #11]
  16:dis2.c        **** 
  17:dis2.c        **** 	spi_config_screen.hw_nr = 2; // SPI2
  57              		.loc 1 17 26
  58 0018 274B     		ldr	r3, .L2
  59 001a 0222     		movs	r2, #2
  60 001c 1A75     		strb	r2, [r3, #20]
  18:dis2.c        **** 	spi_config_screen.sck_pin = bshal_gpio_encode_pin(GPIOB, GPIO_PIN_13);	
  61              		.loc 1 18 30
  62 001e 4FF40051 		mov	r1, #8192
  63 0022 2748     		ldr	r0, .L2+8
  64 0024 FFF7FEFF 		bl	bshal_gpio_encode_pin
  65 0028 0346     		mov	r3, r0
  66              		.loc 1 18 28
  67 002a DAB2     		uxtb	r2, r3
  68 002c 224B     		ldr	r3, .L2
  69 002e 1A71     		strb	r2, [r3, #4]
  19:dis2.c        **** 	spi_config_screen.miso_pin = bshal_gpio_encode_pin(GPIOB, GPIO_PIN_14);
  70              		.loc 1 19 31
  71 0030 4FF48041 		mov	r1, #16384
  72 0034 2248     		ldr	r0, .L2+8
  73 0036 FFF7FEFF 		bl	bshal_gpio_encode_pin
  74 003a 0346     		mov	r3, r0
  75              		.loc 1 19 29
  76 003c DAB2     		uxtb	r2, r3
  77 003e 1E4B     		ldr	r3, .L2
  78 0040 9A71     		strb	r2, [r3, #6]
  20:dis2.c        **** 	spi_config_screen.mosi_pin = bshal_gpio_encode_pin(GPIOB, GPIO_PIN_15);
  79              		.loc 1 20 31
  80 0042 4FF40041 		mov	r1, #32768
  81 0046 1E48     		ldr	r0, .L2+8
  82 0048 FFF7FEFF 		bl	bshal_gpio_encode_pin
  83 004c 0346     		mov	r3, r0
  84              		.loc 1 20 29
  85 004e DAB2     		uxtb	r2, r3
  86 0050 194B     		ldr	r3, .L2
  87 0052 5A71     		strb	r2, [r3, #5]
  21:dis2.c        **** 	
  22:dis2.c        **** 
  23:dis2.c        **** 	spi_config_screen.nss_pin = bshal_gpio_encode_pin(GPIOA, GPIO_PIN_8);
  88              		.loc 1 23 30
  89 0054 4FF48071 		mov	r1, #256
  90 0058 1A48     		ldr	r0, .L2+12
ARM GAS  /tmp/ccNNEMGL.s 			page 3


  91 005a FFF7FEFF 		bl	bshal_gpio_encode_pin
  92 005e 0346     		mov	r3, r0
  93              		.loc 1 23 28
  94 0060 DAB2     		uxtb	r2, r3
  95 0062 154B     		ldr	r3, .L2
  96 0064 DA71     		strb	r2, [r3, #7]
  24:dis2.c        **** 	spi_config_screen.nrs_pin = bshal_gpio_encode_pin(GPIOB, GPIO_PIN_12);
  97              		.loc 1 24 30
  98 0066 4FF48051 		mov	r1, #4096
  99 006a 1548     		ldr	r0, .L2+8
 100 006c FFF7FEFF 		bl	bshal_gpio_encode_pin
 101 0070 0346     		mov	r3, r0
 102              		.loc 1 24 28
 103 0072 DAB2     		uxtb	r2, r3
 104 0074 104B     		ldr	r3, .L2
 105 0076 5A72     		strb	r2, [r3, #9]
  25:dis2.c        **** 	spi_config_screen.ncd_pin = -1;
 106              		.loc 1 25 28
 107 0078 0F4B     		ldr	r3, .L2
 108 007a FF22     		movs	r2, #255
 109 007c 1A72     		strb	r2, [r3, #8]
  26:dis2.c        **** 	spi_config_screen.irq_pin = -1;
 110              		.loc 1 26 28
 111 007e 0E4B     		ldr	r3, .L2
 112 0080 FF22     		movs	r2, #255
 113 0082 9A72     		strb	r2, [r3, #10]
  27:dis2.c        **** 
  28:dis2.c        **** 	bshal_spim_init(&spi_config_screen);
 114              		.loc 1 28 2
 115 0084 0C48     		ldr	r0, .L2
 116 0086 FFF7FEFF 		bl	bshal_spim_init
  29:dis2.c        **** 
  30:dis2.c        **** 	u8g2_Setup_st7920_s_128x64_f(&m_u8g2, U8G2_R0, bshal_u8x8_byte_spi, bshal_u8x8_gpio_and_delay);
 117              		.loc 1 30 2
 118 008a 0F4B     		ldr	r3, .L2+16
 119 008c 0F4A     		ldr	r2, .L2+20
 120 008e 1049     		ldr	r1, .L2+24
 121 0090 1048     		ldr	r0, .L2+28
 122 0092 FFF7FEFF 		bl	u8g2_Setup_st7920_s_128x64_f
  31:dis2.c        **** 	u8g2_SetUserPtr(&m_u8g2, &spi_config_screen);
 123              		.loc 1 31 2
 124 0096 0F4B     		ldr	r3, .L2+28
 125 0098 074A     		ldr	r2, .L2
 126 009a DA62     		str	r2, [r3, #44]
  32:dis2.c        **** 
  33:dis2.c        **** 	u8g2_InitDisplay(&m_u8g2);
 127              		.loc 1 33 2
 128 009c 0D48     		ldr	r0, .L2+28
 129 009e FFF7FEFF 		bl	u8x8_InitDisplay
  34:dis2.c        **** 	u8g2_SetPowerSave(&m_u8g2, 0);
 130              		.loc 1 34 2
 131 00a2 0021     		movs	r1, #0
 132 00a4 0B48     		ldr	r0, .L2+28
 133 00a6 FFF7FEFF 		bl	u8x8_SetPowerSave
  35:dis2.c        **** 
  36:dis2.c        **** 	char buff[16];
  37:dis2.c        **** 
ARM GAS  /tmp/ccNNEMGL.s 			page 4


  38:dis2.c        **** 	u8g2_ClearBuffer(&m_u8g2);
 134              		.loc 1 38 2
 135 00aa 0A48     		ldr	r0, .L2+28
 136 00ac FFF7FEFF 		bl	u8g2_ClearBuffer
  39:dis2.c        **** 
  40:dis2.c        **** }
 137              		.loc 1 40 1
 138 00b0 00BF     		nop
 139 00b2 1037     		adds	r7, r7, #16
 140              		.cfi_def_cfa_offset 8
 141 00b4 BD46     		mov	sp, r7
 142              		.cfi_def_cfa_register 13
 143              		@ sp needed
 144 00b6 80BD     		pop	{r7, pc}
 145              	.L3:
 146              		.align	2
 147              	.L2:
 148 00b8 00000000 		.word	spi_config_screen.0
 149 00bc 80969800 		.word	10000000
 150 00c0 000C0140 		.word	1073810432
 151 00c4 00080140 		.word	1073809408
 152 00c8 00000000 		.word	bshal_u8x8_gpio_and_delay
 153 00cc 00000000 		.word	bshal_u8x8_byte_spi
 154 00d0 00000000 		.word	u8g2_cb_r0
 155 00d4 00000000 		.word	m_u8g2
 156              		.cfi_endproc
 157              	.LFE65:
 159              		.section	.text.print,"ax",%progbits
 160              		.align	1
 161              		.global	print
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu softvfp
 167              	print:
 168              	.LFB66:
  41:dis2.c        **** 
  42:dis2.c        **** void print(char* str, int line) {
 169              		.loc 1 42 33
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 8
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 82B0     		sub	sp, sp, #8
 178              		.cfi_def_cfa_offset 16
 179 0004 00AF     		add	r7, sp, #0
 180              		.cfi_def_cfa_register 7
 181 0006 7860     		str	r0, [r7, #4]
 182 0008 3960     		str	r1, [r7]
  43:dis2.c        **** //	ucg_SetFont(&m_ucg, ucg_font_5x8_tf);
  44:dis2.c        **** //	ucg_SetFontMode(&m_ucg, UCG_FONT_MODE_TRANSPARENT);
  45:dis2.c        **** //	ucg_SetFontPosTop(&m_ucg);
  46:dis2.c        **** 
  47:dis2.c        **** 
ARM GAS  /tmp/ccNNEMGL.s 			page 5


  48:dis2.c        **** 	//u8g2_SetFont(&m_u8g2, u8g2_font_t0_15b_tf);
  49:dis2.c        **** 	u8g2_SetFont(&m_u8g2, u8g2_font_5x8_tf);
 183              		.loc 1 49 2
 184 000a 0949     		ldr	r1, .L5
 185 000c 0948     		ldr	r0, .L5+4
 186 000e FFF7FEFF 		bl	u8g2_SetFont
  50:dis2.c        **** 	//u8g2_SetFont(&m_u8g2, u8g2_font_5x7_tf);
  51:dis2.c        **** 	//u8g2_DrawStr(&m_u8g2, 0, (line+1) * 8, str);
  52:dis2.c        **** 	u8g2_DrawUTF8(&m_u8g2, 0, (line+1) * 8, str);
 187              		.loc 1 52 33
 188 0012 3B68     		ldr	r3, [r7]
 189 0014 0133     		adds	r3, r3, #1
 190              		.loc 1 52 2
 191 0016 9BB2     		uxth	r3, r3
 192 0018 DB00     		lsls	r3, r3, #3
 193 001a 9AB2     		uxth	r2, r3
 194 001c 7B68     		ldr	r3, [r7, #4]
 195 001e 0021     		movs	r1, #0
 196 0020 0448     		ldr	r0, .L5+4
 197 0022 FFF7FEFF 		bl	u8g2_DrawUTF8
  53:dis2.c        **** 
  54:dis2.c        **** }
 198              		.loc 1 54 1
 199 0026 00BF     		nop
 200 0028 0837     		adds	r7, r7, #8
 201              		.cfi_def_cfa_offset 8
 202 002a BD46     		mov	sp, r7
 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 002c 80BD     		pop	{r7, pc}
 206              	.L6:
 207 002e 00BF     		.align	2
 208              	.L5:
 209 0030 00000000 		.word	u8g2_font_5x8_tf
 210 0034 00000000 		.word	m_u8g2
 211              		.cfi_endproc
 212              	.LFE66:
 214              		.section	.text.framebuffer_apply,"ax",%progbits
 215              		.align	1
 216              		.global	framebuffer_apply
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	framebuffer_apply:
 223              	.LFB67:
  55:dis2.c        **** 
  56:dis2.c        **** void framebuffer_apply() {
 224              		.loc 1 56 26
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228 0000 80B5     		push	{r7, lr}
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccNNEMGL.s 			page 6


 233              		.cfi_def_cfa_register 7
  57:dis2.c        **** 	u8g2_UpdateDisplay(&m_u8g2);
 234              		.loc 1 57 2
 235 0004 0248     		ldr	r0, .L8
 236 0006 FFF7FEFF 		bl	u8g2_UpdateDisplay
  58:dis2.c        **** }
 237              		.loc 1 58 1
 238 000a 00BF     		nop
 239 000c 80BD     		pop	{r7, pc}
 240              	.L9:
 241 000e 00BF     		.align	2
 242              	.L8:
 243 0010 00000000 		.word	m_u8g2
 244              		.cfi_endproc
 245              	.LFE67:
 247              		.section	.text.draw_background,"ax",%progbits
 248              		.align	1
 249              		.global	draw_background
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu softvfp
 255              	draw_background:
 256              	.LFB68:
  59:dis2.c        **** 
  60:dis2.c        **** void draw_background(){
 257              		.loc 1 60 23
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 00AF     		add	r7, sp, #0
 266              		.cfi_def_cfa_register 7
  61:dis2.c        **** 	u8g2_ClearBuffer(&m_u8g2);
 267              		.loc 1 61 2
 268 0004 0248     		ldr	r0, .L11
 269 0006 FFF7FEFF 		bl	u8g2_ClearBuffer
  62:dis2.c        **** }
 270              		.loc 1 62 1
 271 000a 00BF     		nop
 272 000c 80BD     		pop	{r7, pc}
 273              	.L12:
 274 000e 00BF     		.align	2
 275              	.L11:
 276 0010 00000000 		.word	m_u8g2
 277              		.cfi_endproc
 278              	.LFE68:
 280              		.section	.text.draw_plain_background,"ax",%progbits
 281              		.align	1
 282              		.global	draw_plain_background
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu softvfp
ARM GAS  /tmp/ccNNEMGL.s 			page 7


 288              	draw_plain_background:
 289              	.LFB69:
  63:dis2.c        **** void draw_plain_background(){
 290              		.loc 1 63 29
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
  64:dis2.c        **** 	u8g2_ClearBuffer(&m_u8g2);
 300              		.loc 1 64 2
 301 0004 0248     		ldr	r0, .L14
 302 0006 FFF7FEFF 		bl	u8g2_ClearBuffer
  65:dis2.c        **** }
 303              		.loc 1 65 1
 304 000a 00BF     		nop
 305 000c 80BD     		pop	{r7, pc}
 306              	.L15:
 307 000e 00BF     		.align	2
 308              	.L14:
 309 0010 00000000 		.word	m_u8g2
 310              		.cfi_endproc
 311              	.LFE69:
 313              		.section	.text.set_565,"ax",%progbits
 314              		.align	1
 315              		.global	set_565
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu softvfp
 321              	set_565:
 322              	.LFB70:
  66:dis2.c        **** void set_565(){}
 323              		.loc 1 66 15
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0000 80B4     		push	{r7}
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 7, -4
 331 0002 00AF     		add	r7, sp, #0
 332              		.cfi_def_cfa_register 7
 333              		.loc 1 66 16
 334 0004 00BF     		nop
 335 0006 BD46     		mov	sp, r7
 336              		.cfi_def_cfa_register 13
 337              		@ sp needed
 338 0008 80BC     		pop	{r7}
 339              		.cfi_restore 7
 340              		.cfi_def_cfa_offset 0
 341 000a 7047     		bx	lr
 342              		.cfi_endproc
ARM GAS  /tmp/ccNNEMGL.s 			page 8


 343              	.LFE70:
 345              		.section	.bss.spi_config_screen.0,"aw",%nobits
 346              		.align	2
 349              	spi_config_screen.0:
 350 0000 00000000 		.space	24
 350      00000000 
 350      00000000 
 350      00000000 
 350      00000000 
 351              		.text
 352              	.Letext0:
 353              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 354              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 355              		.file 4 "../../ext/STM32CubeF1/Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 356              		.file 5 "../../ext/u8g2/csrc/u8x8.h"
 357              		.file 6 "../../ext/u8g2/csrc/u8g2.h"
 358              		.file 7 "../../lib/libhalglue/bshal/bshal_spim.h"
 359              		.file 8 "../../lib/libhalglue/bshal/extlib/u8x8_spi.h"
ARM GAS  /tmp/ccNNEMGL.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 dis2.c
     /tmp/ccNNEMGL.s:16     .bss.m_u8g2:0000000000000000 $d
     /tmp/ccNNEMGL.s:19     .bss.m_u8g2:0000000000000000 m_u8g2
     /tmp/ccNNEMGL.s:22     .text.display_init:0000000000000000 $t
     /tmp/ccNNEMGL.s:30     .text.display_init:0000000000000000 display_init
     /tmp/ccNNEMGL.s:148    .text.display_init:00000000000000b8 $d
     /tmp/ccNNEMGL.s:349    .bss.spi_config_screen.0:0000000000000000 spi_config_screen.0
     /tmp/ccNNEMGL.s:160    .text.print:0000000000000000 $t
     /tmp/ccNNEMGL.s:167    .text.print:0000000000000000 print
     /tmp/ccNNEMGL.s:209    .text.print:0000000000000030 $d
     /tmp/ccNNEMGL.s:215    .text.framebuffer_apply:0000000000000000 $t
     /tmp/ccNNEMGL.s:222    .text.framebuffer_apply:0000000000000000 framebuffer_apply
     /tmp/ccNNEMGL.s:243    .text.framebuffer_apply:0000000000000010 $d
     /tmp/ccNNEMGL.s:248    .text.draw_background:0000000000000000 $t
     /tmp/ccNNEMGL.s:255    .text.draw_background:0000000000000000 draw_background
     /tmp/ccNNEMGL.s:276    .text.draw_background:0000000000000010 $d
     /tmp/ccNNEMGL.s:281    .text.draw_plain_background:0000000000000000 $t
     /tmp/ccNNEMGL.s:288    .text.draw_plain_background:0000000000000000 draw_plain_background
     /tmp/ccNNEMGL.s:309    .text.draw_plain_background:0000000000000010 $d
     /tmp/ccNNEMGL.s:314    .text.set_565:0000000000000000 $t
     /tmp/ccNNEMGL.s:321    .text.set_565:0000000000000000 set_565
     /tmp/ccNNEMGL.s:346    .bss.spi_config_screen.0:0000000000000000 $d
                           .group:0000000000000000 wm4.0.1098e563ef56396ca346ad6c5e97276e
                           .group:0000000000000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.stm32f1xx.h.39.e8c98c5ce2cd95856eed179966374e12
                           .group:0000000000000000 wm4.stm32f103xb.h.38.ec967d5ad9d3269cb0788eebda048e38
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.4f5798e999d5690b80e6ded3ecc94b37
                           .group:0000000000000000 wm4.core_cm3.h.127.f4474120f1a7524deb56f9d74ff175da
                           .group:0000000000000000 wm4.stm32f103xb.h.573.10249aa7473ca93be896fed94046a725
                           .group:0000000000000000 wm4.stm32f1xx.h.162.96b09079a093c34dbd7f0b85cbd0ddee
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.24.fb218a6cd2ee35d840b3eac0f5fb4119
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.91ba5b544a4c2be2620a1e7ff0049e10
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.57.18d01ce1aa74e9fb44dbf16f821a574a
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.95.21591bbc513aaa813c0b8640c3b32517
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.22.8763f99bc1e3e2dcf0febe9161d81b37
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1202.f8e5f9e0cf4eef7840facf5396029056
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.22.fa638d688dcc57ca806fe6a7831b0d04
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.22.51a50ef3512cd78017ce666a32d364bf
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.263.f5ebf2f545ade59412ab9261c8e35dc4
                           .group:0000000000000000 wm4.stm32f1xx_hal_exti.h.22.e26491d042c8079c3ca67eca341af862
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.22.3c14338534886827bf3aeaa2a7f412a1
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.22.001ac4d7f81ccbdcae49bd65c13858c8
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.409.cafcd2cfe701091535636be537c18293
                           .group:0000000000000000 wm4.stm32f1xx_hal_can.h.22.9c5cbafab9070e25b2f93744f73f31d3
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.22.b5f4174bb6a50d95405567b8f50e0900
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc.h.23.7d9534ac2977bed50266ba8246ab0e90
                           .group:0000000000000000 wm4.stm32f1xx_hal_adc_ex.h.22.3f3261b879b4e7059748d94dd89f7d18
                           .group:0000000000000000 wm4.stm32f1xx_hal_crc.h.22.87a86a55c6bcf304cab68a78bda4e4b0
ARM GAS  /tmp/ccNNEMGL.s 			page 10


                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.22.5cea9a7210e6315b41724b47b5fdf203
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.22.d4e19c21f2a86fa2f8ec2c2d5f1ab2af
                           .group:0000000000000000 wm4.stm32f1xx_hal_i2c.h.22.ad52786857e2aa8ebdf15f14f11ce081
                           .group:0000000000000000 wm4.stm32f1xx_hal_iwdg.h.22.fb89d7d74008a11634b49f24b2a7251c
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.22.3438c476faafc3240bf146f143df3fcd
                           .group:0000000000000000 wm4.stm32f1xx_hal_rtc.h.22.2e6c4901b3fecdb0d30ea29b38e42312
                           .group:0000000000000000 wm4.stm32f1xx_hal_rtc_ex.h.22.7132215fff3c2f214804b30db0033252
                           .group:0000000000000000 wm4.stm32f1xx_hal_spi.h.22.b31d455e8b6e1263b36c3848e181fcd3
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.22.a16e206564e97dbace9faae59a0d6008
                           .group:0000000000000000 wm4.stm32f1xx_hal_uart.h.22.5f7992e497faa36aa98f09f7214f4dbb
                           .group:0000000000000000 wm4.stm32f1xx_hal_usart.h.22.2faa5f38db3b50ec6d148ec053db51df
                           .group:0000000000000000 wm4.stm32f1xx_hal_irda.h.22.d5842d01b8e511da8aab9dac5eab084d
                           .group:0000000000000000 wm4.stm32f1xx_hal_smartcard.h.22.910d31efb108bad068ed688d89837f4b
                           .group:0000000000000000 wm4.stm32f1xx_hal_wwdg.h.22.b35f34e70a149b77d65030a8695a70d2
                           .group:0000000000000000 wm4.stm32f1xx_ll_usb.h.22.573a89b5589ed8d93ea72c39c5d12974
                           .group:0000000000000000 wm4.stm32f1xx_hal_pcd.h.161.76733d98d42c8efa1b20a15947173729
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.88.91065c0692bed6019c34f1e9c00589fd
                           .group:0000000000000000 wm4.u8x8.h.86.cabc7409edfb1837158d17befff7110f
                           .group:0000000000000000 wm4.stdarg.h.31.b55da1089056868966f25de5dbfc7d3c
                           .group:0000000000000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:0000000000000000 wm4.cdefs.h.49.39045112216f6a021dbdffe3bf5accce
                           .group:0000000000000000 wm4.syslimits.h.34.de5cbd310098bc5895998b6bde577ed2
                           .group:0000000000000000 wm4.limits.h.9.70fb0ada6f71b16202a66baaa6d8ea70
                           .group:0000000000000000 wm4.limits.h.60.56a1ae353e2028a24298ec6463b8b593
                           .group:0000000000000000 wm4.u8x8.h.143.822f477279833be4088a86fb9f81d8c6
                           .group:0000000000000000 wm4.u8g2.h.77.171dd9fbb9bf5ec4dc8a7f60edfc7e1f
                           .group:0000000000000000 wm4.stdbool.h.29.4a1c88fe569adb8d03217dd16982ca34

UNDEFINED SYMBOLS
bshal_gpio_encode_pin
bshal_spim_init
u8g2_Setup_st7920_s_128x64_f
u8x8_InitDisplay
u8x8_SetPowerSave
u8g2_ClearBuffer
bshal_u8x8_gpio_and_delay
bshal_u8x8_byte_spi
u8g2_cb_r0
u8g2_SetFont
u8g2_DrawUTF8
u8g2_font_5x8_tf
u8g2_UpdateDisplay
